%!PS-Adobe-3.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - GUI-SRM.DOC
%%BoundingBox: 18 9 593 784
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand
16#8A/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright
16#93/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#98/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright
16#9C/oe 16#9F/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency
16#A5/yen 16#A6/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright
16#AA/ordfeminine 16#AB/guillemotleft 16#AC/logicalnot 16#AD/hyphen
16#AE/registered 16#AF/macron 16#B0/degree 16#B1/plusminus 16#B2/twosuperior
16#B3/threesuperior 16#B4/acute 16#B5/mu 16#B6/paragraph 16#B7/periodcentered
16#B8/cedilla 16#B9/onesuperior 16#BA/ordmasculine 16#BB/guillemotright
16#BC/onequarter 16#BD/onehalf 16#BE/threequarters 16#BF/questiondown
16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex 16#C3/Atilde 16#C4/Adieresis
16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA
/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex
16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4
/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute
16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex
16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8
/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave
16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde
16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis
16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex
16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis ] def/reencdict
12 dict def/IsChar{basefontdict/CharStrings get exch known}bd/MapCh{dup
IsChar not{pop/bullet}if newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0
/degree IsChar{/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar
IsChar{/brokenbar}{/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname
ed/basefontname ed FontDirectory newfontname known not{/basefontdict
basefontname findfont def/newfont basefontdict maxlength dict def basefontdict{exch
dup/FID ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll
put}{exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont
/FontName newfontname put 127 1 159{newfont/Encoding get exch/bullet
put}for ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree
MapBB newfontname newfont definefont pop}if newfontname end}bd/SB{FC
/ULlen ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed
/dxGdi ed/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1
mul x1 x1 mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch
y1 mul cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra
ed/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
statusdict begin 0 setjobtimeout end
statusdict begin statusdict /jobname (Microsoft Word - GUI-SRM.DOC) put end
/oldDictCnt countdictstack def {}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
/oldDictCnt countdictstack def {letter
}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
[
{mark 1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0 counttomark dup 3 add -1 roll exch 2 sub mul dup floor cvi dup 3 1 roll sub exch dup  3 add index exch 2 add index dup 4 1 roll sub mul add counttomark 1 add 1 roll  cleartomark } bind
/exec load currenttransfer /exec load] cvx settransfer
%%EndSetup
%%Page: 1 1
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
982 269 435 (JFT-145-1-GUI.SRM) 435 SB
1027 387 346 (30-September-94) 346 SB
802 564 795 (SOFTWARE REFERENCE MANUAL) 795 SB
1096 682 207 (FOR THE) 207 SB
776 800 847 (GRAPHICAL USER INTERFACE \(GUI\)) 847 SB
1113 918 174 (OF THE) 174 SB
339 1036 1722 (ADA DISTRIBUTED INTERACTIVE SIMULATION \(ADIS\) SUPPORT SYSTEM) 1722 SB
805 1154 790 (CONTRACT NO.  N00421-92-D-0028) 790 SB
879 1272 642 (CDRL SEQUENCE NO:  A009) 642 SB
1068 1508 263 (Prepared for:) 263 SB
630 1626 1140 (Naval Air Warfare Center, Aircraft Division \(NAWCAD\)) 1140 SB
737 1685 926 (Systems Engineering Test Directorate \(SETD\)) 926 SB
879 1744 642 (Manned Flight Simulator \(MFS\)) 642 SB
1074 1921 252 (Prepared by:) 252 SB
1034 2039 331 (J. F. Taylor, Inc.) 331 SB
972 2098 455 (Rt. 235 and Maple Rd.) 455 SB
918 2157 564 (Lexington Park, MD  20653) 564 SB
0 0 0 fC
/fm 256 def
5 17 193 2273 B
1 F
n
/fm 256 def
17 5 193 2273 B
1 F
n
/fm 256 def
5 5 205 2285 B
1 F
n
/fm 256 def
5 5 205 2285 B
1 F
n
/fm 256 def
889 5 211 2273 B
1 F
n
/fm 256 def
889 5 211 2285 B
1 F
n
/fm 256 def
17 5 1101 2273 B
1 F
n
/fm 256 def
17 5 1101 2285 B
1 F
n
/fm 256 def
874 5 1119 2273 B
1 F
n
/fm 256 def
874 5 1119 2285 B
1 F
n
/fm 256 def
5 17 2006 2273 B
1 F
n
/fm 256 def
17 5 1994 2273 B
1 F
n
/fm 256 def
5 5 1994 2285 B
1 F
n
/fm 256 def
5 5 1994 2285 B
1 F
n
/fm 256 def
5 294 193 2291 B
1 F
n
/fm 256 def
5 294 205 2291 B
1 F
n
/fm 256 def
2 294 1101 2291 B
1 F
n
/fm 256 def
5 294 1994 2291 B
1 F
n
/fm 256 def
5 294 2006 2291 B
1 F
n
gs 890 77 211 2273 CB
476 2293 352 (Authenticated by:) 352 SB
gr
gs 890 77 211 2509 CB
436 2529 433 (\(Contracting Agency\)) 433 SB
gr
gs 890 77 1104 2273 CB
1416 2293 273 (Approved by:) 273 SB
gr
gs 890 77 1104 2509 CB
1427 2529 251 (\(Contractor\)) 251 SB
gr
/fm 256 def
5 2 205 2586 B
1 F
n
/fm 256 def
5 2 193 2586 B
1 F
n
/fm 256 def
889 2 211 2586 B
1 F
n
/fm 256 def
2 2 1101 2586 B
1 F
n
/fm 256 def
889 2 1104 2586 B
1 F
n
/fm 256 def
5 2 2006 2586 B
1 F
n
/fm 256 def
5 2 1994 2586 B
1 F
n
/fm 256 def
5 176 193 2589 B
1 F
n
/fm 256 def
5 176 205 2589 B
1 F
n
/fm 256 def
5 17 193 2766 B
1 F
n
/fm 256 def
17 5 193 2778 B
1 F
n
/fm 256 def
5 5 205 2766 B
1 F
n
/fm 256 def
5 5 205 2766 B
1 F
n
/fm 256 def
889 5 211 2766 B
1 F
n
/fm 256 def
889 5 211 2778 B
1 F
n
/fm 256 def
2 176 1101 2589 B
1 F
n
/fm 256 def
17 5 1101 2766 B
1 F
n
/fm 256 def
17 5 1101 2778 B
1 F
n
/fm 256 def
874 5 1119 2766 B
1 F
n
/fm 256 def
874 5 1119 2778 B
1 F
n
/fm 256 def
5 176 1994 2589 B
1 F
n
/fm 256 def
5 176 2006 2589 B
1 F
n
/fm 256 def
5 17 2006 2766 B
1 F
n
/fm 256 def
17 5 1994 2778 B
1 F
n
/fm 256 def
5 5 1994 2766 B
1 F
n
/fm 256 def
5 5 1994 2766 B
1 F
n
gs 890 62 211 2704 CB
588 2709 129 (\(Date\)) 129 SB
gr
gs 890 62 1104 2704 CB
1488 2709 129 (\(Date\)) 129 SB
gr
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Roman
%%Page: 2 2
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: 
%%Page: 3 3
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
837 119 726 (JFT-145-GUI.SRM-V1, Rev. B, 30-Sept-94) 726 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1188 3060 24 (ii) 24 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
931 269 538 (TABLE OF CONTENTS) 538 SB
225 387 510 (What is the ADIS GUI?) 510 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
741 388 416 (................................) 416 SB
1157 388 416 (................................) 416 SB
1573 388 377 (.............................) 377 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 388 25 (1) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 447 810 (What is needed to use the ADIS GUI?) 810 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1196 448 416 (................................) 416 SB
1612 448 338 (..........................) 338 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 448 25 (1) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 507 1055 (What do you need to know to use the ADIS GUI?) 1055 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1430 508 416 (................................) 416 SB
1846 508 104 (........) 104 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 508 25 (1) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 567 673 (How does the ADIS GUI work?) 673 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
910 568 416 (................................) 416 SB
1326 568 416 (................................) 416 SB
1742 568 208 (................) 208 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 568 25 (1) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 627 263 (XDG Server) 263 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
650 628 416 (................................) 416 SB
1066 628 416 (................................) 416 SB
1482 628 416 (................................) 416 SB
1898 628 52 (....) 52 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 628 25 (1) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 687 254 (XDG Client) 254 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
637 688 416 (................................) 416 SB
1053 688 416 (................................) 416 SB
1469 688 416 (................................) 416 SB
1885 688 65 (.....) 65 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 688 25 (2) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 747 103 (XOS) 103 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
481 748 416 (................................) 416 SB
897 748 416 (................................) 416 SB
1313 748 416 (................................) 416 SB
1729 748 221 (.................) 221 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 748 25 (2) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 807 349 (Special Features) 349 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
728 808 416 (................................) 416 SB
1144 808 416 (................................) 416 SB
1560 808 390 (..............................) 390 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 808 25 (2) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 867 799 (How do you bring up the ADIS GUI?) 799 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1183 868 416 (................................) 416 SB
1599 868 351 (...........................) 351 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 868 25 (2) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 927 815 (How do you configure the ADIS GUI?) 815 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1196 928 416 (................................) 416 SB
1612 928 338 (..........................) 338 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 928 25 (2) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 987 765 (How do you control the ADIS GUI?) 765 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1144 988 416 (................................) 416 SB
1560 988 390 (..............................) 390 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 988 25 (3) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1047 902 (What does each unit in the ADIS GUI do?) 902 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1131 1048 416 (................................) 416 SB
1547 1048 403 (...............................) 403 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 1048 25 (3) 25 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 4 4
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
0 0 0 fC
225 269 510 (What is the ADIS GUI?) 510 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 328 1684 (The ADIS GUI provides the DIS Gateway \(DG\) and the Ordnance Server \(OS\) with) 1684 SB
225 387 1923 (graphical user interfaces which are consistent and easy to use. These graphical user interfaces are) 1923 SB
225 446 1349 (written using the X Window System version X11R5 with Motif 1.2.) 1349 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 623 810 (What is needed to use the ADIS GUI?) 810 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 682 1811 (The ADIS GUI was developed on a Silicon Graphics Indigo R4000 running IRIX 5.2.  The) 1811 SB
225 741 1890 (ADIS GUI code compiles using Verdix Ada Compiler 6.2.1 and the X Window System version) 1890 SB
225 800 1949 (X11R5 with Motif 1.2.  Therefore, this documentation assumes you have a working knowledge of) 1949 SB
225 859 1890 (Ada, the X Window System, and Motif.  Three separate ADIS GUI executables exist, one each) 1890 SB
225 918 1891 (for the DG Server, the DG Client, and the OS. The DG Server GUI \(XDGS\) allows the user to) 1891 SB
225 977 1903 (configure and control the DG Server. The DG Client GUI \(XDGC\) allows the user to configure) 1903 SB
225 1036 1913 (and control the DG Client. The OS GUI \(XOS\) allows the user to configure and control the OS.) 1913 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1213 1055 (What do you need to know to use the ADIS GUI?) 1055 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 1272 1214 (A working knowledge of graphical user interfaces is necessar) 1214 SB
1514 1272 547 (y to use the ADIS GUIs. In) 547 SB
225 1331 1934 (particular, the user must understand the basics of using an application whose interface is based on) 1934 SB
225 1390 462 (the X Window System.) 462 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1567 673 (How does the ADIS GUI work?) 673 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 1626 1789 (The user may open or save configuration files by selecting the appropriate option from the) 1789 SB
225 1685 1922 (\223File\224 menu. You can quit the ADIS GUI application by selecting the \223Quit\224 menu item from the) 1922 SB
225 1744 250 (\223File\224 menu.) 250 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1803 275 (XDG_Server) 275 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 1862 1251 (The user may shut down the DG Server and quit the XDG_Ser) 1251 SB
1551 1862 455 (ver GUI application by) 455 SB
225 1921 1314 (selecting the \223Shutdown Server\224 menu item from the \223File\224 menu.) 1314 SB
300 1980 1773 (The \223XDG Server\224 menu contains three items: \223Set Parameters,\224 \223Monitors,\224 and \223Error) 1773 SB
225 2039 187 (Notices.\224) 187 SB
300 2098 1776 (When the user selects the \223Set Parameters\224 menu item from the \223XDG Server\224 menu, the) 1776 SB
225 2157 1809 (\223XDG Server Set Parameters\224 window is displayed. A list of buttons on the left side of this) 1809 SB
225 2216 1899 (window allows the user to select groups of parameters that may be changed. When one of these) 1899 SB
225 2275 1725 (buttons is pressed, a panel of data entry fields and option menus \(as appropriate for the) 1725 SB
225 2334 1902 (parameters being displayed\) appears on the right side of this window. When the mouse cursor is) 1902 SB
225 2393 1950 (positioned over any data entry field or option menu, help for that item will be displayed in the field) 1950 SB
225 2452 1942 (labeled \223Help\224: at the bottom of the screen. Typing a new value into a data entry field or selecting) 1942 SB
225 2511 1924 (an item from an option menu will change that value in the DG Server when the \223Apply\224 button is) 1924 SB
225 2570 1833 (pressed. Pressing the button labeled \223Apply\224 at the bottom right of the window will send the) 1833 SB
225 2629 1876 (values of all changed parameters to the DG Server. Pressing the button labeled \223Cancel\224 at the) 1876 SB
225 2688 1884 (bottom left of the window will abort all changes \(the fields will hold their values\) and close this) 1884 SB
225 2747 172 (window.) 172 SB
300 2806 1802 (When the user selects the \223Monitors\224 menu item from the \223XDG Server\224 menu, the \223XDG) 1802 SB
225 2865 1851 (Server Monitors\224 window is displayed. The setup of this window is very similar to that of the) 1851 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 5 5
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1187 3060 25 (2) 25 SB
225 269 1897 (\223XDG Server Set Parameters\224 window described above, except that the data displayed may not) 1897 SB
225 328 627 (be edited; it is for viewing only.) 627 SB
300 387 1750 (When the user selects the \223Error Notices\224 menu item from the \223XDG Server\224 menu, the) 1750 SB
225 446 1912 (\223XDG Server Error Notices Monitor\224 window is displayed. This window displays all DG Server) 1912 SB
225 505 1840 (errors with the time of the occurrence of each error. The user can scroll back to see previous) 1840 SB
225 564 1469 (errors, and the display will automatically display new errors as they occur.) 1469 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 623 266 (XDG_Client) 266 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 682 1630 (The operation of the XDG_Client GUI application is nearly identical to that of the) 1630 SB
225 741 1752 (XDG_Server GUI application. Please refer to the section describing the operation of the) 1752 SB
225 800 1410 (XDG_Client GUI application above and note the following exceptions.) 1410 SB
300 859 1831 (The XDG_Client GUI application does not contain the option \223Shutdown Server\224 under the) 1831 SB
225 918 1843 (\223File\224 menu. The \223XDG Client Set Parameters\224 window of the XDG_Client GUI application) 1843 SB
225 977 1753 (contains different panels than that of the XDG_Server GUI application, but they operate) 1753 SB
225 1036 214 (identically.) 214 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1095 103 (XOS) 103 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 1154 1857 (The operation of the XOS GUI application is nearly identical to that of the XDG_Server GUI) 1857 SB
225 1213 1740 (application. Please refer to the section describing the operation of the XDG_Client GUI) 1740 SB
225 1272 973 (application above, with the following exceptions.) 973 SB
300 1331 1864 (The XOS GUI application XDG_Client GUI application contains several windows used to set) 1864 SB
225 1390 1906 (parameters. These include \223XOS Set Simulation Parameters," \223XOS Set Ordnance Parameters,") 1906 SB
225 1449 1801 (and \223XOS Set General Parameters.\224 The windows of the XOS GUI application used to set) 1801 SB
225 1508 1898 (parameters contain different panels than the \223Set Parameters\224 window of the XDG_Server GUI) 1898 SB
225 1567 1830 (application, but they operate identically, with one major exception. The \223XOS Set Ordnance) 1830 SB
225 1626 1818 (Parameters\224 window contains two new buttons at the bottom center of the window, labeled) 1818 SB
225 1685 1898 (\223Previous\224 and \223Next." The buttons allow the user to navigate through the munitions list and to) 1898 SB
225 1744 1291 (display and edit parameters for all munitions in the munitions list.) 1291 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1921 349 (Special Features) 349 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 1980 1774 (The ADIS GUI attempts to prevent the user from entering invalid values in the input data) 1774 SB
225 2039 1944 (fields by restricting the input to fit the appropriate type. For example, the user can only enter valid) 1944 SB
225 2098 623 (integers in an integer data field.) 623 SB
300 2157 1868 (Each data field of the ADIS GUI displays context sensitive help in a special \223Help\224 field at the) 1868 SB
225 2216 1679 (bottom of each window whenever the mouse cursor is positioned over the data field.) 1679 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2393 799 (How do you bring up the ADIS GUI?) 799 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 2452 1694 (The XDG Server GUI is executed by typing \223XDG_Server\224 at the command prompt,) 1694 SB
225 2511 1775 (assuming that the user is in the directory in which the XDG_Server application is located.) 1775 SB
300 2570 1718 (The XDG Client GUI is automatically executed by the DG; the user does not manually) 1718 SB
225 2629 823 (execute the XDG Client GUI application.) 823 SB
300 2688 1810 (The XOS GUI is automatically executed by the OS; the user does not manually execute the) 1810 SB
225 2747 445 (XOS GUI application.) 445 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2806 815 (How do you configure the ADIS GUI?) 815 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 6 6
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1187 3060 25 (3) 25 SB
300 269 1720 (Please refer to the DG SRM and the OS SRM for information on how to configure the) 1720 SB
225 328 472 (appropriate ADIS GUI.) 472 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 505 765 (How do you control the ADIS GUI?) 765 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 564 1822 (Please refer to the above section entitled \223How does the ADIS GUI work?\224 to learn how to) 1822 SB
225 623 460 (control the ADIS GUI.) 460 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 800 902 (What does each unit in the ADIS GUI do?) 902 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 859 1905 (Below is a break down of the ADIS GUIs into their respective packages and units. The package) 1905 SB
225 918 1916 (name \(with the filename of its spec and body, and with the purpose of the package\) is given first.) 1916 SB
225 977 1941 (The \223\(_\)\224 indicates a spec and body both exist; the spec filename uses an underscore and the body) 1941 SB
225 1036 1880 (does not. In the event that only a spec or body exists, its filename will be listed with or without) 1880 SB
225 1095 1819 (the underscore as appropriate. Following the package information, the filename of each unit) 1819 SB
225 1154 1070 (within the package, as well as its purpose, is included.) 1070 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1272 166 (Utilities) 166 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1879 1331 296 (Utilities\(_\).ada) 296 SB
300 1390 1748 (The Utilities package holds frequently used, general-purpose, units. These units perform) 1748 SB
300 1449 1382 (conversions and other manipulations on strings and simple data types.) 1382 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1508 90 (Min) 90 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1938 1567 237 (Utilities.ada) 237 SB
375 1626 1198 (This function returns the minimum of the two passed values.) 1198 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1685 97 (Max) 97 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1938 1744 237 (Utilities.ada) 237 SB
375 1803 1208 (This function returns the maximum of the two passed values.) 1208 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1862 509 (String_To_Float_String) 509 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1437 1921 738 (Utilities_String_To_Float_String.ada) 738 SB
375 1980 1724 (This procedure converts the string passed in and ensures that is in a properly formatted) 1724 SB
375 2039 248 (float format.) 248 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2098 553 (String_To_Integer_String) 553 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1397 2157 778 (Utilities_String_To_Integer_String.ada) 778 SB
375 2216 1724 (This procedure converts the string passed in and ensures that is in a properly formatted) 1724 SB
375 2275 295 (integer format.) 295 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2334 674 (String_To_Hexadecimal_String) 674 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1283 2393 892 (Utilities_String_To_Hexadecimal_String.ada) 892 SB
375 2452 1764 (This procedure converts the string passed in and ensures that it is in a properly formatted) 1764 SB
375 2511 402 (hexadecimal format.) 402 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2570 546 (String_To_Binary_String) 546 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1408 2629 767 (Utilities_String_To_Binary_String.ada) 767 SB
375 2688 1764 (This procedure converts the string passed in and ensures that it is in a properly formatted) 1764 SB
375 2747 280 (binary format.) 280 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 7 7
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1187 3060 25 (4) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 391 (Length_Of_String) 391 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1551 328 624 (Utilities_Length_Of_String.ada) 624 SB
375 387 1721 (This procedure returns the number of characters in the passed string until the character) 1721 SB
375 446 1498 (ASCII.NUL is reached. This is useful since strings are null-terminated in X.) 1498 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 505 520 (Get_Integer_From_Text) 520 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1424 564 751 (Utilities_Get_Integer_From_Text.ada) 751 SB
375 623 1717 (This procedure returns the integer equivalent of the passed text. A BOOLEAN True is) 1717 SB
375 682 1763 (returned in Success if the procedure can extract an integer, and False is returned if it fails) 1763 SB
375 741 1410 (\(i.e., the text string is null, empty, or contains an invalid integer string.\)) 1410 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 800 476 (Get_Float_From_Text) 476 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1464 859 711 (Utilities_Get_Float_From_Text.ada) 711 SB
375 918 1670 (This procedure returns the float equivalent of the passed text. A BOOLEAN True is) 1670 SB
375 977 1795 (returned in Success if the procedure can extract a float, and False is returned if it fails \(i.e.,) 1795 SB
375 1036 1260 (the text string is null, empty, or contains an invalid float string.\)) 1260 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1095 641 (Get_Hexadecimal_From_Text) 641 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1310 1154 865 (Utilities_Get_Hexadecimal_From_Text.ada) 865 SB
375 1213 1697 (This procedure returns the integer equivalent of the passed hexadecimal string text. A) 1697 SB
375 1272 1768 (BOOLEAN True is returned in Success if the procedure can extract an integer, and False) 1768 SB
375 1331 1759 (is returned if it fails \(i.e., the text string is null, empty, or contains an invalid hexadecimal) 1759 SB
375 1390 142 (string.\)) 142 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1449 513 (Get_Binary_From_Text) 513 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1435 1508 740 (Utilities_Get_Binary_From_Text.ada) 740 SB
375 1567 1575 (This procedure returns the integer equivalent of the passed binary string text. A) 1575 SB
375 1626 1768 (BOOLEAN True is returned in Success if the procedure can extract an integer, and False) 1768 SB
375 1685 1792 (is returned if it fails \(i.e., the text string is null, empty, or contains an invalid binary string.\)) 1792 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1744 395 (Integer_To_String) 395 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1543 1803 632 (Utilities_Integer_To_String.ada) 632 SB
375 1862 1789 (This procedure converts the passed INTEGER into its string equivalent, returning it in the) 1789 SB
375 1921 551 (passed STRING parameter.) 551 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1980 351 (Float_To_String) 351 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1583 2039 592 (Utilities_Float_To_String.ada) 592 SB
375 2098 1733 (This procedure converts the passed FLOAT into its string equivalent, returning it in the) 1733 SB
375 2157 551 (passed STRING parameter.) 551 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2216 516 (Hexadecimal_To_String) 516 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1429 2275 746 (Utilities_Hexadecimal_To_String.ada) 746 SB
375 2334 1689 (This procedure converts the passed INTEGER into its hexadecimal string equivalent,) 1689 SB
375 2393 908 (returning it in the passed STRING parameter.) 908 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2452 388 (Binary_To_String) 388 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1554 2511 621 (Utilities_Binary_To_String.ada) 621 SB
375 2570 1761 (This procedure converts the passed INTEGER into its binary string equivalent, returning) 1761 SB
375 2629 714 (it in the passed STRING parameter.) 714 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 8 8
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1187 3060 25 (5) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 277 (Strip_Spaces) 277 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1653 328 522 (Utilities_Strip_Spaces.ada) 522 SB
375 387 1781 (This procedure strips all leading and trailing spaces from the passed string. The non-space) 1781 SB
375 446 1194 (portions of the string are moved forward to replace any lead) 1194 SB
1569 446 594 (ing spaces, and trailing spaces) 594 SB
375 505 113 (are re) 113 SB
488 505 714 (placed with ASCII.NUL characters.) 714 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 564 351 (Time_To_String) 351 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1583 623 592 (Utilities_Time_To_String.ada) 592 SB
375 682 1735 (This procedure converts a variable of type Calendar.TIME into its STRING equivalent,) 1735 SB
375 741 1143 (with the hours, minutes, and seconds padded with zeroes.) 1143 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 977 311 (Motif_Utilities) 311 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1742 1036 433 (Motif_Utilities\(_\).ada) 433 SB
300 1095 1760 (The Motif_Utilities package holds frequently used Motif and X related units. These units) 1760 SB
300 1154 1704 (perform such functions as creating common widgets, getting widget ancestors, setting) 1704 SB
300 1213 1817 (common widget resources, getting formatted data from text widgets, restricting text widget) 1817 SB
300 1272 1858 (input to match integer and float types, prompting/informing the user, building menu items and) 1858 SB
300 1331 935 (menus, and installing and updating ActiveHelp.) 935 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1390 289 (Create_Label) 289 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 1449 374 (Motif_Utilities.ada) 374 SB
375 1508 1587 (This function creates a label with the passed label parented to the passed parent.) 1587 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1567 416 (Create_Pushbutton) 416 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 1626 374 (Motif_Utilities.ada) 374 SB
375 1685 1717 (This function creates a pushbutton with the passed label parented to the passed parent.) 1717 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1744 454 (Create_Togglebutton) 454 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 1803 374 (Motif_Utilities.ada) 374 SB
375 1862 1749 (This function creates a togglebutton with the passed label parented to the passed parent.) 1749 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1921 207 (Get_Shell) 207 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 1980 374 (Motif_Utilities.ada) 374 SB
375 2039 1253 (This function returns the first shell parent of the passed widget.) 1253 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2098 284 (Get_Topshell) 284 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 2157 374 (Motif_Utilities.ada) 374 SB
375 2216 1343 (This function returns the first WMshell parent of the passed widget.) 1343 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2275 365 (Display_Message) 365 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 2334 374 (Motif_Utilities.ada) 374 SB
375 2393 1666 (This procedure creates a dialog displaying the passed message, with the passed title.) 1666 SB
375 2452 928 (Pressing the dialog's only button unmanages it.) 928 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2511 242 (Set_Cursor) 242 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 2570 374 (Motif_Utilities.ada) 374 SB
375 2629 1797 (This procedure sets the cursor of the window of the passed widget to the passed cursor id.) 1797 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2688 337 (Set_Labelstring) 337 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 2747 374 (Motif_Utilities.ada) 374 SB
375 2806 1703 (This procedure sets the labelString resource of the passed widget to the passed string.) 1703 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 9 9
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1187 3060 25 (6) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 348 (Get_Labelstring) 348 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 328 374 (Motif_Utilities.ada) 374 SB
375 387 1455 (This function returns the label string of the passed widget as a text string.) 1455 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 446 267 (Make_Color) 267 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 505 374 (Motif_Utilities.ada) 374 SB
375 564 1786 (This function returns the pixel colormap entry associated with the color color_name in the) 1786 SB
375 623 1727 (widget parent, allocating it if necessary. The returned value Pixel can be used to set the) 1727 SB
375 682 1135 (XmNbackground and XmNforeground widget resources.) 1135 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 741 285 (Prompt_User) 285 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 800 374 (Motif_Utilities.ada) 374 SB
375 859 1787 (This function presents the user with a prompt and allows you to choose one of up to three) 1787 SB
375 918 1555 (choices \(from input parameters\). The chosen response's mnemonic is returned.) 1555 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 977 268 (Build_Menu) 268 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 1036 374 (Motif_Utilities.ada) 374 SB
375 1095 1753 (This function builds a menu based on the passed array of MENU_ITEM_REC variables,) 1753 SB
375 1154 1771 (parented to the passed widget parent. The array of MENU_ITEM_REC variables defines) 1771 SB
375 1213 1722 (the menu type \(standard menu, option menu, or popup menu\) as well as all menu items) 1722 SB
375 1272 386 (and their attributes.) 386 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1331 392 (Build_Menu_Item) 392 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 1390 374 (Motif_Utilities.ada) 374 SB
375 1449 1650 (This function assembles a MENU_ITEM_REC from a list of parameters. This is an) 1650 SB
375 1508 1705 (optional convenience function. The created MENU_ITEM_REC  variable can then be) 1705 SB
375 1567 1595 (used to construct an array of MENU_ITEM_REC variables for use in the call to) 1595 SB
375 1626 501 (Build_Menu \(see above\).) 501 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1685 422 (Install_Active_Help) 422 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1380 1744 795 (Motif_Utilities_Install_Active_Help.ada) 795 SB
375 1803 1750 (This procedure installs active help for the specified widget. This requires that a text field) 1750 SB
375 1862 1338 (be dedicated to the purpose of displaying the ActiveHelp messages.) 1338 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1921 512 (Update_Help_Field_EH) 512 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1296 1980 879 (Motif_Utilities_Update_Help_Field_EH.ada) 879 SB
375 2039 1771 (This event handler updates the text widget passed into Help_Text_Widget with the string) 1771 SB
375 2098 1763 (held in the User_Data field of the callback's parent widget. It is automatically installed by) 1763 SB
375 2157 618 (the call to Install_Active_Help.) 618 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2216 534 (Install_Text_Restrictions) 534 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1277 2275 292 (Motif_Utilities) 292 SB
1569 2275 606 (_Install_Text_Restrictions.ada) 606 SB
375 2334 1668 (This unit installs textfield callbacks which restrict the passed textfield widget to only) 1668 SB
375 2393 1071 (accept as valid input text matching the passed criteria.) 1071 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2452 1008 (Install_Text_Restrictions_With_Integer_Range) 1008 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
837 2511 292 (Motif_Utilities) 292 SB
1129 2511 1046 (_Install_Text_Restrictions_With_Integer_Range.ada) 1046 SB
375 2570 1777 (This unit installs textfield callbacks which restrict the passed text widget to only accept as) 1777 SB
375 2629 1690 (valid input text matching the passed criteria, including a range of valid integer values.) 1690 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2688 964 (Install_Text_Restrictions_With_Float_Range) 964 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
959 2747 292 (Motif_Utilities) 292 SB
1251 2747 924 (_Install_Text_Restrictions_With_Float_Range) 924 SB
375 2806 1777 (This unit installs textfield callbacks which restrict the passed text widget to only accept as) 1777 SB
375 2865 1643 (valid input text matching the passed criteria, including a range of valid float values.) 1643 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 10 10
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1187 3060 25 (7) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 701 (Get_Integer_From_Text_Widget) 701 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1117 328 292 (Motif_Utilities) 292 SB
1409 328 766 (_Get_Integer_From_Text_Widget.ada) 766 SB
375 387 1671 (This procedure returns the integer equivalent of the text contained in the passed text) 1671 SB
375 446 1658 (widget, via the passed parameter Return_Integer. A BOOLEAN True is returned in) 1658 SB
375 505 1800 (Success if the procedure can extract an integer, and False is returned if it fails \(i.e., the text) 1800 SB
375 564 1167 (widget is null, empty, or contains an invalid integer string.\)) 1167 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 623 657 (Get_Float_From_Text_Widget) 657 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1157 682 292 (Motif_Utilities) 292 SB
1449 682 726 (_Get_Float_From_Text_Widget.ada) 726 SB
375 741 1785 (This procedure returns the float equivalent of the text contained in the passed text widget,) 1785 SB
375 800 1741 (via the passed parameter Return_Float. A BOOLEAN True is returned in Success if the) 1741 SB
375 859 1736 (procedure can extract a float, and False is returned if it fails \(i.e., the text widget is null,) 1736 SB
375 918 829 (empty, or contains an invalid float string.\)) 829 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 977 822 (Get_Hexadecimal_From_Text_Widget) 822 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1003 1036 292 (Motif_Utilities) 292 SB
1295 1036 880 (_Get_Hexadecimal_From_Text_Widget.ada) 880 SB
375 1095 1451 (This procedure returns the integer equivalent of the hexadecimal text con) 1451 SB
1826 1095 243 (tained in the) 243 SB
375 1154 1663 (passed text widget, via the passed parameter Return_Integer. A BOOLEAN True is) 1663 SB
375 1213 1763 (returned in Success if the procedure can extract an integer, and False is returned if it fails) 1763 SB
375 1272 1540 (\(i.e., the text widget is null, empty, or contains an invalid hexadecimal string.\)) 1540 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1331 694 (Get_Binary_From_Text_Widget) 694 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1128 1390 292 (Motif_Utilities) 292 SB
1420 1390 755 (_Get_Binary_From_Text_Widget.ada) 755 SB
375 1449 1329 (This procedure returns the integer equivalent of the binary text con) 1329 SB
1704 1449 388 (tained in the passed) 388 SB
375 1508 1747 (text widget, via the passed parameter Return_Integer. A BOOLEAN True is returned in) 1747 SB
375 1567 1800 (Success if the procedure can extract an integer, and False is returned if it fails \(i.e., the text) 1800 SB
375 1626 1152 (widget is null, empty, or contains an invalid binary string.\)) 1152 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1685 508 (Set_Boolean_Value_CB) 508 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1288 1744 292 (Motif_Utilities) 292 SB
1580 1744 595 (_Set_Boolean_Value_CB.ada) 595 SB
375 1803 1778 (This procedure sets the value of the Boolean variable in the client_data parameter \(named) 1778 SB
375 1862 1576 (Boolean_Value here\) to the value in the userData field of the activating widget.) 1576 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1921 490 (Set_Integer_Value_CB) 490 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1311 1980 292 (Motif_Utilities) 292 SB
1603 1980 572 (_Set_Integer_Value_CB.ada) 572 SB
375 2039 1755 (This procedure sets the value of the Integer variable in the client_data parameter \(named) 1755 SB
375 2098 1553 (Integer_Value here\) to the value in the userData field of the activating widget.) 1553 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2157 441 (Destroy_Widget_CB) 441 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1357 2216 292 (Motif_Utilities) 292 SB
1649 2216 526 (_Destroy_Widget_CB.ada) 526 SB
375 2275 1692 (This procedure calls Xt.DestroyWidget on the Widget_To_Be_Destroyed parameter.) 1692 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2334 605 (XmTextSetInsertionPosition) 605 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 2393 374 (Motif_Utilities.ada) 374 SB
375 2452 795 (Re-imported due to bad Verdix binding.) 795 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2511 324 (Create_Widget) 324 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 2570 374 (Motif_Utilities.ada) 374 SB
375 2629 1693 (This private unit creates a widget with the passed label parented to the passed parent.) 1693 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2688 386 (Prompt_Response) 386 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 2747 374 (Motif_Utilities.ada) 374 SB
375 2806 1614 (This private unit is used by the public unit Prompt_User to handle the pushbutton) 1614 SB
375 2865 193 (callbacks.) 193 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 11 11
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1187 3060 25 (8) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 492 (Prompt_Handle_Event) 492 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 328 374 (Motif_Utilities.ada) 374 SB
375 387 1702 (This private unit is used by the public unit Prompt_User to handle KeyRelease events.) 1702 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 446 384 (Text_Restrict_CB) 384 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1801 505 374 (Motif_Utilities.ada) 374 SB
375 564 1641 (This private unit is used by the public units Install_Text_Restrictions, Install_Text-) 1641 SB
375 623 1764 (_Restrictions_With_Integer_Range, and Install_Text_Restrictions_With_Float_Range to) 1764 SB
375 682 1541 (actually perform the text validation and to veto any invalid text modifications.) 1541 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 918 510 (XDG_Server_Main_CB) 510 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1553 977 622 (XDG_Server_Main_CB\(_\).ada) 622 SB
300 1036 1648 (The XDG_Server_Main_CB package holds XDG Server units to load and save the) 1648 SB
300 1095 1741 (configuration files, initialize all \223set parameters\224 panels,  and quit the XDG Server GUI.) 1741 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1154 212 (Open_CB) 212 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1389 1213 786 (XDG_Server_Main_CB_Open_CB.ada) 786 SB
375 1272 1364 (This procedure allows the user to open an existing configuration file.) 1364 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1331 602 (Open_Config_File_FSB_CB) 602 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1018 1390 1157 (XDG_Server_Main_CB_Open_Config_File_FSB_CB.ada) 1157 SB
375 1449 1539 (This procedure handles the Open FSB callbacks for opening and XDG Server) 1539 SB
375 1508 352 (configuration file.) 352 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1567 607 (Reinitialize_Panels_Timeout) 607 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1612 1626 563 (XDG_Server_Main_CB.ada) 563 SB
375 1685 1737 (This procedure waits for the DG Server to load the new configuration file \(this happens) 1737 SB
375 1744 1568 (when the config file changes flag in the interface becomes False\), and then calls) 1568 SB
375 1803 1628 (XDG_Server.Initialize_Set_Parms_Panels to reinitialize all Set Parameters panels.) 1628 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1862 195 (Save_CB) 195 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1400 1921 775 (XDG_Server_Main_CB_Save_CB.ada) 775 SB
375 1980 1550 (This procedure allows the user to save the existing data in a configuration file.) 1550 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2039 585 (Save_Config_File_FSB_CB) 585 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1029 2098 1146 (XDG_Server_Main_CB_Save_Config_File_FSB_CB.ada) 1146 SB
375 2157 1528 (This procedure handles the Save FSB callbacks for opening and XDG Server) 1528 SB
375 2216 352 (configuration file.) 352 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2275 193 (Quit_CB) 193 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1408 2334 767 (XDG_Server_Main_CB_Quit_CB.ada) 767 SB
375 2393 1725 (This procedure prompts the user to quit the application. If the user chooses to quit, the) 1725 SB
375 2452 498 (application is terminated.) 498 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 12 12
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1187 3060 25 (9) 25 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 269 275 (XDG_Server) 275 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1771 328 404 (XDG_Server\(_\).ada) 404 SB
300 387 1822 (The XDG_Server package holds XDG Server units to create, initialize, and update all XDG) 1822 SB
300 446 1710 (Server windows and panels, to write changes from the set parameters panels to shared) 1710 SB
300 505 1624 (memory, and to create and update the ADIS DG Server GUI monitoring displays.) 1624 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 564 697 (Create_Set_Parms_Window_CB) 697 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1151 623 1024 (XDG_Server_Create_Set_Parms_Window_CB.ada) 1024 SB
375 682 1317 (This procedure displays the XDG_Server Set Parameters window.) 1317 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 741 748 (Create_Set_Parms_Panel_Network) 748 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1101 800 1074 (XDG_Server_Create_Set_Parms_Panel_Network.ada) 1074 SB
375 859 1660 (This procedure displays the Set Parameters Network Panel under the passed widget) 1660 SB
375 918 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 977 781 (Create_Set_Parms_Panel_Threshold) 781 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1078 1036 1097 (XDG_Server_Create_Set_Parms_Panel_Threshold.ada) 1097 SB
375 1095 1683 (This procedure displays the Set Parameters Threshold Panel under the passed widget) 1683 SB
375 1154 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1213 827 (Create_Set_Parms_Panel_PDU_Filters) 827 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1029 1272 1146 (XDG_Server_Create_Set_Parms_Panel_PDU_Filters.ada) 1146 SB
375 1331 1720 (This procedure displays the Set Parameters PDU Filters Panel under the passed widget) 1720 SB
375 1390 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1449 891 (Create_Set_Parms_Panel_Specific_Filters) 891 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
971 1508 1204 (XDG_Server_Create_Set_Parms_Panel_Specific_Filters.ada) 1204 SB
375 1567 1778 (This procedure displays the Set Parameters Specific Filters Panel under the passed widget) 1778 SB
375 1626 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1685 907 (Create_Set_Parms_Panel_DG_Parameters) 907 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
960 1744 1215 (XDG_Server_Create_Set_Parms_Panel_DG_Parameters.ada) 1215 SB
375 1803 1789 (This procedure displays the Set Parameters DG Parameters Panel under the passed widget) 1789 SB
375 1862 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1921 685 (Create_Set_Parms_Panel_Error) 685 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1170 1980 1005 (XDG_Server_Create_Set_Parms_Panel_Error.ada) 1005 SB
375 2039 1677 (This procedure displays the Set Parameters Error Parameters Panel under the passed) 1677 SB
375 2098 344 (widget hierarchy.) 344 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2157 675 (Create_Set_Parms_Panel_Hash) 675 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1177 2216 998 (XDG_Server_Create_Set_Parms_Panel_Hash.ada) 998 SB
375 2275 1670 (This procedure displays the Set Parameters Hash Parameters Panel under the passed) 1670 SB
375 2334 344 (widget hierarchy.) 344 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2393 741 (Create_Set_Parms_Panel_Exercise) 741 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1109 2452 1066 (XDG_Server_Create_Set_Parms_Panel_Exercise.ada) 1066 SB
375 2511 1738 (This procedure displays the Set Parameters Exercise Parameters Panel under the passed) 1738 SB
375 2570 344 (widget hierarchy.) 344 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2629 770 (Create_Error_Notices_Window_CB) 770 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1079 2688 1096 (XDG_Server_Create_Error_Notices_Window_CB.ada) 1096 SB
375 2747 1279 (This procedure displays the XDG Server Error Notices window.) 1279 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 13 13
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1175 3060 50 (10) 50 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 666 (Create_Monitors_Window_CB) 666 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1181 328 994 (XDG_Server_Create_Monitors_Window_CB.ada) 994 SB
375 387 1189 (This procedure displays the XDG Server Monitors window.) 1189 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 446 697 (Create_Monitors_Panel_Entities) 697 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1158 505 1017 (XDG_Server_Create_Monitors_Panel_Entities.ada) 1017 SB
375 564 1707 (This procedure displays the Monitor Entities Panel under the passed widget hierarchy.) 1707 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 623 722 (Create_Monitors_Panel_Gateway) 722 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1132 682 1043 (XDG_Server_Create_Monitors_Panel_Gateway.ada) 1043 SB
375 741 1733 (This procedure displays the Monitor Gateway Panel under the passed widget hierarchy.) 1733 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 800 673 (Create_Monitors_Panel_Errors) 673 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1181 859 994 (XDG_Server_Create_Monitors_Panel_Errors.ada) 994 SB
375 918 1684 (This procedure displays the Monitor Errors Panel under the passed widget hierarchy.) 1684 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 977 539 (Initialize_Panel_Network) 539 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1300 1036 875 (XDG_Server_Initialize_Panel_Network.ada) 875 SB
375 1095 1778 (This procedure initializes the Network Panel widgets with the values from the DG Shared) 1778 SB
375 1154 366 (Memory interface.) 366 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1213 572 (Initialize_Panel_Threshold) 572 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1277 1272 898 (XDG_Server_Initialize_Panel_Threshold.ada) 898 SB
375 1331 1650 (This procedure initializes the Threshold Panel widgets with the values from the DG) 1650 SB
375 1390 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1449 698 (Initialize_Panel_DG_Parameters) 698 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1159 1508 1016 (XDG_Server_Initialize_Panel_DG_Parameters.ada) 1016 SB
375 1567 1768 (This procedure initializes the DG_Parameters Panel widgets with the values from the DG) 1768 SB
375 1626 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1685 618 (Initialize_Panel_PDU_Filters) 618 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1228 1744 947 (XDG_Server_Initialize_Panel_PDU_Filters.ada) 947 SB
375 1803 1699 (This procedure initializes the PDU_Filters Panel widgets with the values from the DG) 1699 SB
375 1862 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1921 682 (Initialize_Panel_Specific_Filters) 682 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1170 1980 1005 (XDG_Server_Initialize_Panel_Specific_Filters.ada) 1005 SB
375 2039 1757 (This procedure initializes the Specific_Filters Panel widgets with the values from the DG) 1757 SB
375 2098 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2157 476 (Initialize_Panel_Error) 476 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1369 2216 806 (XDG_Server_Initialize_Panel_Error.ada) 806 SB
375 2275 1709 (This procedure initializes the Error Panel widgets with the values from the DG Shared) 1709 SB
375 2334 366 (Memory interface.) 366 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2393 466 (Initialize_Panel_Hash) 466 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1376 2452 799 (XDG_Server_Initialize_Panel_Hash.ada) 799 SB
375 2511 1702 (This procedure initializes the Hash Panel widgets with the values from the DG Shared) 1702 SB
375 2570 366 (Memory interface.) 366 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2629 532 (Initialize_Panel_Exercise) 532 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1308 2688 867 (XDG_Server_Initialize_Panel_Exercise.ada) 867 SB
375 2747 1770 (This procedure initializes the Exercise Panel widgets with the values from the DG Shared) 1770 SB
375 2806 366 (Memory interface.) 366 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 14 14
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1175 3060 50 (11) 50 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 602 (Initialize_Set_Parms_Panels) 602 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1245 328 930 (XDG_Server_Initialize_Set_Parms_Panels.ada) 930 SB
375 387 1791 (This procedure initializes all XDG Server Set Parameters panels using values from the DG) 1791 SB
375 446 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 505 482 (Update_Error_Notices) 482 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1350 564 825 (XDG_Server_Update_Error_Notices.ada) 825 SB
375 623 1696 (This procedure is a timeout procedure which updates the Error Notices window at an) 1696 SB
375 682 1099 (update rate specified in the XDG_Server package spec.) 1099 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 741 487 (Update_Error_History) 487 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1354 800 821 (XDG_Server_Update_Error_History.ada) 821 SB
375 859 1692 (This procedure is a timeout procedure which updates the Error History window at an) 1692 SB
375 918 1099 (update rate specified in the XDG_Server package spec.) 1099 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 977 225 (Apply_CB) 225 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1594 1036 581 (XDG_Server_Apply_CB.ada) 581 SB
375 1095 1748 (This procedure writes all changed values in all Set Parameters panels to shared memory.) 1748 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1154 494 (Cancel_Set_Parms_CB) 494 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1341 1213 834 (XDG_Server_Cancel_Set_Parms_CB.ada) 834 SB
375 1272 1724 (This procedure closes the Set Parameters window and cancels all pending XDG Server) 1724 SB
375 1331 383 (parameter changes.) 383 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1390 416 (Close_Window_CB) 416 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1408 1449 767 (XDG_Server_Close_Window_CB.ada) 767 SB
375 1508 1760 (This procedure closes the window pointed to by the parameter Shell by unmanaging \(not) 1760 SB
375 1567 278 (destroying\) it.) 278 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1803 501 (XDG_Client_Main_CB) 501 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1565 1862 610 (XDG_Client_Main_CB\(_\).ada) 610 SB
300 1921 1624 (The XDG_Client_Main_CB package holds XDG Client units to load and save the) 1624 SB
300 1980 1729 (configuration files, initialize all \223set parameters\224 panels,  and quit the XDG Client GUI.) 1729 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2039 212 (Open_CB) 212 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1401 2098 774 (XDG_Client_Main_CB_Open_CB.ada) 774 SB
375 2157 1364 (This procedure allows the user to open an existing configuration file.) 1364 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2216 602 (Open_Config_File_FSB_CB) 602 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1030 2275 1145 (XDG_Client_Main_CB_Open_Config_File_FSB_CB.ada) 1145 SB
375 2334 1527 (This procedure handles the Open FSB callbacks for opening and XDG Client) 1527 SB
375 2393 352 (configuration file.) 352 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2452 607 (Reinitialize_Panels_Timeout) 607 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1624 2511 551 (XDG_Client_Main_CB.ada) 551 SB
375 2570 1725 (This procedure waits for the DG Client to load the new configuration file \(this happens) 1725 SB
375 2629 1555 (when the config file changes flag in the interface becomes False\) and then calls) 1555 SB
375 2688 1616 (XDG_Client.Initialize_Set_Parms_Panels to reinitialize all Set Parameters panels.) 1616 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2747 195 (Save_CB) 195 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1412 2806 763 (XDG_Client_Main_CB_Save_CB.ada) 763 SB
375 2865 1550 (This procedure allows the user to save the existing data in a configuration file.) 1550 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 15 15
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1175 3060 50 (12) 50 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 585 (Save_Config_File_FSB_CB) 585 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1041 328 1134 (XDG_Client_Main_CB_Save_Config_File_FSB_CB.ada) 1134 SB
375 387 1794 (This procedure handles the Save FSB callbacks for opening and XDG Client configuration) 1794 SB
375 446 74 (file.) 74 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 505 193 (Quit_CB) 193 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1420 564 755 (XDG_Client_Main_CB_Quit_CB.ada) 755 SB
375 623 1725 (This procedure prompts the user to quit the application. If the user chooses to quit, the) 1725 SB
375 682 498 (application is terminated.) 498 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 741 266 (XDG_Client) 266 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1783 800 392 (XDG_Client\(_\).ada) 392 SB
300 859 1798 (The XDG_Client package holds XDG Client units to create, initialize, and update all XDG) 1798 SB
300 918 1698 (Client windows and panels, to write changes from the set parameters panels to shared) 1698 SB
300 977 1612 (memory, and to create and update the ADIS DG Client GUI monitoring displays.) 1612 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1036 697 (Create_Set_Parms_Window_CB) 697 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1163 1095 1012 (XDG_Client_Create_Set_Parms_Window_CB.ada) 1012 SB
375 1154 1305 (This procedure displays the XDG_Client Set Parameters window.) 1305 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1213 907 (Create_Set_Parms_Panel_DG_Parameters) 907 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
972 1272 1203 (XDG_Client_Create_Set_Parms_Panel_DG_Parameters.ada) 1203 SB
375 1331 1789 (This procedure displays the Set Parameters DG Parameters Panel under the passed widget) 1789 SB
375 1390 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1449 685 (Create_Set_Parms_Panel_Error) 685 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1182 1508 993 (XDG_Client_Create_Set_Parms_Panel_Error.ada) 993 SB
375 1567 1677 (This procedure displays the Set Parameters Error Parameters Panel under the passed) 1677 SB
375 1626 344 (widget hierarchy.) 344 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1685 675 (Create_Set_Parms_Panel_Hash) 675 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1189 1744 986 (XDG_Client_Create_Set_Parms_Panel_Hash.ada) 986 SB
375 1803 1670 (This procedure displays the Set Parameters Hash Parameters Panel under the passed) 1670 SB
375 1862 344 (widget hierarchy.) 344 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1921 741 (Create_Set_Parms_Panel_Exercise) 741 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1121 1980 1054 (XDG_Client_Create_Set_Parms_Panel_Exercise.ada) 1054 SB
375 2039 1738 (This procedure displays the Set Parameters Exercise Parameters Panel under the passed) 1738 SB
375 2098 344 (widget hierarchy.) 344 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2157 913 (Create_Set_Parms_Panel_Synchronization) 913 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
969 2216 1206 (XDG_Client_Create_Set_Parms_Panel_Synchronization.ada) 1206 SB
375 2275 1745 (This procedure displays the Set Parameters Synchronization Parameters Panel under the) 1745 SB
375 2334 489 (passed widget hierarchy.) 489 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2393 770 (Create_Error_Notices_Window_CB) 770 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1091 2452 1084 (XDG_Client_Create_Error_Notices_Window_CB.ada) 1084 SB
375 2511 1267 (This procedure displays the XDG Client Error Notices window.) 1267 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2570 666 (Create_Monitors_Window_CB) 666 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1193 2629 982 (XDG_Client_Create_Monitors_Window_CB.ada) 982 SB
375 2688 1046 (This procedure displays the XDG Monitors window.) 1046 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2747 697 (Create_Monitors_Panel_Entities) 697 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1170 2806 1005 (XDG_Client_Create_Monitors_Panel_Entities.ada) 1005 SB
375 2865 1707 (This procedure displays the Monitor Entities Panel under the passed widget hierarchy.) 1707 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 16 16
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1175 3060 50 (13) 50 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 722 (Create_Monitors_Panel_Gateway) 722 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1144 328 1031 (XDG_Client_Create_Monitors_Panel_Gateway.ada) 1031 SB
375 387 1733 (This procedure displays the Monitor Gateway Panel under the passed widget hierarchy.) 1733 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 446 673 (Create_Monitors_Panel_Errors) 673 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1193 505 982 (XDG_Client_Create_Monitors_Panel_Errors.ada) 982 SB
375 564 1684 (This procedure displays the Monitor Errors Panel under the passed widget hierarchy.) 1684 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 623 698 (Initialize_Panel_DG_Parameters) 698 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1171 682 1004 (XDG_Client_Initialize_Panel_DG_Parameters.ada) 1004 SB
375 741 1768 (This procedure initializes the DG_Parameters Panel widgets with the values from the DG) 1768 SB
375 800 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 859 476 (Initialize_Panel_Error) 476 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1381 918 794 (XDG_Client_Initialize_Panel_Error.ada) 794 SB
375 977 1709 (This procedure initializes the Error Panel widgets with the values from the DG Shared) 1709 SB
375 1036 366 (Memory interface.) 366 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1095 466 (Initialize_Panel_Hash) 466 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1388 1154 787 (XDG_Client_Initialize_Panel_Hash.ada) 787 SB
375 1213 1702 (This procedure initializes the Hash Panel widgets with the values from the DG Shared) 1702 SB
375 1272 366 (Memory interface.) 366 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1331 532 (Initialize_Panel_Exercise) 532 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1320 1390 855 (XDG_Client_Initialize_Panel_Exercise.ada) 855 SB
375 1449 1770 (This procedure initializes the Exercise Panel widgets with the values from the DG Shared) 1770 SB
375 1508 366 (Memory interface.) 366 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1567 704 (Initialize_Panel_Synchronization) 704 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1168 1626 1007 (XDG_Client_Initialize_Panel_Synchronization.ada) 1007 SB
375 1685 1771 (This procedure initializes the Synchronization Panel widgets with the values from the DG) 1771 SB
375 1744 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1803 602 (Initialize_Set_Parms_Panels) 602 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1257 1862 918 (XDG_Client_Initialize_Set_Parms_Panels.ada) 918 SB
375 1921 1779 (This procedure initializes all XDG Client Set Parameters panels using values from the DG) 1779 SB
375 1980 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2039 482 (Update_Error_Notices) 482 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1362 2098 813 (XDG_Client_Update_Error_Notices.ada) 813 SB
375 2157 1696 (This procedure is a timeout procedure which updates the Error Notices window at an) 1696 SB
375 2216 1087 (update rate specified in the XDG_Client package spec.) 1087 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2275 487 (Update_Error_History) 487 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1366 2334 809 (XDG_Client_Update_Error_History.ada) 809 SB
375 2393 1692 (This procedure is a timeout procedure which updates the Error History window at an) 1692 SB
375 2452 1087 (update rate specified in the XDG_Client package spec.) 1087 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2511 225 (Apply_CB) 225 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1606 2570 569 (XDG_Client_Apply_CB.ada) 569 SB
375 2629 1748 (This procedure writes all changed values in all Set Parameters panels to shared memory.) 1748 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2688 494 (Cancel_Set_Parms_CB) 494 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1353 2747 822 (XDG_Client_Cancel_Set_Parms_CB.ada) 822 SB
375 2806 1712 (This procedure closes the Set Parameters window and cancels all pending XDG Client) 1712 SB
375 2865 383 (parameter changes.) 383 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 17 17
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1175 3060 50 (14) 50 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 416 (Close_Window_CB) 416 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1420 328 755 (XDG_Client_Close_Window_CB.ada) 755 SB
375 387 1760 (This procedure closes the window pointed to by the parameter Shell by unmanaging \(not) 1760 SB
375 446 278 (destroying\) it.) 278 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 682 338 (XOS_Main_CB) 338 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1716 741 459 (XOS_Main_CB\(_\).ada) 459 SB
300 800 1718 (The XOS_Main_CB package holds XOS units to load and save the configuration files,) 1718 SB
300 859 1206 (initialize all \223set parameters\224 panels,  and quit the XOS GUI.) 1206 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 918 212 (Open_CB) 212 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1552 977 623 (XOS_Main_CB_Open_CB.ada) 623 SB
375 1036 1277 (This procedure allows the user to open an existing configuration) 1277 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1095 602 (Open_Config_File_FSB_CB) 602 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1181 1154 994 (XOS_Main_CB_Open_Config_File_FSB_CB.ada) 994 SB
375 1213 1728 (This procedure handles the Open FSB callbacks for opening an XOS configuration file.) 1728 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1272 607 (Reinitialize_Panels_Timeout) 607 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1775 1331 400 (XOS_Main_CB.ada) 400 SB
375 1390 1779 (This procedure waits for the OS to load the new configuration file \(this happens when the) 1779 SB
375 1449 1375 (config file changes flag in the interface becomes False\), and then calls) 1375 SB
375 1508 1465 (XOS.Initialize_Set_Parms_Panels to reinitialize all Set Parameters panels.) 1465 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1567 195 (Save_CB) 195 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1563 1626 612 (XOS_Main_CB_Save_CB.ada) 612 SB
375 1685 1550 (This procedure allows the user to save the existing data in a configuration file.) 1550 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1744 585 (Save_Config_File_FSB_CB) 585 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1192 1803 983 (XOS_Main_CB_Save_Config_File_FSB_CB.ada) 983 SB
375 1862 1685 (This procedure handles the Save FSB callbacks for saving an XOS configuration file.) 1685 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1921 193 (Quit_CB) 193 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1571 1980 604 (XOS_Main_CB_Quit_CB.ada) 604 SB
375 2039 1725 (This procedure prompts the user to quit the application. If the user chooses to quit, the) 1725 SB
375 2098 498 (application is terminated.) 498 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2334 103 (XOS) 103 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1934 2393 241 (XOS\(_\).ada) 241 SB
300 2452 1775 (The XOS package holds XOS units to create, initialize, and update all XOS windows and) 1775 SB
300 2511 1835 (panels, to write changes from the set parameters panels to shared memory, and to create and) 1835 SB
300 2570 966 (update the ADIS XOS GUI monitoring displays.) 966 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2629 718 (Create_Ord_Parms_Window_CB) 718 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1301 2688 874 (XOS_Create_Ord_Parms_Window_CB.ada) 874 SB
375 2747 1359 (This procedure displays the XOS Set Ordnance Parameters window.) 1359 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 18 18
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1175 3060 50 (15) 50 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 528 (Create_Ord_Panel_Aero) 528 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1476 328 699 (XOS_Create_Ord_Panel_Aero.ada) 699 SB
375 387 1746 (This procedure displays the Ordnance Aerodynamics Parameters Panel under the passed) 1746 SB
375 446 344 (widget hierarchy.) 344 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 505 541 (Create_Ord_Panel_Term) 541 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1469 564 706 (XOS_Create_Ord_Panel_Term.ada) 706 SB
375 623 1704 (This procedure displays the Ordnance Termination Parameters Panel under the passed) 1704 SB
375 682 344 (widget hierarchy.) 344 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 741 513 (Create_Ord_Panel_Gen) 513 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1494 800 681 (XOS_Create_Ord_Panel_Gen.ada) 681 SB
375 859 1765 (This procedure displays the Ordnance General Parameters Panel under the passed widget) 1765 SB
375 918 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 977 558 (Create_Ord_Panel_Entity) 558 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1456 1036 719 (XOS_Create_Ord_Panel_Entity.ada) 719 SB
375 1095 1730 (This procedure displays the Ordnance Entity Parameters Panel under the passed widget) 1730 SB
375 1154 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1213 589 (Create_Ord_Panel_Emitter) 589 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1427 1272 748 (XOS_Create_Ord_Panel_Emitter.ada) 748 SB
375 1331 1759 (This procedure displays the Ordnance Emitter Parameters Panel under the passed widget) 1759 SB
375 1390 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1449 713 (Create_Sim_Parms_Window_CB) 713 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1302 1508 873 (XOS_Create_Sim_Parms_Window_CB.ada) 873 SB
375 1567 1380 (This procedure displays the XOS Set Simulation Parameters window.) 1380 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1626 502 (Create_Sim_Panel_Sim) 502 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1500 1685 675 (XOS_Create_Sim_Panel_Sim.ada) 675 SB
375 1744 1618 (This procedure displays the Simulation Parameters Panel under the passed widget) 1618 SB
375 1803 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1862 757 (Create_Other_Parms_Window_CB) 757 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1265 1921 910 (XOS_Create_Other_Parms_Window_CB.ada) 910 SB
375 1980 1281 (This procedure displays the XOS Set Other Parameters window.) 1281 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2039 584 (Create_Other_Panel_Error) 584 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1432 2098 743 (XOS_Create_Other_Panel_Error.ada) 743 SB
375 2157 1640 (This procedure displays the Other Error Parameters Panel under the passed widget) 1640 SB
375 2216 196 (hierarchy.) 196 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2275 770 (Create_Error_Notices_Window_CB) 770 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1242 2334 933 (XOS_Create_Error_Notices_Window_CB.ada) 933 SB
375 2393 1128 (This procedure displays the XOS Error Notices window.) 1128 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2452 666 (Create_Monitors_Window_CB) 666 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1344 2511 831 (XOS_Create_Monitors_Window_CB.ada) 831 SB
375 2570 1038 (This procedure displays the XOS Monitors window.) 1038 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2629 673 (Create_Monitors_Panel_Errors) 673 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1344 2688 831 (XOS_Create_Monitors_Panel_Errors.ada) 831 SB
375 2747 1684 (This procedure displays the Monitor Errors Panel under the passed widget hierarchy.) 1684 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 19 19
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1175 3060 50 (16) 50 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 546 (Initialize_Sim_Panel_Sim) 546 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1461 328 714 (XOS_Initialize_Sim_Panel_Sim.ada) 714 SB
375 387 1655 (This procedure initializes the Simulation Panel widgets with the values from the OS) 1655 SB
375 446 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 505 572 (Initialize_Ord_Panel_Aero) 572 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1437 564 738 (XOS_Initialize_Ord_Panel_Aero.ada) 738 SB
375 623 1761 (This procedure initializes the Ordnance Aerodynamic Panel widgets with the values from) 1761 SB
375 682 668 (the OS Shared Memory interface.) 668 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 741 557 (Initialize_Ord_Panel_Gen) 557 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1455 800 720 (XOS_Initialize_Ord_Panel_Gen.ada) 720 SB
375 859 1725 (This procedure initializes the Ordnance General Panel widgets with the values from the) 1725 SB
375 918 594 (OS Shared Memory interface.) 594 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 977 585 (Initialize_Ord_Panel_Term) 585 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1430 1036 745 (XOS_Initialize_Ord_Panel_Term.ada) 745 SB
375 1095 1738 (This procedure initializes the Ordnance Termination Panel widgets with the values from) 1738 SB
375 1154 668 (the OS Shared Memory interface.) 668 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1213 602 (Initialize_Ord_Panel_Entity) 602 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1417 1272 758 (XOS_Initialize_Ord_Panel_Entity.ada) 758 SB
375 1331 1767 (This procedure initializes the Ordnance Entity Panel widgets with the values from the OS) 1767 SB
375 1390 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1449 633 (Initialize_Ord_Panel_Emitter) 633 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1388 1508 787 (XOS_Initialize_Ord_Panel_Emitter.ada) 787 SB
375 1567 1796 (This procedure initializes the Ordnance Emitter Panel widgets with the values from the OS) 1796 SB
375 1626 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1685 628 (Initialize_Other_Panel_Error) 628 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1393 1744 782 (XOS_Initialize_Other_Panel_Error.ada) 782 SB
375 1803 1677 (This procedure initializes the Other Error Panel widgets with the values from the OS) 1677 SB
375 1862 517 (Shared Memory interface.) 517 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1921 623 (Initialize_Ord_Parms_Panels) 623 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1395 1980 780 (XOS_Initialize_Ord_Parms_Panels.ada) 780 SB
375 2039 1614 (This procedure initializes the Ordnance panels by calling their respective Initialize) 1614 SB
375 2098 195 (functions.) 195 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2157 618 (Initialize_Sim_Parms_Panels) 618 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1396 2216 779 (XOS_Initialize_Sim_Parms_Panels.ada) 779 SB
375 2275 1635 (This procedure initializes the Simulation panels by calling their respective Initialize) 1635 SB
375 2334 195 (functions.) 195 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2393 662 (Initialize_Other_Parms_Panels) 662 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1359 2452 816 (XOS_Initialize_Other_Parms_Panels.ada) 816 SB
375 2511 1744 (This procedure initializes the Other panels by calling their respective Initialize functions.) 1744 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2570 482 (Update_Error_Notices) 482 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1513 2629 662 (XOS_Update_Error_Notices.ada) 662 SB
375 2688 1696 (This procedure is a timeout procedure which updates the Error Notices window at an) 1696 SB
375 2747 936 (update rate specified in the XOS package spec.) 936 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 20 20
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1175 3060 50 (17) 50 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 487 (Update_Error_History) 487 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1517 328 658 (XOS_Update_Error_History.ada) 658 SB
375 387 1692 (This procedure is a timeout procedure which updates the Error History window at an) 1692 SB
375 446 936 (update rate specified in the XOS package spec.) 936 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 505 333 (Sim_Apply_CB) 333 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1655 564 520 (XOS_Sim_Apply_CB.ada) 520 SB
375 623 1786 (This procedure writes all changed values in all Set Simulation Parameters panels to shared) 1786 SB
375 682 175 (memory.) 175 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 741 338 (Ord_Apply_CB) 338 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1654 800 521 (XOS_Ord_Apply_CB.ada) 521 SB
375 859 1765 (This procedure writes all changed values in all Set Ordnance Parameters panels to shared) 1765 SB
375 918 175 (memory.) 175 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 977 392 (Ord_Previous_CB) 392 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1601 1036 574 (XOS_Ord_Previous_CB.ada) 574 SB
375 1095 1732 (This procedure instructs the OS to place the data for the previous munition in the list in) 1732 SB
375 1154 317 (shared memory.) 317 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1213 307 (Ord_Next_CB) 307 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1677 1272 498 (XOS_Ord_Next_CB.ada) 498 SB
375 1331 1789 (This procedure instructs the OS to place the data for the next munition in the list in shared) 1789 SB
375 1390 175 (memory.) 175 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1449 795 (Ord_Update_Previous_Next_Buttons) 795 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1218 1508 957 (XOS_Ord_Update_Previous_Next_Buttons.ada) 957 SB
375 1567 1657 (This procedure updates the Previous and Next buttons on the Ordnance Parameters) 1657 SB
375 1626 1462 (window based on OS_GUI.Interface.Ordnance_Display.Top_Of_List and) 1462 SB
375 1685 1029 (OS_GUI.Interface.Ordnance_Display.End_Of_List.) 1029 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1744 338 (Ord_Apply_CB) 338 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1654 1803 521 (XOS_Ord_Apply_CB.ada) 521 SB
375 1862 1765 (This procedure writes all changed values in all Set Ordnance Parameters panels to shared) 1765 SB
375 1921 175 (memory.) 175 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1980 377 (Other_Apply_CB) 377 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1618 2039 557 (XOS_Other_Apply_CB.ada) 557 SB
375 2098 1687 (This procedure writes all changed values in all Set Other Parameters panels to shared) 1687 SB
375 2157 175 (memory.) 175 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2216 396 (Text_Country_CB) 396 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1597 2275 578 (XOS_Text_Country_CB.ada) 578 SB
375 2334 1603 (This procedure reads the integer out of the parent textfield widget and places the) 1603 SB
375 2393 1676 (equivalent country name \(from DIS_Types.A_COUNTRY_ID\) into the label widget) 1676 SB
375 2452 937 (whose widget ID is passed in as the client data.) 937 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2511 500 (Sim_World_Coord_CB) 500 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1497 2570 678 (XOS_Sim_World_Coord_CB.ada) 678 SB
375 2629 1739 (This procedure reads the values out of the standard database origin coordinate fields \(in) 1739 SB
375 2688 1591 (Geodetic coordinates\), converts these into world coordinates \(AKA, Geocentric) 1591 SB
375 2747 1591 (coordinates\), and places these new values into the appropriate labels in the XOS) 1591 SB
375 2806 578 (Simulation Parameters panel.) 578 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 21 21
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
904 119 592 (JFT-145-GUI.SRM-V1, 30-Sept-94) 592 SB
0 0 0 fC
/fm 256 def
1961 2 219 171 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1175 3060 50 (18) 50 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 416 (Close_Window_CB) 416 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1571 328 604 (XOS_Close_Window_CB.ada) 604 SB
375 387 1365 (This procedure closes the window pointed to by the parameter Shell.) 1365 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 446 721 (Cancel_Ord_Parms_Window_CB) 721 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1297 505 878 (XOS_Cancel_Ord_Parms_Window_CB.ada) 878 SB
375 564 1708 (This procedure closes the Ordnance Parameters window and cancels all pending XDG) 1708 SB
375 623 526 (Server parameter changes.) 526 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 682 716 (Cancel_Sim_Parms_Window_CB) 716 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1298 741 877 (XOS_Cancel_Sim_Parms_Window_CB.ada) 877 SB
375 800 1736 (This procedure closes the Sim Parameters window and cancels all pending XDG Server) 1736 SB
375 859 383 (parameter changes.) 383 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 918 760 (Cancel_Other_Parms_Window_CB) 760 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1261 977 914 (XOS_Cancel_Other_Parms_Window_CB.ada) 914 SB
375 1036 1773 (This procedure closes the Other Parameters window and cancels all pending XDG Server) 1773 SB
375 1095 383 (parameter changes.) 383 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Trailer
SVDoc restore
end
%%Pages: 21
% TrueType font name key:
%    MSTT31c128 = 0a7fDTimes New RomanF00000032000001900000
%    MSTT31c135 = 0a7fDTimes New RomanF00000032000002bc0000
%    MSTT31c142 = 0a7fDTimes New RomanF0000002a000001900001
%%DocumentSuppliedResources: procset Win35Dict 3 1

%%DocumentNeededResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman

%%EOF
