%!PS-Adobe-3.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - DG-SRM.DOC
%%BoundingBox: 18 9 593 784
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand
16#8A/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright
16#93/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#98/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright
16#9C/oe 16#9F/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency
16#A5/yen 16#A6/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright
16#AA/ordfeminine 16#AB/guillemotleft 16#AC/logicalnot 16#AD/hyphen
16#AE/registered 16#AF/macron 16#B0/degree 16#B1/plusminus 16#B2/twosuperior
16#B3/threesuperior 16#B4/acute 16#B5/mu 16#B6/paragraph 16#B7/periodcentered
16#B8/cedilla 16#B9/onesuperior 16#BA/ordmasculine 16#BB/guillemotright
16#BC/onequarter 16#BD/onehalf 16#BE/threequarters 16#BF/questiondown
16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex 16#C3/Atilde 16#C4/Adieresis
16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA
/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex
16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4
/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute
16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex
16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8
/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave
16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde
16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis
16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex
16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis ] def/reencdict
12 dict def/IsChar{basefontdict/CharStrings get exch known}bd/MapCh{dup
IsChar not{pop/bullet}if newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0
/degree IsChar{/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar
IsChar{/brokenbar}{/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname
ed/basefontname ed FontDirectory newfontname known not{/basefontdict
basefontname findfont def/newfont basefontdict maxlength dict def basefontdict{exch
dup/FID ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll
put}{exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont
/FontName newfontname put 127 1 159{newfont/Encoding get exch/bullet
put}for ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree
MapBB newfontname newfont definefont pop}if newfontname end}bd/SB{FC
/ULlen ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed
/dxGdi ed/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1
mul x1 x1 mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch
y1 mul cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra
ed/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
statusdict begin 0 setjobtimeout end
statusdict begin statusdict /jobname (Microsoft Word - DG-SRM.DOC) put end
/oldDictCnt countdictstack def {}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
/oldDictCnt countdictstack def {letter
}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
[
{mark 1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0 counttomark dup 3 add -1 roll exch 2 sub mul dup floor cvi dup 3 1 roll sub exch dup  3 add index exch 2 add index dup 4 1 roll sub mul add counttomark 1 add 1 roll  cleartomark } bind
/exec load currenttransfer /exec load] cvx settransfer
%%EndSetup
%%Page: 1 1
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1987 119 92 (Page ) 92 SB
2079 119 21 (1) 21 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font13 ANSIFont font
606 319 1188 (Chapter 1 - Introduction to the DIS Gateway) 1188 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 538 614 (What is the DIS Gateway?) 614 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 649 1798 (The DIS Gateway \(DG\) is a software package which provides a generic, portable interface) 1798 SB
300 708 1794 (between a DIS simulation network and various application programs.  The DG is designed) 1794 SB
300 767 1799 (as a client/server architecture, with a single DG Server supporting one or more DG Clients) 1799 SB
300 826 1088 (on the same machine.  It is designed around DIS 2.0.3.) 1088 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 994 966 (What is needed to use the DIS Gateway?) 966 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 1105 1790 (The DIS Gateway was developed on a Silicon Graphics Incorporated \(SGI\) Indigo R4000) 1790 SB
300 1164 1650 (running IRIX 5.2.  The DG code was compiled using the Verdix Ada Development) 1650 SB
300 1223 1478 (System \(VADS\) 6.2.1, X Window System Version X11R5, and Motif 1.2.) 1478 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 1391 1233 (What do you need to know to use the DIS Gateway?) 1233 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 1502 1735 (If you are using the DG Server, you should be familiar with the DIS 2.0.3 Standard and) 1735 SB
300 1561 1767 (basic network terminology \(such as "IP broadcast address" and "UDP port"\).  To use the) 1767 SB
300 1620 1785 (DG Client software, you should again be familiar with the DIS 2.0.3 Standard, and should) 1785 SB
300 1679 1688 (also have a working knowledge of Ada.  You should also be comfortable with the X-) 1688 SB
300 1738 1659 (Window/Motif environment, since the Graphical User Interfaces \(GUIs\) for the DG) 1659 SB
300 1797 1085 (Server and DG Client are written for this environment.) 1085 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 1965 805 (How does the DIS Gateway work?) 805 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 2076 1697 (The DG operates using a client/server relationship.  A single DG Server on a machine) 1697 SB
300 2135 1728 (provides data and network interfacing for one or more DG Clients running on the same) 1728 SB
300 2194 1694 (machine.  The only limitations on the number of Clients connected to a Server are the) 1694 SB
300 2253 1764 (speed of the processor and the available memory of the machine.  Clients can provide the) 1764 SB
300 2312 1798 (Gateway with information such as ground-truth data for entities, emitter parameters, laser-) 1798 SB
300 2371 1654 (designated targets, etc.  The Server provides clients with up-to-date dead-reckoned) 1654 SB
300 2430 1726 (positions of simulation entities, their associated emitter/laser/etc. parameters, and other) 1726 SB
300 2489 1586 (PDU traffic.  Information is stored in shared memory areas -- one central area is) 1586 SB
300 2548 1718 (maintained by the Server \(containing global information regarding all entities, emitters,) 1718 SB
300 2607 1426 (lasers, etc.\), and other smaller memory areas, one per Client \(containing) 1426 SB
300 2666 1282 (entity/emitter/laser information specific to that particular Client\).) 1282 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Roman
%%Page: 2 2
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1987 119 92 (Page ) 92 SB
2079 119 21 (2) 21 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 269 1192 (What are the special features of the DIS Gateway?) 1192 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 380 1714 (The primary special feature of the DIS Gateway is its client/server architecture.  Every) 1714 SB
300 439 1609 (year, computers are becoming more powerful.  Platforms with multiple CPUs are) 1609 SB
300 498 1610 (becoming more commonplace.  These factors make it not only possible, but quite) 1610 SB
300 557 1615 (desirable, to run multiple DIS applications on a single computer.  Traditional DIS) 1615 SB
300 616 1696 (interfaces have had great difficulty implementing this, since they were not designed to) 1696 SB
300 675 1699 (share resources \(such as the UDP port\).  Some have developed work-arounds for this) 1699 SB
300 734 1789 (problem, but these are inherently inefficient \(such as listening to the \223real\224 UDP port of an) 1789 SB
300 793 1614 (exercise, and then echoing the data to multiple alternative UDP ports allocated to) 1614 SB
300 852 1752 (individual applications.  Most interfaces simply do not support multiple DIS applications) 1752 SB
300 911 1696 (on a single computer.  The DIS Gateway was designed from the beginning to support) 1696 SB
300 970 1694 (multiple applications.  Since processor-intensive tasks such as PDU filtering and dead) 1694 SB
300 1029 1780 (reckoning updates are performed in a centralized manner \(by the DG Server\), any number) 1780 SB
300 1088 1657 (of Clients can be supported by this data without incurring a proportional increase in) 1657 SB
300 1147 1664 (system loading.  Since multiple Clients can be run on a single machine, it is not even) 1664 SB
300 1206 1770 (necessary to have more than one machine to design and test complex DIS configurations.) 1770 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Roman
%%Page: 3 3
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1987 119 92 (Page ) 92 SB
2079 119 21 (3) 21 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font13 ANSIFont font
571 319 1257 (Chapter 2 - How do you use the DIS Gateway?) 1257 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 597 843 (How do you start the DIS Gateway?) 843 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 708 1554 (The DG Server is started by running the program \223DG_Server\224.  If the default) 1554 SB
300 767 1726 (configuration file \(DG_Server.Config\) is present in the current directory, and if this file) 1726 SB
300 826 1751 (specifies a GUI, then the DG_Server will start up the GUI and wait for the user to make) 1751 SB
300 885 1771 (configuration changes.  Always remember to bring up at least one parameter window and) 1771 SB
300 944 165 (click its ) 165 SB
32 0 0 50 50 0 0 0 45 /Times-Italic /font31 ANSIFont font
465 944 117 (Apply) 117 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
582 944 1413 ( button if you start the DG_Server with a GUI.  Unless you do this, the) 1413 SB
300 1003 1615 (DG_Server will patiently wait forever in this configuration mode.  If you start the) 1615 SB
300 1062 1694 (DG_Server without a GUI, it will process any configuration parameters in the default) 1694 SB
300 1121 1467 (configuration file, and will then immediately transition to its runtime state.) 1467 SB
300 1239 1777 (DG Client programs can specify a GUI to run via the Initialize_Client procedure or via an) 1777 SB
300 1298 1741 (entry in the configuration file.  As with the DG Server, if the DG Client is started with a) 1741 SB
300 1357 942 (GUI, it will stay in configuration mode until an ) 942 SB
32 0 0 50 50 0 0 0 45 /Times-Italic /font31 ANSIFont font
1242 1357 117 (Apply) 117 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1359 1357 678 ( button is pressed.  Similarly, if no) 678 SB
300 1416 1217 (GUI is specified, the client will proceed into its runtime state.) 1217 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 1584 962 (How do you configure the DIS Gateway?) 962 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 1695 1617 (Both the DG Server and DG Clients can be configured at runtime using either the) 1617 SB
300 1754 1322 (appropriate GUI, a configuration file, or a combination of the two.) 1322 SB
300 1872 1798 (The GUIs are standard X Window/Motif applications.  The interfaces should be familiar to) 1798 SB
300 1931 1774 (SGI users.  In order for parameter modifications to take effect in the Client or Server, the) 1774 SB
32 0 0 50 50 0 0 0 45 /Times-Italic /font31 ANSIFont font
300 1990 117 (Apply) 117 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
417 1990 1554 ( button must be pressed.  If a configuration file is saved, it will save only those) 1554 SB
300 2049 1798 (parameters which have actually been applied -- modifications which have been typed in but) 1798 SB
300 2108 1319 (not applied will not be reflected in the resulting configuration files.) 1319 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 2217 841 (How do you stop the DIS Gateway?) 841 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 2328 1791 (There are several different ways to stop the DG.  The DG Server can be stopped using the) 1791 SB
300 2387 698 (XDG_Server GUI by selecting the ) 698 SB
32 0 0 50 50 0 0 0 45 /Times-Italic /font31 ANSIFont font
998 2387 337 (Shutdown Server) 337 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1335 2387 282 ( option of the ) 282 SB
32 0 0 50 50 0 0 0 45 /Times-Italic /font31 ANSIFont font
1617 2387 80 (File) 80 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1697 2387 219 ( menu.  An) 219 SB
300 2446 1789 (alternative is to run the program Shutdown_Server.  Stopping the DG Server will result in) 1789 SB
300 2505 733 (all DG Clients being stopped as well.) 733 SB
300 2623 1423 (DG Clients can be stopped using the XDG_Client GUI by selecting the ) 1423 SB
32 0 0 50 50 0 0 0 45 /Times-Italic /font31 ANSIFont font
1723 2623 89 (Quit) 89 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1812 2623 269 ( option of the) 269 SB
32 0 0 50 50 0 0 0 45 /Times-Italic /font31 ANSIFont font
300 2682 80 (File) 80 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
380 2682 1683 ( menu.  This will result in the Status code CLI_SYNC_SHUTDOWN being returned) 1683 SB
300 2741 1702 (the next time Synchronize_With_Server or Client_Connected is called.  As mentioned) 1702 SB
300 2800 1130 (above, stopping the DG Server is equivalent to selecting ) 1130 SB
32 0 0 50 50 0 0 0 45 /Times-Italic /font31 ANSIFont font
1430 2800 89 (Quit) 89 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1519 2800 561 ( from the XDG_Client GUI.) 561 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 4 4
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1987 119 92 (Page ) 92 SB
2079 119 21 (4) 21 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 269 1780 (Note:  Since DG Clients are independent programs, they may incorporate other shutdown) 1780 SB
300 328 1633 (methods.  For example, one might write a DG Client which stops upon receiving a) 1633 SB
300 387 1659 (Stop/Freeze PDU.  Such alternative methods of stopping a DG Client are obviously) 1659 SB
300 446 704 (outside of the scope of this manual.) 704 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 555 1204 (What are the callable routines in the DIS Gateway?) 1204 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 666 1591 (All of the callable routines in the DIS Gateway are related to creating DG Client) 1591 SB
300 725 351 (programs.  Table ) 351 SB
651 725 25 (1) 25 SB
676 725 1424 ( lists routines which have related purposes.  Each routine is described in) 1424 SB
300 784 691 (further detail on subsequent pages.) 691 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
888 952 147 (Table ) 147 SB
1035 952 28 (1) 28 SB
1063 952 449 (, Callable Routines) 449 SB
0 0 0 fC
/fm 256 def
2 2 275 1061 B
1 F
n
/fm 256 def
2 2 275 1061 B
1 F
n
/fm 256 def
789 2 278 1061 B
1 F
n
/fm 256 def
2 2 1068 1061 B
1 F
n
/fm 256 def
1049 2 1071 1061 B
1 F
n
/fm 256 def
2 2 2121 1061 B
1 F
n
/fm 256 def
2 2 2121 1061 B
1 F
n
/fm 256 def
2 58 275 1064 B
1 F
n
/fm 256 def
2 58 2121 1064 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
gs 790 62 278 1061 CB
300 1066 313 (Status Routines) 313 SB
gr
/fm 256 def
2 8 275 1123 B
1 F
n
/fm 256 def
788 2 278 1123 B
1 F
n
/fm 256 def
788 2 278 1129 B
1 F
n
/fm 256 def
8 2 1067 1123 B
1 F
n
/fm 256 def
8 2 1067 1129 B
1 F
n
/fm 256 def
8 2 1070 1123 B
1 F
n
/fm 256 def
8 2 1070 1129 B
1 F
n
/fm 256 def
1041 2 1079 1123 B
1 F
n
/fm 256 def
1041 2 1079 1129 B
1 F
n
/fm 256 def
2 8 2121 1123 B
1 F
n
/fm 256 def
2 58 275 1132 B
1 F
n
/fm 256 def
2 58 1067 1132 B
1 F
n
/fm 256 def
2 58 2121 1132 B
1 F
n
gs 789 68 278 1123 CB
300 1134 157 (Success) 157 SB
gr
gs 1051 68 1070 1123 CB
1091 1134 932 (Checks if a call to a DG routine was successful) 932 SB
gr
/fm 256 def
2 58 275 1191 B
1 F
n
/fm 256 def
2 58 1067 1191 B
1 F
n
/fm 256 def
2 58 2121 1191 B
1 F
n
gs 789 59 278 1191 CB
300 1193 137 (Failure) 137 SB
gr
gs 1051 59 1070 1191 CB
1091 1193 981 (Checks if a call to a DG routine was unsuccessful) 981 SB
gr
/fm 256 def
2 58 275 1250 B
1 F
n
/fm 256 def
2 58 1067 1250 B
1 F
n
/fm 256 def
2 58 2121 1250 B
1 F
n
/fm 256 def
2 8 275 1309 B
1 F
n
/fm 256 def
788 2 278 1309 B
1 F
n
/fm 256 def
788 2 278 1315 B
1 F
n
/fm 256 def
8 2 1067 1309 B
1 F
n
/fm 256 def
8 2 1067 1315 B
1 F
n
/fm 256 def
8 2 1070 1309 B
1 F
n
/fm 256 def
8 2 1070 1315 B
1 F
n
/fm 256 def
1041 2 1079 1309 B
1 F
n
/fm 256 def
1041 2 1079 1315 B
1 F
n
/fm 256 def
2 8 2121 1309 B
1 F
n
/fm 256 def
2 58 275 1318 B
1 F
n
/fm 256 def
2 58 2121 1318 B
1 F
n
gs 790 68 278 1309 CB
300 1320 576 (Simulation Support Routines) 576 SB
gr
/fm 256 def
2 8 275 1377 B
1 F
n
/fm 256 def
788 2 278 1377 B
1 F
n
/fm 256 def
788 2 278 1383 B
1 F
n
/fm 256 def
8 2 1067 1377 B
1 F
n
/fm 256 def
8 2 1067 1383 B
1 F
n
/fm 256 def
8 2 1070 1377 B
1 F
n
/fm 256 def
8 2 1070 1383 B
1 F
n
/fm 256 def
1041 2 1079 1377 B
1 F
n
/fm 256 def
1041 2 1079 1383 B
1 F
n
/fm 256 def
2 8 2121 1377 B
1 F
n
/fm 256 def
2 176 275 1386 B
1 F
n
/fm 256 def
2 176 1067 1386 B
1 F
n
/fm 256 def
2 176 2121 1386 B
1 F
n
gs 789 68 278 1377 CB
300 1388 313 (Initialize_Client) 313 SB
gr
gs 1051 68 1070 1377 CB
1091 1388 978 (Connects the client application to the DG Server,) 978 SB
gr
gs 1051 68 1070 1436 CB
1091 1447 926 (and optionally loads a configuration file and/or) 926 SB
gr
gs 1051 68 1070 1495 CB
1091 1506 512 (starts the DG Client GUI.) 512 SB
gr
/fm 256 def
2 117 275 1563 B
1 F
n
/fm 256 def
2 117 1067 1563 B
1 F
n
/fm 256 def
2 117 2121 1563 B
1 F
n
gs 789 59 278 1563 CB
300 1565 558 (Terminate_Server_Interface) 558 SB
gr
gs 1051 59 1070 1563 CB
1091 1565 932 (Disconnects the client application from the DG) 932 SB
gr
gs 1051 59 1070 1622 CB
1091 1624 143 (Server.) 143 SB
gr
/fm 256 def
2 117 275 1681 B
1 F
n
/fm 256 def
2 117 1067 1681 B
1 F
n
/fm 256 def
2 117 2121 1681 B
1 F
n
gs 789 59 278 1681 CB
300 1683 521 (Synchronize_With_Server) 521 SB
gr
gs 1051 59 1070 1681 CB
1091 1683 974 (Synchronizes the Client with the DG Server after) 974 SB
gr
gs 1051 59 1070 1740 CB
1091 1742 971 (all dead reckoning updates have been performed.) 971 SB
gr
/fm 256 def
2 117 275 1799 B
1 F
n
/fm 256 def
2 117 1067 1799 B
1 F
n
/fm 256 def
2 117 2121 1799 B
1 F
n
gs 789 59 278 1799 CB
300 1801 356 (Client_Connected) 356 SB
gr
gs 1051 59 1070 1799 CB
1091 1801 992 (Checks to ensure that the Client has not been shut) 992 SB
gr
gs 1051 59 1070 1858 CB
1091 1860 1009 (down by either the DG Server or the Client\222s GUI.) 1009 SB
gr
/fm 256 def
2 117 275 1917 B
1 F
n
/fm 256 def
2 117 1067 1917 B
1 F
n
/fm 256 def
2 117 2121 1917 B
1 F
n
gs 789 59 278 1917 CB
300 1919 320 (Get_Next_PDU) 320 SB
gr
gs 1051 59 1070 1917 CB
1091 1919 894 (Retrieves the next PDU \(if any\) from the DG) 894 SB
gr
gs 1051 59 1070 1976 CB
1091 1978 143 (Server.) 143 SB
gr
/fm 256 def
2 58 275 2035 B
1 F
n
/fm 256 def
2 58 1067 2035 B
1 F
n
/fm 256 def
2 58 2121 2035 B
1 F
n
gs 789 59 278 2035 CB
300 2037 438 (Get_Simulation_State) 438 SB
gr
gs 1051 59 1070 2035 CB
1091 2037 751 (Retrieves the current simulation state.) 751 SB
gr
/fm 256 def
2 117 275 2094 B
1 F
n
/fm 256 def
2 117 1067 2094 B
1 F
n
/fm 256 def
2 117 2121 2094 B
1 F
n
gs 789 59 278 2094 CB
300 2096 325 (Get_Entity_Info) 325 SB
gr
gs 1051 59 1070 2094 CB
1091 2096 871 (Retrieves information for an entity based on) 871 SB
gr
gs 1051 59 1070 2153 CB
1091 2155 553 (Site/Application/Entity IDs.) 553 SB
gr
/fm 256 def
2 117 275 2212 B
1 F
n
/fm 256 def
2 117 1067 2212 B
1 F
n
/fm 256 def
2 117 2121 2212 B
1 F
n
gs 789 59 278 2212 CB
300 2214 669 (Get_Entity_Info_By_Hash_Index) 669 SB
gr
gs 1051 59 1070 2212 CB
1091 2214 930 (Retrieves information for an entity based on its) 930 SB
gr
gs 1051 59 1070 2271 CB
1091 2273 330 (hash table index.) 330 SB
gr
/fm 256 def
2 117 275 2330 B
1 F
n
/fm 256 def
2 117 1067 2330 B
1 F
n
/fm 256 def
2 117 2121 2330 B
1 F
n
gs 789 59 278 2330 CB
300 2332 571 (Get_First_Simulation_Entity) 571 SB
gr
gs 1051 59 1070 2330 CB
1091 2332 912 (Retrieves information for the first entity in the) 912 SB
gr
gs 1051 59 1070 2389 CB
1091 2391 210 (hash table.) 210 SB
gr
/fm 256 def
2 117 275 2448 B
1 F
n
/fm 256 def
2 117 1067 2448 B
1 F
n
/fm 256 def
2 117 2121 2448 B
1 F
n
gs 789 59 278 2448 CB
300 2450 568 (Get_Next_Simulation_Entry) 568 SB
gr
gs 1051 59 1070 2448 CB
1091 2450 919 (Retrieves information for the next entity in the) 919 SB
gr
gs 1051 59 1070 2507 CB
1091 2509 210 (hash table.) 210 SB
gr
/fm 256 def
2 117 275 2566 B
1 F
n
/fm 256 def
2 117 1067 2566 B
1 F
n
/fm 256 def
2 117 2121 2566 B
1 F
n
gs 789 59 278 2566 CB
300 2568 474 (Get_Entity_Transmitter) 474 SB
gr
gs 1051 59 1070 2566 CB
1091 2568 990 (Retrieves information regarding the transmitter \(if) 990 SB
gr
gs 1051 59 1070 2625 CB
1091 2627 599 (any\) associated with an entity.) 599 SB
gr
/fm 256 def
2 117 275 2684 B
1 F
n
/fm 256 def
2 117 1067 2684 B
1 F
n
/fm 256 def
2 117 2121 2684 B
1 F
n
gs 789 59 278 2684 CB
300 2686 423 (Get_Entity_Emission) 423 SB
gr
gs 1051 59 1070 2684 CB
1091 2686 946 (Retrieves information regarding the emission \(if) 946 SB
gr
gs 1051 59 1070 2743 CB
1091 2745 599 (any\) associated with an entity.) 599 SB
gr
/fm 256 def
2 58 275 2802 B
1 F
n
/fm 256 def
2 58 1067 2802 B
1 F
n
/fm 256 def
2 58 2121 2802 B
1 F
n
gs 789 59 278 2802 CB
300 2804 224 (Send_PDU) 224 SB
gr
gs 1051 59 1070 2802 CB
1091 2804 1002 (Queues a PDU for transmission by the DG Server.) 1002 SB
gr
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Roman
%%Page: 5 5
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1987 119 92 (Page ) 92 SB
2079 119 21 (5) 21 SB
300 169 326 (30 September 1994) 326 SB
0 0 0 fC
/fm 256 def
2 117 275 267 B
1 F
n
/fm 256 def
2 117 1067 267 B
1 F
n
/fm 256 def
2 117 2121 267 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
gs 789 59 278 267 CB
300 269 317 (Set_Entity_Info) 317 SB
gr
gs 1051 59 1070 267 CB
1091 269 923 (Change the entity state information for a given) 923 SB
gr
gs 1051 59 1070 326 CB
1091 328 124 (entity.) 124 SB
gr
/fm 256 def
2 117 275 385 B
1 F
n
/fm 256 def
2 117 1067 385 B
1 F
n
/fm 256 def
2 117 2121 385 B
1 F
n
gs 789 59 278 385 CB
300 387 309 (Remove_Entity) 309 SB
gr
gs 1051 59 1070 385 CB
1091 387 815 (Removes the specified entity based on its) 815 SB
gr
gs 1051 59 1070 444 CB
1091 446 521 (Site/Application/Entity ID) 521 SB
gr
/fm 256 def
2 117 275 503 B
1 F
n
/fm 256 def
2 117 1067 503 B
1 F
n
/fm 256 def
2 117 2121 503 B
1 F
n
gs 789 59 278 503 CB
300 505 653 (Remove_Entity_By_Hash_Index) 653 SB
gr
gs 1051 59 1070 503 CB
1091 505 917 (Removes the specified entity based on its hash) 917 SB
gr
gs 1051 59 1070 562 CB
1091 564 228 (table index.) 228 SB
gr
/fm 256 def
2 176 275 621 B
1 F
n
/fm 256 def
2 176 1067 621 B
1 F
n
/fm 256 def
2 176 2121 621 B
1 F
n
gs 789 59 278 621 CB
300 623 319 (Get_Entity_List) 319 SB
gr
gs 1051 59 1070 621 CB
1091 623 990 (Produces a list of active entities in a form that can) 990 SB
gr
gs 1051 59 1070 680 CB
1091 682 988 (be used directly with the DIS Library filtering and) 988 SB
gr
gs 1051 59 1070 739 CB
1091 741 324 (sorting routines.) 324 SB
gr
/fm 256 def
2 58 275 798 B
1 F
n
/fm 256 def
2 58 1067 798 B
1 F
n
/fm 256 def
2 58 2121 798 B
1 F
n
/fm 256 def
2 8 275 857 B
1 F
n
/fm 256 def
788 2 278 857 B
1 F
n
/fm 256 def
788 2 278 863 B
1 F
n
/fm 256 def
8 2 1067 857 B
1 F
n
/fm 256 def
8 2 1067 863 B
1 F
n
/fm 256 def
8 2 1070 857 B
1 F
n
/fm 256 def
8 2 1070 863 B
1 F
n
/fm 256 def
1041 2 1079 857 B
1 F
n
/fm 256 def
1041 2 1079 863 B
1 F
n
/fm 256 def
2 8 2121 857 B
1 F
n
/fm 256 def
2 58 275 866 B
1 F
n
/fm 256 def
2 58 2121 866 B
1 F
n
gs 790 68 278 857 CB
300 868 544 (Generic PDU Manipulation) 544 SB
gr
/fm 256 def
2 8 275 925 B
1 F
n
/fm 256 def
788 2 278 925 B
1 F
n
/fm 256 def
788 2 278 931 B
1 F
n
/fm 256 def
8 2 1067 925 B
1 F
n
/fm 256 def
8 2 1067 931 B
1 F
n
/fm 256 def
8 2 1070 925 B
1 F
n
/fm 256 def
8 2 1070 931 B
1 F
n
/fm 256 def
1041 2 1079 925 B
1 F
n
/fm 256 def
1041 2 1079 931 B
1 F
n
/fm 256 def
2 8 2121 925 B
1 F
n
/fm 256 def
2 58 275 934 B
1 F
n
/fm 256 def
2 58 1067 934 B
1 F
n
/fm 256 def
2 58 2121 934 B
1 F
n
gs 789 68 278 925 CB
300 936 393 (Free_Generic_PDU) 393 SB
gr
gs 1051 68 1070 925 CB
1091 936 993 (Deallocates memory used to store a generic PDU.) 993 SB
gr
/fm 256 def
2 58 275 993 B
1 F
n
/fm 256 def
2 58 1067 993 B
1 F
n
/fm 256 def
2 58 2121 993 B
1 F
n
gs 789 59 278 993 CB
300 995 475 (Null_Generic_PDU_Ptr) 475 SB
gr
gs 1051 59 1070 993 CB
1091 995 682 (Checks if a generic PDU is empty.) 682 SB
gr
/fm 256 def
2 58 275 1052 B
1 F
n
/fm 256 def
2 58 1067 1052 B
1 F
n
/fm 256 def
2 58 2121 1052 B
1 F
n
gs 789 59 278 1052 CB
300 1054 497 (Valid_Generic_PDU_Ptr) 497 SB
gr
gs 1051 59 1070 1052 CB
1091 1054 777 (Checks if a generic PDU contains data.) 777 SB
gr
/fm 256 def
2 117 275 1111 B
1 F
n
/fm 256 def
2 117 1067 1111 B
1 F
n
/fm 256 def
2 117 2121 1111 B
1 F
n
gs 789 59 278 1111 CB
300 1113 701 (Generic_Ptr_To_PDU_Header_Ptr) 701 SB
gr
gs 1051 59 1070 1111 CB
1091 1113 859 (Returns a pointer to the header section of a) 859 SB
gr
gs 1051 59 1070 1170 CB
1091 1172 270 (generic PDU.) 270 SB
gr
/fm 256 def
2 117 275 1229 B
1 F
n
/fm 256 def
2 117 1067 1229 B
1 F
n
/fm 256 def
2 117 2121 1229 B
1 F
n
gs 789 59 278 1229 CB
300 1231 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1288 CB
300 1290 457 (Entity_State_PDU_Ptr) 457 SB
gr
gs 1051 59 1070 1229 CB
1091 1231 982 (Converts a generic PDU pointer to an entity state) 982 SB
gr
gs 1051 59 1070 1288 CB
1091 1290 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 1347 B
1 F
n
/fm 256 def
2 117 1067 1347 B
1 F
n
/fm 256 def
2 117 2121 1347 B
1 F
n
gs 789 59 278 1347 CB
300 1349 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1406 CB
300 1408 288 (Fire_PDU_Ptr) 288 SB
gr
gs 1051 59 1070 1347 CB
1091 1349 920 (Converts a generic PDU pointer to a fire PDU) 920 SB
gr
gs 1051 59 1070 1406 CB
1091 1408 154 (pointer.) 154 SB
gr
/fm 256 def
2 117 275 1465 B
1 F
n
/fm 256 def
2 117 1067 1465 B
1 F
n
/fm 256 def
2 117 2121 1465 B
1 F
n
gs 789 59 278 1465 CB
300 1467 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1524 CB
300 1526 432 (Detonation_PDU_Ptr) 432 SB
gr
gs 1051 59 1070 1465 CB
1091 1467 952 (Converts a generic PDU pointer to a detonation) 952 SB
gr
gs 1051 59 1070 1524 CB
1091 1526 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 1583 B
1 F
n
/fm 256 def
2 117 1067 1583 B
1 F
n
/fm 256 def
2 117 2121 1583 B
1 F
n
gs 789 59 278 1583 CB
300 1585 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1642 CB
300 1644 543 (Service_Request_PDU_Ptr) 543 SB
gr
gs 1051 59 1070 1583 CB
1091 1585 879 (Converts a generic PDU pointer to a service) 879 SB
gr
gs 1051 59 1070 1642 CB
1091 1644 425 (request PDU pointer.) 425 SB
gr
/fm 256 def
2 117 275 1701 B
1 F
n
/fm 256 def
2 117 1067 1701 B
1 F
n
/fm 256 def
2 117 2121 1701 B
1 F
n
gs 789 59 278 1701 CB
300 1703 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1760 CB
300 1762 524 (Resupply_Offer_PDU_Ptr) 524 SB
gr
gs 1051 59 1070 1701 CB
1091 1703 909 (Converts a generic PDU pointer to a resupply) 909 SB
gr
gs 1051 59 1070 1760 CB
1091 1762 375 (offer PDU pointer.) 375 SB
gr
/fm 256 def
2 117 275 1819 B
1 F
n
/fm 256 def
2 117 1067 1819 B
1 F
n
/fm 256 def
2 117 2121 1819 B
1 F
n
gs 789 59 278 1819 CB
300 1821 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1878 CB
300 1880 601 (Resupply_Recieved_PDU_Ptr) 601 SB
gr
gs 1051 59 1070 1819 CB
1091 1821 909 (Converts a generic PDU pointer to a resupply) 909 SB
gr
gs 1051 59 1070 1878 CB
1091 1880 446 (received PDU pointer.) 446 SB
gr
/fm 256 def
2 117 275 1937 B
1 F
n
/fm 256 def
2 117 1067 1937 B
1 F
n
/fm 256 def
2 117 2121 1937 B
1 F
n
gs 789 59 278 1937 CB
300 1939 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1996 CB
300 1998 558 (Repair_Complete_PDU_Ptr) 558 SB
gr
gs 1051 59 1070 1937 CB
1091 1939 856 (Converts a generic PDU pointer to a repair) 856 SB
gr
gs 1051 59 1070 1996 CB
1091 1998 461 (complete PDU pointer.) 461 SB
gr
/fm 256 def
2 117 275 2055 B
1 F
n
/fm 256 def
2 117 1067 2055 B
1 F
n
/fm 256 def
2 117 2121 2055 B
1 F
n
gs 789 59 278 2055 CB
300 2057 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 2114 CB
300 2116 556 (Repair_Response_PDU_Ptr) 556 SB
gr
gs 1051 59 1070 2055 CB
1091 2057 856 (Converts a generic PDU pointer to a repair) 856 SB
gr
gs 1051 59 1070 2114 CB
1091 2116 454 (response PDU pointer.) 454 SB
gr
/fm 256 def
2 117 275 2173 B
1 F
n
/fm 256 def
2 117 1067 2173 B
1 F
n
/fm 256 def
2 117 2121 2173 B
1 F
n
gs 789 59 278 2173 CB
300 2175 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 2232 CB
300 2234 386 (Collision_PDU_Ptr) 386 SB
gr
gs 1051 59 1070 2173 CB
1091 2175 906 (Converts a generic PDU pointer to a collision) 906 SB
gr
gs 1051 59 1070 2232 CB
1091 2234 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 2291 B
1 F
n
/fm 256 def
2 117 1067 2291 B
1 F
n
/fm 256 def
2 117 2121 2291 B
1 F
n
gs 789 59 278 2291 CB
300 2293 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 2350 CB
300 2352 486 (Create_Entity_PDU_Ptr) 486 SB
gr
gs 1051 59 1070 2291 CB
1091 2293 985 (Converts a generic PDU pointer to a create entity) 985 SB
gr
gs 1051 59 1070 2350 CB
1091 2352 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 2409 B
1 F
n
/fm 256 def
2 117 1067 2409 B
1 F
n
/fm 256 def
2 117 2121 2409 B
1 F
n
gs 789 59 278 2409 CB
300 2411 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 2468 CB
300 2470 519 (Remove_Entity_PDU_Ptr) 519 SB
gr
gs 1051 59 1070 2409 CB
1091 2411 889 (Converts a generic PDU pointer to a remove) 889 SB
gr
gs 1051 59 1070 2468 CB
1091 2470 391 (entity PDU pointer.) 391 SB
gr
/fm 256 def
2 117 275 2527 B
1 F
n
/fm 256 def
2 117 1067 2527 B
1 F
n
/fm 256 def
2 117 2121 2527 B
1 F
n
gs 789 59 278 2527 CB
300 2529 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 2586 CB
300 2588 490 (Start_Resume_PDU_Ptr) 490 SB
gr
gs 1051 59 1070 2527 CB
1091 2529 985 (Converts a generic PDU pointer to a start/resume) 985 SB
gr
gs 1051 59 1070 2586 CB
1091 2588 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 2645 B
1 F
n
/fm 256 def
2 117 1067 2645 B
1 F
n
/fm 256 def
2 117 2121 2645 B
1 F
n
gs 789 59 278 2645 CB
300 2647 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 2704 CB
300 2706 461 (Stop_Freeze_PDU_Ptr) 461 SB
gr
gs 1051 59 1070 2645 CB
1091 2647 960 (Converts a generic PDU pointer to a stop/freeze) 960 SB
gr
gs 1051 59 1070 2704 CB
1091 2706 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 2763 B
1 F
n
/fm 256 def
2 117 1067 2763 B
1 F
n
/fm 256 def
2 117 2121 2763 B
1 F
n
gs 789 59 278 2763 CB
300 2765 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 2822 CB
300 2824 484 (Acknowledge_PDU_Ptr) 484 SB
gr
gs 1051 59 1070 2763 CB
1091 2765 752 (Converts a generic PDU pointer to an) 752 SB
gr
gs 1051 59 1070 2822 CB
1091 2824 541 (acknowledge PDU pointer.) 541 SB
gr
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Roman
%%Page: 6 6
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1987 119 92 (Page ) 92 SB
2079 119 21 (6) 21 SB
300 169 326 (30 September 1994) 326 SB
0 0 0 fC
/fm 256 def
2 117 275 267 B
1 F
n
/fm 256 def
2 117 1067 267 B
1 F
n
/fm 256 def
2 117 2121 267 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
gs 789 59 278 267 CB
300 269 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 326 CB
300 328 390 (Emission_PDU_Ptr) 390 SB
gr
gs 1051 59 1070 267 CB
1091 269 936 (Converts a generic PDU pointer to an emission) 936 SB
gr
gs 1051 59 1070 326 CB
1091 328 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 385 B
1 F
n
/fm 256 def
2 117 1067 385 B
1 F
n
/fm 256 def
2 117 2121 385 B
1 F
n
gs 789 59 278 385 CB
300 387 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 444 CB
300 446 320 (Laser_PDU_Ptr) 320 SB
gr
gs 1051 59 1070 385 CB
1091 387 946 (Converts a generic PDU pointer to a laser PDU) 946 SB
gr
gs 1051 59 1070 444 CB
1091 446 154 (pointer.) 154 SB
gr
/fm 256 def
2 117 275 503 B
1 F
n
/fm 256 def
2 117 1067 503 B
1 F
n
/fm 256 def
2 117 2121 503 B
1 F
n
gs 789 59 278 503 CB
300 505 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 562 CB
300 564 441 (Transmitter_PDU_Ptr) 441 SB
gr
gs 1051 59 1070 503 CB
1091 505 956 (Converts a generic PDU pointer to a transmitter) 956 SB
gr
gs 1051 59 1070 562 CB
1091 564 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 621 B
1 F
n
/fm 256 def
2 117 1067 621 B
1 F
n
/fm 256 def
2 117 2121 621 B
1 F
n
gs 789 59 278 621 CB
300 623 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 680 CB
300 682 384 (Receiver_PDU_Ptr) 384 SB
gr
gs 1051 59 1070 621 CB
1091 623 899 (Converts a generic PDU pointer to a receiver) 899 SB
gr
gs 1051 59 1070 680 CB
1091 682 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 739 B
1 F
n
/fm 256 def
2 117 1067 739 B
1 F
n
/fm 256 def
2 117 2121 739 B
1 F
n
gs 789 59 278 739 CB
300 741 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 798 CB
300 800 530 (Action_Request_PDU_Ptr) 530 SB
gr
gs 1051 59 1070 739 CB
1091 741 886 (Converts a generic PDU pointer to an action) 886 SB
gr
gs 1051 59 1070 798 CB
1091 800 425 (request PDU pointer.) 425 SB
gr
/fm 256 def
2 117 275 857 B
1 F
n
/fm 256 def
2 117 1067 857 B
1 F
n
/fm 256 def
2 117 2121 857 B
1 F
n
gs 789 59 278 857 CB
300 859 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 916 CB
300 918 453 (Data_Qeury_PDU_Ptr) 453 SB
gr
gs 1051 59 1070 857 CB
1091 859 950 (Converts a generic PDU pointer to a data query) 950 SB
gr
gs 1051 59 1070 916 CB
1091 918 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 975 B
1 F
n
/fm 256 def
2 117 1067 975 B
1 F
n
/fm 256 def
2 117 2121 975 B
1 F
n
gs 789 59 278 975 CB
300 977 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1034 CB
300 1036 395 (Set_Data_PDU_Ptr) 395 SB
gr
gs 1051 59 1070 975 CB
1091 977 1007 (Converts a generic PDU pointer to a set data PDU) 1007 SB
gr
gs 1051 59 1070 1034 CB
1091 1036 154 (pointer.) 154 SB
gr
/fm 256 def
2 117 275 1093 B
1 F
n
/fm 256 def
2 117 1067 1093 B
1 F
n
/fm 256 def
2 117 2121 1093 B
1 F
n
gs 789 59 278 1093 CB
300 1095 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1152 CB
300 1154 305 (Data_PDU_Ptr) 305 SB
gr
gs 1051 59 1070 1093 CB
1091 1095 938 (Converts a generic PDU pointer to a data PDU) 938 SB
gr
gs 1051 59 1070 1152 CB
1091 1154 154 (pointer.) 154 SB
gr
/fm 256 def
2 117 275 1211 B
1 F
n
/fm 256 def
2 117 1067 1211 B
1 F
n
/fm 256 def
2 117 2121 1211 B
1 F
n
gs 789 59 278 1211 CB
300 1213 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1270 CB
300 1272 489 (Event_Report_PDU_Ptr) 489 SB
gr
gs 1051 59 1070 1211 CB
1091 1213 983 (Converts a generic PDU pointer to a event report) 983 SB
gr
gs 1051 59 1070 1270 CB
1091 1272 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 1329 B
1 F
n
/fm 256 def
2 117 1067 1329 B
1 F
n
/fm 256 def
2 117 2121 1329 B
1 F
n
gs 789 59 278 1329 CB
300 1331 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1388 CB
300 1390 383 (Message_PDU_Ptr) 383 SB
gr
gs 1051 59 1070 1329 CB
1091 1331 907 (Converts a generic PDU pointer to a message) 907 SB
gr
gs 1051 59 1070 1388 CB
1091 1390 267 (PDU pointer.) 267 SB
gr
/fm 256 def
2 117 275 1447 B
1 F
n
/fm 256 def
2 2 275 1565 B
1 F
n
/fm 256 def
2 2 275 1565 B
1 F
n
/fm 256 def
788 2 278 1565 B
1 F
n
/fm 256 def
2 117 1067 1447 B
1 F
n
/fm 256 def
2 2 1067 1565 B
1 F
n
/fm 256 def
1050 2 1070 1565 B
1 F
n
/fm 256 def
2 117 2121 1447 B
1 F
n
/fm 256 def
2 2 2121 1565 B
1 F
n
/fm 256 def
2 2 2121 1565 B
1 F
n
gs 789 59 278 1447 CB
300 1449 347 (Generic_Ptr_To_) 347 SB
gr
gs 789 59 278 1506 CB
300 1508 333 (Signal_PDU_Ptr) 333 SB
gr
gs 1051 59 1070 1447 CB
1091 1449 968 (Converts a generic PDU pointer to a signal PDU) 968 SB
gr
gs 1051 59 1070 1506 CB
1091 1508 154 (pointer.) 154 SB
gr
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Roman
%%Page: 7 7
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1987 119 92 (Page ) 92 SB
2079 119 21 (7) 21 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 473 (DG_Status.Success) 473 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 802 (Checks if a call to a DG routine was successful.) 802 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 425 (function Success\() 425 SB
600 667 925 (   Status : in DG_Status.STATUS_TYPE\)) 925 SB
600 712 425 (  return BOOLEAN;) 425 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 275 (DG_Status_.ada) 275 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 1307 (All of the callable procedures in the DG return a Status parameter, indicating) 1307 SB
750 955 1313 (the success or failure of the particular call.  Rather than have the programmer) 1313 SB
750 1005 324 (use a construct like) 324 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
750 1103 1300 (if DG_Status.\224=\223\(Status, DG_Status.SUCCESS\) then ...) 1300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1200 1278 (in their code, the Success and Failure functions are supplied instead.  These) 1278 SB
750 1250 594 (may help improve code readability.) 594 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1348 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1348 426 (Success returns TRUE if ) 426 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1176 1348 103 (Status) 103 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1279 1348 775 ( was set to DG_Status.SUCCESS, and returns) 775 SB
750 1398 466 (FALSE for all other values.) 466 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1497 165 (Example) 165 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 1592 75 (...) 75 SB
600 1637 700 (DG_Client.Initialize_Client\() 700 SB
600 1682 525 (    Load_GUI => TRUE,) 525 SB
600 1727 750 (    Status   => Local_Status\);) 750 SB
600 1772 50 (--) 50 SB
600 1817 1175 (-- Print initialization success/failure message) 1175 SB
600 1862 50 (--) 50 SB
600 1907 1025 (if \(DG_Status.Success\(Local_Status\)\) then) 1025 SB
600 1952 500 (   Text_IO.Put_Line\() 500 SB
600 1997 1400 (     "Successfully initialized the DG Client software"\);) 1400 SB
600 2042 100 (else) 100 SB
600 2087 500 (   Text_IO.Put_Line\() 500 SB
600 2132 1025 (     "DG Client initialization failed!"\);) 1025 SB
600 2177 675 (   raise DG_CLIENT_FAILURE;) 675 SB
600 2222 175 (end if;) 175 SB
600 2267 75 (...) 75 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 8 8
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1987 119 92 (Page ) 92 SB
2079 119 21 (8) 21 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 434 (DG_Status.Failure) 434 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 845 (Checks if a call to a DG routine was unsuccessful.) 845 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 425 (function Failure\() 425 SB
600 667 925 (   Status : in DG_Status.STATUS_TYPE\)) 925 SB
600 712 425 (  return BOOLEAN;) 425 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 275 (DG_Status_.ada) 275 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 1307 (All of the callable procedures in the DG return a Status parameter, indicating) 1307 SB
750 955 1313 (the success or failure of the particular call.  Rather than have the programmer) 1313 SB
750 1005 324 (use a construct like) 324 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
750 1103 1300 (if DG_Status.\224=\223\(Status, DG_Status.SUCCESS\) then ...) 1300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1200 1278 (in their code, the Success and Failure functions are supplied instead.  These) 1278 SB
750 1250 594 (may help improve code readability.) 594 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1348 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1348 435 (Failure returns FALSE if ) 435 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1185 1348 103 (Status) 103 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1288 1348 775 ( was set to DG_Status.SUCCESS, and returns) 775 SB
750 1398 447 (TRUE for all other values.) 447 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1497 165 (Example) 165 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 1592 75 (...) 75 SB
600 1637 925 (Local_Status : DG_Status.STATUS_TYPE;) 925 SB
600 1682 75 (...) 75 SB
600 1727 700 (DG_Client.Initialize_Client\() 700 SB
600 1772 525 (    Load_GUI => TRUE,) 525 SB
600 1817 750 (    Status   => Local_Status\);) 750 SB
600 1862 50 (--) 50 SB
600 1907 1150 (-- Exit program if client initialization fails) 1150 SB
600 1952 50 (--) 50 SB
600 1997 1025 (if \(DG_Status.Failure\(Local_Status\)\) then) 1025 SB
600 2042 500 (   Text_IO.Put_Line\() 500 SB
600 2087 1025 (     "DG Client initialization failed!"\);) 1025 SB
600 2132 675 (   raise DG_CLIENT_FAILURE;) 675 SB
600 2177 175 (end if;) 175 SB
600 2222 75 (...) 75 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 9 9
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1987 119 92 (Page ) 92 SB
2079 119 21 (9) 21 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 620 (DG_Client.Initialize_Client) 620 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1224 (Connects  the client application to the DG Server, and optionally loads a) 1224 SB
750 480 858 (configuration file and/or starts the DG Client GUI.) 858 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 577 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 672 700 (procedure Initialize_Client\() 700 SB
600 717 1325 (   Load_Configuration_File : in     BOOLEAN := FALSE;) 1325 SB
600 762 1250 (   Configuration_File      : in     STRING  := "";) 1250 SB
600 807 1325 (   Load_GUI                : in     BOOLEAN := FALSE;) 1325 SB
600 852 1250 (   GUI_Program             : in     STRING  := "";) 1250 SB
600 897 1275 (   GUI_Display             : in     STRING  := "0";) 1275 SB
600 942 1250 (   Client_Name             : in     STRING  := "";) 1250 SB
600 987 1475 (   Status                  :    out DG_Status.STATUS_TYPE\);) 1475 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1082 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1082 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1180 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1180 1275 (This procedure establishes a connection between the DG Client and the DG) 1275 SB
750 1230 1297 (Server.  If Load_Configuration_File is set TRUE and a file name included in) 1297 SB
750 1280 1253 (Configuration_File, then the specified configuration file will be loaded.  If) 1253 SB
750 1330 1271 (Load_GUI is TRUE and a program name given for GUI_Program, then the) 1271 SB
750 1380 1332 (specified GUI will be started as well.  The Client_Name parameter can be used) 1332 SB
750 1430 1339 (to individualize the displays of the XDG_Client GUI.  Whatever string is given) 1339 SB
750 1480 1185 (for this parameter will appear in the title bars of the XDG_Client GUI) 1185 SB
750 1530 160 (windows.) 160 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1628 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1628 984 (Initialize_Client can return the following values in Status:) 984 SB
750 1728 180 (SUCCESS) 180 SB
1200 1728 751 (No errors were encountered in initialization.) 751 SB
750 1828 668 (CLI_INI_LOGIN_DENIED_FAILURE) 668 SB
1200 1878 850 (The DG Server did not permit this client to log in.) 850 SB
750 1978 341 (CLI_INI_FAILURE) 341 SB
1200 1978 848 (An unknown error occurred which was trapped by) 848 SB
1200 2028 684 (the "when OTHERS" exception handler.) 684 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 10 10
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (10) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 914 (DG_Client.Terminate_Server_Interface) 914 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 928 (Disconnects the client application from the DG Server.) 928 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 925 (procedure Terminate_Server_Interface\() 925 SB
600 667 975 (   Status : out DG_Status.STATUS_TYPE\);) 975 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 762 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 762 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 860 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 860 1189 (This routine informs the DG Server that the client is shutting down its) 1189 SB
750 910 1257 (connection with the Server.  All resources in use by the Client will then be) 1257 SB
750 960 201 (deallocated.) 201 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1058 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1058 1182 (Terminate_Server_Interface can return the following values in Status:) 1182 SB
750 1158 180 (SUCCESS) 180 SB
1200 1158 820 (No errors were encountered in disconnecting the) 820 SB
1200 1208 105 (client.) 105 SB
750 1308 346 (CLI_TSI_FAILURE) 346 SB
1200 1308 848 (An unknown error occurred which was trapped by) 848 SB
1200 1358 684 (the "when OTHERS" exception handler.) 684 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 11 11
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (11) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 869 (DG_Client.Synchronize_With_Server) 869 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1295 (Synchronizes the Client with the DG Server after all dead reckoning updates) 1295 SB
750 480 364 (have been performed.) 364 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 577 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 672 850 (procedure Synchronize_With_Server\() 850 SB
600 717 625 (   Overrun : out BOOLEAN;) 625 SB
600 762 1000 (   Status  : out DG_Status.STATUS_TYPE\);) 1000 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 857 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 857 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 955 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 955 1294 (Either Synchronize_With_Server or Client_Connected should be called each) 1294 SB
750 1005 1309 (processing cycle to ensure that the client or the DG Server have not been shut) 1309 SB
750 1055 103 (down.) 103 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1153 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1153 850 (Synchronize_With_Server sets Overrun as follows) 850 SB
750 1253 108 (TRUE) 108 SB
1200 1253 413 (Synchronize_With_Serv) 413 SB
1613 1253 441 (er was called after the DG) 441 SB
1200 1303 870 (Server had updated all the dead reckoned positions.) 870 SB
750 1403 127 (FALSE) 127 SB
750 1503 1153 (Synchronize_With_Server can return the following values in Status:) 1153 SB
750 1603 180 (SUCCESS) 180 SB
1200 1603 478 (No errors were encountered.) 478 SB
750 1703 456 (CLI_SYNC_SHUTDOWN) 456 SB
1200 1753 861 (The DG Server or the Client GUI has signaled that) 861 SB
1200 1803 580 (this client should shut itself down.) 580 SB
750 1903 394 (CLI_SYNC_FAILURE) 394 SB
1200 1903 848 (An unknown error occurred which was trapped by) 848 SB
1200 1953 684 (the "when OTHERS" exception handler.) 684 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 12 12
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (12) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 682 (DG_Client.Client_Connected) 682 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1240 (Checks to ensure that the Client has not been shut down by either the DG) 1240 SB
750 480 452 (Server or the Client's GUI.) 452 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 577 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 672 675 (procedure Client_Connected\() 675 SB
600 717 975 (   Status : out DG_Status.STATUS_TYPE\);) 975 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 812 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 812 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 910 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 910 1307 (Either Client_Connected or Synchronize_With_Server should be called every) 1307 SB
750 960 1320 (processing cycle, to ensure that the client or the DG Server have not been shut) 1320 SB
750 1010 103 (down.) 103 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1108 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1108 1011 (Client_Connected can return the following values in Status:) 1011 SB
750 1208 180 (SUCCESS) 180 SB
1200 1208 478 (No errors were encountered.) 478 SB
750 1308 456 (CLI_SYNC_SHUTDOWN) 456 SB
1200 1358 861 (The DG Server or the Client GUI has signaled that) 861 SB
1200 1408 580 (this client should shut itself down.) 580 SB
750 1508 481 (CLI_CONNECT_FAILURE) 481 SB
1200 1558 848 (An unknown error occurred which was trapped by) 848 SB
1200 1608 684 (the "when OTHERS" exception handler.) 684 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 13 13
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (13) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 610 (DG_Client.Get_Next_PDU) 610 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 888 (Retrieves the next PDU \(if any\) from the DG Server.) 888 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 575 (procedure Get_Next_PDU\() 575 SB
600 667 900 (   PDU_Pointer : out DG_Generic_PDU.) 900 SB
600 712 1200 (                       GENERIC_PDU_POINTER_TYPE;) 1200 SB
600 757 1100 (   Status      : out DG_Status.STATUS_TYPE\);) 1100 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 852 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 852 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 950 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 950 1350 (This routine is normally called in a loop until either an error or a NULL pointer) 1350 SB
750 1000 1286 (is returned.  There are routines in the DG_Generic_PDU package to convert) 1286 SB
750 1050 1163 (between generic and specific pointers.  These are documented below.) 1163 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1148 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1148 1343 (Get_Next_PDU will set PDU_Pointer to NULL if there are no PDUs to process.) 1343 SB
750 1248 972 (Get_Next_PDU can return the following values in Status:) 972 SB
750 1348 180 (SUCCESS) 180 SB
1200 1348 478 (No errors were encountered.) 478 SB
750 1448 366 (CLI_GNP_FAILURE) 366 SB
1200 1448 848 (An unknown error occurred which was trapped by) 848 SB
1200 1498 684 (the "when OTHERS" exception handler.) 684 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 14 14
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (14) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 774 (DG_Client.Get_Simulation_State) 774 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 640 (Retrieves the current simulation state.) 640 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 775 (procedure Get_Simulation_State\() 775 SB
600 667 1250 (   Simulation_State   : out SIMULATION_STATE_TYPE;) 1250 SB
600 712 1375 (   Stop_Freeze_Reason : out DIS_Types.A_REASON_TO_STOP;) 1375 SB
600 757 1275 (   Status             : out DG_Status.STATUS_TYPE\);) 1275 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 852 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 852 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 950 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 950 1169 (This data is maintained by the DG Server, and is updated based upon) 1169 SB
750 1000 1161 (Simulation Management PDUs received by the Server.  If simulation) 1161 SB
750 1050 1253 (management PDUs are not used in a particular exercise, or if the Server is) 1253 SB
750 1100 1349 (configured to filter out simulation management PDUs, then this routine will not) 1349 SB
750 1150 923 (provide an accurate assessment of the simulation state.) 923 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1248 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1248 1079 (Get_Simulation_State can return the following values in Status:) 1079 SB
750 1348 180 (SUCCESS) 180 SB
1200 1348 478 (No errors were encountered.) 478 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 15 15
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (15) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 625 (DG_Client.Get_Entity_Info) 625 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1226 (Retrieves information for an entity based on Site/Application/Entity IDs.) 1226 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 650 (procedure Get_Entity_Info\() 650 SB
600 667 1375 (   Entity_ID   : in     DIS_Types.AN_ENTITY_IDENTIFIER;) 1375 SB
600 712 1150 (   Entity_Info :    out DIS_PDU_Pointer_Types.) 1150 SB
600 757 1175 (                          ENTITY_STATE_PDU_PTR;) 1175 SB
600 802 1175 (   Status      :    out DG_Status.STATUS_TYPE\);) 1175 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 897 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 897 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 995 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 995 981 (Get_Entity_Info can return the following values in Status:) 981 SB
750 1095 180 (SUCCESS) 180 SB
1200 1095 478 (No errors were encountered.) 478 SB
750 1195 796 (CLI_GEI_ENTITY_NOT_FOUND_FAILURE) 796 SB
1200 1245 834 (The entity identifier provided does not match any) 834 SB
1200 1295 521 (known entity in the hash table.) 521 SB
750 1395 353 (CLI_GEI_FAILURE) 353 SB
1200 1395 848 (An unknown error occurred which was trapped by) 848 SB
1200 1445 684 (the "when OTHERS" exception handler.) 684 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 16 16
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (16) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1024 (DG_Client.Get_Entity_Info_By_Hash_Index) 1024 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1091 (Retrieves information for an entity based on its hash table index.) 1091 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1000 (procedure Get_Entity_Info_By_Hash_Index\() 1000 SB
600 667 825 (   Entity_Index : in     INTEGER;) 825 SB
600 712 1175 (   Entity_Info  :    out DIS_PDU_Pointer_Types.) 1175 SB
600 757 1200 (                           ENTITY_STATE_PDU_PTR;) 1200 SB
600 802 1200 (   Status       :    out DG_Status.STATUS_TYPE\);) 1200 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 897 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 897 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 995 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 995 1272 (Get_Entity_Info_By_Hash_Index can return the following values in Status:) 1272 SB
750 1095 180 (SUCCESS) 180 SB
1200 1095 478 (No errors were encountered.) 478 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 17 17
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (17) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 926 (DG_Client.Get_First_Simulation_Entity) 926 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 429 154 (Purpose) 154 SB
750 429 693 (Retrieves information for the first enti) 693 SB
1443 429 364 (ty in the hash table.) 364 SB
450 525 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 620 950 (procedure Get_First_Simulation_Entity\() 950 SB
600 665 1150 (   Entity_Info :    out DIS_PDU_Pointer_Types.) 1150 SB
600 710 1175 (                          ENTITY_STATE_PDU_PTR;) 1175 SB
600 755 1175 (   Status      :    out DG_Status.STATUS_TYPE\);) 1175 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 850 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 850 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 948 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 948 1197 (Get_First_Simulation_Entity can return the following values in Status:) 1197 SB
750 1048 180 (SUCCESS) 180 SB
1200 1048 478 (No errors were encountered.) 478 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 18 18
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (18) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 926 (DG_Client.Get_Next_Simulation_Entity) 926 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 980 (Retrieves information for the next entity in the hash table.) 980 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 925 (procedure Get_Next_Simulation_Entity\() 925 SB
600 667 1075 (   Entity_Info : out DIS_PDU_Pointer_Types.) 1075 SB
600 712 1100 (                       ENTITY_STATE_PDU_PTR;) 1100 SB
600 757 1100 (   Status      : out DG_Status.STATUS_TYPE\);) 1100 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 852 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 852 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 950 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 950 1200 (Get_Next_Simulation_Entity can return the following values in Status:) 1200 SB
750 1050 180 (SUCCESS) 180 SB
1200 1050 478 (No errors were encountered.) 478 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 19 19
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (19) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 810 (DG_Client.Get_Entity_Transmitter) 810 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1257 (Retrieves information regarding the transmitter \(if any\) associated with an) 1257 SB
750 480 106 (entity.) 106 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 577 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 672 825 (procedure Get_Entity_Transmitter\() 825 SB
600 717 1500 (   Entity_ID        : in     DIS_Types.AN_ENTITY_IDENTIFIER;) 1500 SB
600 762 1275 (   Transmitter_Info :    out DIS_PDU_Pointer_Types.) 1275 SB
600 807 1275 (                               TRANSMITTER_PDU_PTR;) 1275 SB
600 852 1300 (   Status           :    out DG_Status.STATUS_TYPE\);) 1300 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 947 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 947 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1045 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1045 1112 (Get_Entity_Transmitter can return the following values in Status:) 1112 SB
750 1145 180 (SUCCESS) 180 SB
1200 1145 478 (No errors were encountered.) 478 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 20 20
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (20) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 756 (DG_Client.Get_Entity_Emission) 756 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1337 (Retrieves information regarding the emission \(if any\) associated with an entity.) 1337 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 750 (procedure Get_Entity_Emission\() 750 SB
600 667 1500 (   Entity_ID        : in     DIS_Types.AN_ENTITY_IDENTIFIER;) 1500 SB
600 712 1275 (   Emission_Info    :    out DIS_PDU_Pointer_Types.) 1275 SB
600 757 1200 (                               EMISSION_PDU_PTR;) 1200 SB
600 802 1300 (   Status           :    out DG_Status.STATUS_TYPE\);) 1300 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 897 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 897 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 995 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 995 1069 (Get_Entity_Emission can return the following values in Status:) 1069 SB
750 1095 180 (SUCCESS) 180 SB
1200 1095 478 (No errors were encountered.) 478 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 21 21
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (21) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 511 (DG_Client.Send_PDU) 511 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 847 (Qeueus a PDU for transmission by the DG Server.) 847 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 475 (procedure Send_PDU\() 475 SB
600 667 975 (   PDU_Address : in     System.ADDRESS;) 975 SB
600 712 1175 (   Status      :    out DG_Status.STATUS_TYPE\);) 1175 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 894 (Send_PDU can return the following values in Status:) 894 SB
750 1005 180 (SUCCESS) 180 SB
1200 1005 478 (No errors were encountered.) 478 SB
750 1105 392 (CLI_SEND_FAILURE) 392 SB
1200 1105 848 (An unknown error occurred which was trapped by) 848 SB
1200 1155 684 (the "when OTHERS" exception handler.) 684 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 22 22
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (22) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 624 (DG_Client.Get_Entity_List) 624 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 429 154 (Purpose) 154 SB
750 429 1321 (Produces a list of active entities in a form that can be used directly with) 1321 SB
750 477 820 (the DIS Library filtering and sorting routines.) 820 SB
450 573 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 668 650 (procedure Get_Entity_List\() 650 SB
600 713 1050 (   Entity_List : out DL_Linked_List_Types.) 1050 SB
600 758 1125 (                       Entity_State_List.PTR;) 1125 SB
600 803 1100 (   Status      : out DG_Status.STATUS_TYPE\);) 1100 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 898 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 898 276 (DG_Client_.ada) 276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 996 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 996 1236 (This routine was designed to be used in conjunction with the various DIS) 1236 SB
750 1046 1331 (Library list manipulation routines, such as filtering and sorting.  Please see the) 1331 SB
750 1096 911 (DL SRM form more information about these routines.) 911 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1194 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1194 977 (Get_Entity_List can return the following values in Status:) 977 SB
750 1294 180 (SUCCESS) 180 SB
1200 1294 478 (No errors were encountered.) 478 SB
750 1394 364 (CLI_GEL_FAILURE) 364 SB
1200 1394 402 (An unknown error occu) 402 SB
1602 1394 446 (rred which was trapped by) 446 SB
1200 1444 684 (the "when OTHERS" exception handler.) 684 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 23 23
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (23) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 889 (DG_Generic_PDU.Free_Generic_PDU) 889 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 429 154 (Purpose) 154 SB
750 429 931 (Deallocates memory used to store a generic PDU.) 931 SB
450 525 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 620 675 (procedure Free_Generic_PDU\() 675 SB
600 665 975 (   S: in out GENERIC_PDU_POINTER_TYPE\);) 975 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 760 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 760 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 858 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 858 905 (This should be used to free any PDUs provided by the) 905 SB
750 908 1184 (DG_Client.Get_Next_PDU routine, once all processing on the PDU is) 1184 SB
750 958 163 (complete.) 163 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1055 244 (Return Value) 244 SB
750 1055 111 (None.) 111 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 24 24
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (24) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 974 (DG_Generic_PDU.Null_Generic_PDU_Ptr) 974 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 581 (Checks if a generic PDU is empty.) 581 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 750 (function Null_Generic_PDU_Ptr\() 750 SB
600 667 925 (   Ptr : in GENERIC_PDU_POINTER_TYPE\)) 925 SB
600 712 425 (  return BOOLEAN;) 425 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 1261 (This function is provided simply to improve code readability.  It is actually) 1261 SB
750 955 953 (nothing more than a check of the pointer against NULL.) 953 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1053 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1053 297 (Returns TRUE if ) 297 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1047 1053 53 (Ptr) 53 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1100 1053 492 ( is NULL, FALSE otherwise.) 492 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 25 25
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (25) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1000 (DG_Generic_PDU.Valid_Generic_PDU_Ptr) 1000 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 662 (Checks if a generic PDU contains data.) 662 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 775 (function Valid_Generic_PDU_Ptr\() 775 SB
600 667 925 (   Ptr : in GENERIC_PDU_POINTER_TYPE\)) 925 SB
600 712 425 (  return BOOLEAN;) 425 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 1261 (This function is provided simply to improve code readability.  It is actually) 1261 SB
750 955 953 (nothing more than a check of the pointer against NULL.) 953 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1053 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1053 297 (Returns TRUE if ) 297 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1047 1053 53 (Ptr) 53 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1100 1053 630 ( is not NULL, and FALSE otherwise.) 630 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 26 26
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (26) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1238 (DG_Generic_PDU.Generic_Ptr_To_PDU_Header_Ptr) 1238 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 964 (Returns a pointer to the header section of a generic PDU.) 964 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 975 (function Generic_Ptr_To_PDU_Header_Ptr\() 975 SB
600 667 800 (   X : GENERIC_PDU_POINTER_TYPE\)) 800 SB
600 712 600 (  return PDU_HEADER_PTR;) 600 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 1142 (This function is designed to be used in conjunction with the various) 1142 SB
750 955 967 (Generic_Ptr_To_xxx_PDU_Ptr routines described below.) 967 SB
750 1005 1322 (Generic_Ptr_To_PDU_Header_Ptr permits the header region of the PDU to be) 1322 SB
750 1055 1342 (examined.  Based on the contents of the PDU Type field, the correct conversion) 1342 SB
750 1105 905 (routine to obtain the specific PDU can be determined.) 905 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1203 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1203 575 (Pointer to the PDU header region.) 575 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 27 27
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (27) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1357 (DG_Generic_PDU.Generic_Ptr_To_Entity_State_PDU_Ptr) 1357 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1064 (Converts a generic PDU pointer to an entity state PDU pointer.) 1064 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1125 (function Generic_Ptr_To_Entity_State_PDU_Ptr\() 1125 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1300 (  return DIS_PDU_Pointer_Types.ENTITY_STATE_PDU_PTR;) 1300 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 1341 (This function converts a generic PDU pointer into an Entity State PDU pointer.) 1341 SB
750 955 1316 (This is one of an entire suite of routines to convert a generic PDU pointer into) 1316 SB
750 1005 1149 (any of the DIS PDUs.  These should be used in conjunction with the) 1149 SB
750 1055 1343 (Generic_Ptr_To_PDU_Header_Ptr routine -- this routine will enable the user to) 1343 SB
750 1105 1214 (examine the header fields, including the PDU_Type field.  Based on the) 1214 SB
750 1155 1350 (contents of the PDU_Type field, the appropriate Generic_Ptr_To_xxx_PDU_Ptr) 1350 SB
750 1205 1199 (routine can be invoked to change the generic PDU into a specific PDU.) 1199 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1303 244 (Return Value) 244 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 1303 554 (A pointer to an entity state PDU.) 554 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 1402 165 (Example) 165 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
450 1497 575 (DG_Client.Get_Next_PDU\() 575 SB
450 1542 825 (  PDU_Pointer => Generic_PDU_Ptr,) 825 SB
450 1587 625 (  Status      => Status\);) 625 SB
450 1632 875 (if \(DG_Status.Success\(Status\)\) then) 875 SB
450 1677 1650 (   case \(DG_Generic_PDU.Generic_Ptr_To_PDU_Header_Ptr\).PDU_Type is) 1650 SB
450 1722 800 (      when DIS_Types.FIRE_PDU =>) 800 SB
450 1767 725 (         My_Fire_PDU_Routine\() 725 SB
450 1812 1350 (           DG_Generic_PDU.Generic_Ptr_To_Fire_PDU_Ptr\() 1350 SB
450 1857 800 (              Generic_PDU_Ptr\)\);) 800 SB
450 1902 950 (      when DIS_Types.DETONATION_PDU =>) 950 SB
450 1947 775 (         My_Detonation_Routine\() 775 SB
450 1992 1500 (           DG_Generic_PDU.Generic_Ptr_To_Detonation_PDU_Ptr\() 1500 SB
450 2037 825 (               Generic_PDU_Ptr\)\);) 825 SB
450 2082 350 (      when ...) 350 SB
450 2127 300 (   end case;) 300 SB
450 2172 175 (end if;) 175 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 28 28
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (28) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1160 (DG_Generic_PDU.Generic_Ptr_To_Fire_PDU_Ptr) 1160 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 917 (Converts a generic PDU pointer to a fire PDU pointer.) 917 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 925 (function Generic_Ptr_To_Fire_PDU_Ptr\() 925 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1100 (  return DIS_PDU_Pointer_Types.FIRE_PDU_PTR;) 1100 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 29 29
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (29) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1330 (DG_Generic_PDU.Generic_Ptr_To_Detonation_PDU_Ptr) 1330 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1037 (Converts a generic PDU pointer to a detonation PDU pointer.) 1037 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1075 (function Generic_Ptr_To_Detonation_PDU_Ptr\() 1075 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1250 (  return DIS_PDU_Pointer_Types.DETONATION_PDU_PTR;) 1250 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 30 30
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (30) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1435 (DG_Generic_PD.Generic_Ptr_To_Service_Request_PDU_Ptr) 1435 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1108 (Converts a generic PDU pointer to a service request PDU pointer.) 1108 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1200 (function Generic_Ptr_To_Service_Request_PDU_Ptr\() 1200 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1375 (  return DIS_PDU_Pointer_Types.SERVICE_REQUEST_PDU_PTR;) 1375 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 31 31
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (31) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1441 (DG_Generic_PDU.Generic_Ptr_To_Resupply_Offer_PDU_Ptr) 1441 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1092 (Converts a generic PDU pointer to a resupply offer PDU pointer.) 1092 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1175 (function Generic_Ptr_To_Resupply_Offer_PDU_Ptr\() 1175 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1350 (  return DIS_PDU_Pointer_Types.RESUPPLY_OFFER_PDU_PTR;) 1350 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 32 32
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (32) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1541 (DG_Generic_PDU.Generic_Ptr_To_Resupply_Received_PDU_Ptr) 1541 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1153 (Converts a generic PDU pointer to a resupply received PDU pointer.) 1153 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1250 (function Generic_Ptr_To_Resupply_Received_PDU_Ptr\() 1250 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1425 (  return DIS_PDU_Pointer_Types.RESUPPLY_RECEIVED_PDU_PTR;) 1425 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 33 33
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (33) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1079 (DG_Generic_PDU.Repair_Complete_PDU_Ptr) 1079 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1122 (Converts a generic PDU pointer to a repair complete PDU pointer.) 1122 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1200 (function Generic_Ptr_To_Repair_Complete_PDU_Ptr\() 1200 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1375 (  return DIS_PDU_Pointer_Types.REPAIR_COMPLETE_PDU_PTR;) 1375 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 34 34
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (34) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1090 (DG_Generic_PDU.Repair_Response_PDU_Ptr) 1090 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1116 (Converts a generic PDU pointer to a repair response PDU pointer.) 1116 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1200 (function Generic_Ptr_To_Repair_Response_PDU_Ptr\() 1200 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1375 (  return DIS_PDU_Pointer_Types.REPAIR_RESPONSE_PDU_PTR;) 1375 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 35 35
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (35) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 878 (DG_Generic_PDU.Collision_PDU_Ptr) 878 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1003 (Converts a generic PDU pointer to a collision PDU pointer.) 1003 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1050 (function Generic_Ptr_To_Collision_PDU_Ptr\() 1050 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1225 (  return DIS_PDU_Pointer_Types.COLLISION_PDU_PTR;) 1225 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 36 36
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (36) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1390 (DG_Generic_PDU.Generic_Ptr_To_Create_Entity_PDU_Ptr) 1390 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1065 (Converts a generic PDU pointer to a create entity PDU pointer.) 1065 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1150 (function Generic_Ptr_To_Create_Entity_PDU_Ptr\() 1150 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1325 (  return DIS_PDU_Pointer_Types.CREATE_ENTITY_PDU_PTR;) 1325 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 37 37
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (37) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1428 (DG_Generic_PDU.Generic_Ptr_To_Remove_Entity_PDU_Ptr) 1428 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1089 (Converts a generic PDU pointer to a remove entity PDU pointer.) 1089 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1150 (function Generic_Ptr_To_Remove_Entity_PDU_Ptr\() 1150 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1325 (  return DIS_PDU_Pointer_Types.REMOVE_ENTITY_PDU_PTR;) 1325 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 38 38
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (38) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1404 (DG_Generic_PDU.Generic_Ptr_To_Start_Resume_PDU_Ptr) 1404 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1066 (Converts a generic PDU pointer to a start/resume PDU pointer.) 1066 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1125 (function Generic_Ptr_To_Start_Resume_PDU_Ptr\() 1125 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1300 (  return DIS_PDU_Pointer_Types.START_RESUME_PDU_PTR;) 1300 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 39 39
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (39) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1367 (DG_Generic_PDU.Generic_Ptr_To_Stop_Freeze_PDU_Ptr) 1367 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1041 (Converts a generic PDU pointer to a stop/freeze PDU pointer.) 1041 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1100 (function Generic_Ptr_To_Stop_Freeze_PDU_Ptr\() 1100 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1275 (  return DIS_PDU_Pointer_Types.STOP_FREEZE_PDU_PTR;) 1275 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 40 40
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (40) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1391 (DG_Generic_PDU.Generic_Ptr_To_Acknowledge_PDU_Ptr) 1391 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1100 (Converts a generic PDU pointer to an acknowledge PDU pointer.) 1100 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1100 (function Generic_Ptr_To_Acknowledge_PDU_Ptr\() 1100 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1275 (  return DIS_PDU_Pointer_Types.ACKNOWLEDGE_PDU_PTR;) 1275 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 41 41
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (41) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1290 (DG_Generic_PDU.Generic_Ptr_To_Emission_PDU_Ptr) 1290 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1030 (Converts a generic PDU pointer to an emission PDU pointer.) 1030 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1025 (function Generic_Ptr_To_Emission_PDU_Ptr\() 1025 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1200 (  return DIS_PDU_Pointer_Types.EMISSION_PDU_PTR;) 1200 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 42 42
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (42) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1202 (DG_Generic_PDU.Generic_Ptr_To_Laser_PDU_Ptr) 1202 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 939 (Converts a generic PDU pointer to a laser PDU pointer.) 939 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 950 (function Generic_Ptr_To_Laser_PDU_Ptr\() 950 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1125 (  return DIS_PDU_Pointer_Types.LASER_PDU_PTR;) 1125 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 43 43
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (43) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1344 (DG_Generic_PDU.Generic_Ptr_To_Transmitter_PDU_Ptr) 1344 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1045 (Converts a generic PDU pointer to a transmitter PDU pointer.) 1045 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1100 (function Generic_Ptr_To_Transmitter_PDU_Ptr\() 1100 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1275 (  return DIS_PDU_Pointer_Types.TRANSMITTER_PDU_PTR;) 1275 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 44 44
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (44) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1276 (DG_Generic_PDU.Generic_Ptr_To_Receiver_PDU_Ptr) 1276 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 993 (Converts a generic PDU pointer to a receiver PDU pointer.) 993 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1025 (function Generic_Ptr_To_Receiver_PDU_Ptr\() 1025 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1200 (  return DIS_PDU_Pointer_Types.RECIEVER_PDU_PTR;) 1200 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 45 45
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (45) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1434 (DG_Generic_PDU.Generic_Ptr_to_Action_Request_PDU_Ptr) 1434 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1116 (Converts a generic PDU pointer to an action request PDU pointer.) 1116 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1175 (function Generic_Ptr_To_Action_Request_PDU_Ptr\() 1175 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1350 (  return DIS_PDU_Pointer_Types.ACTION_REQUEST_PDU_PTR;) 1350 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 46 46
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (46) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1491 (DG_Generic_PDU.Generic_Ptr_To_Action_Response_PDU_Ptr) 1491 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1141 (Converts a generic PDU pointer to an action response PDU pointer.) 1141 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1200 (function Generic_Ptr_To_Action_Response_PDU_Ptr\() 1200 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1375 (  return DIS_PDU_Pointer_Types.ACTION_RESPONSE_PDU_PTR;) 1375 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 47 47
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (47) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1348 (DG_Generic_PDU.Generic_Ptr_To_Data_Query_PDU_Ptr) 1348 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1035 (Converts a generic PDU pointer to a data query PDU pointer.) 1035 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1075 (function Generic_Ptr_To_Data_Query_PDU_Ptr\() 1075 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1250 (  return DIS_PDU_Pointer_Types.DATA_QUERY_PDU_PTR;) 1250 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 48 48
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (48) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1283 (DG_Generic_PDU.Generic_Ptr_To_Set_Data_PDU_Ptr) 1283 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 987 (Converts a generic PDU pointer to a set data PDU pointer.) 987 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1025 (function Generic_Ptr_To_Set_Data_PDU_Ptr\() 1025 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1200 (  return DIS_PDU_Pointer_Types.SET_DATA_PDU_PTR;) 1200 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 49 49
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (49) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1177 (DG_Generic_PDU.Generic_Ptr_To_Data_PDU_Ptr) 1177 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 930 (Converts a generic PDU pointer to a data PDU pointer.) 930 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 925 (function Generic_Ptr_To_Data_PDU_Ptr\() 925 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1100 (  return DIS_PDU_Pointer_Types.DATA_PDU_PTR;) 1100 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 50 50
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (50) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1393 (DG_Generic_PDU.Generic_Ptr_To_Event_Report_PDU_Ptr) 1393 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1083 (Converts a generic PDU pointer to an event report PDU pointer.) 1083 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1125 (function Generic_Ptr_To_Event_Report_PDU_Ptr\() 1125 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1300 (  return DIS_PDU_Pointer_Types.EVENT_REPORT_PDU_PTR;) 1300 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 51 51
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (51) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1280 (DG_Generic_PDU.Generic_Ptr_To_Message_PDU_Ptr) 1280 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 1000 (Converts a generic PDU pointer to a message PDU pointer.) 1000 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 1000 (function Generic_Ptr_To_Message_PDU_Ptr\() 1000 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1175 (  return DIS_PDU_Pointer_Types.MESSAGE_PDU_PTR;) 1175 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 52 52
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (52) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 319 1218 (DG_Generic_PDU.Generic_Ptr_To_Signal_PDU_Ptr) 1218 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 430 154 (Purpose) 154 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 430 961 (Converts a generic PDU pointer to a signal PDU pointer.) 961 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 527 129 (Syntax) 129 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 622 975 (function Generic_Ptr_To_Signal_PDU_Ptr\() 975 SB
600 667 650 (   X : in GENERIC_PDU_PTR\)) 650 SB
600 712 1150 (  return DIS_PDU_Pointer_Types.SIGNAL_PDU_PTR;) 1150 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 807 162 (Package) 162 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 807 408 (DG_Generic_PDU_.ada) 408 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
450 905 167 (Remarks) 167 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
750 905 696 (This routine is essentially identical to the) 696 SB
750 955 1247 (Generic_Ptr_To_Entity_State_PDU_Ptr routine above.  Please see this for) 1247 SB
750 1005 740 (return value information and example code.) 740 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 53 53
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (53) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font13 ANSIFont font
527 319 1345 (Chapter 3 - How do you modify the DIS Gateway?) 1345 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 538 1733 (What would you do to port the DG to a different architecture, such as the) 1733 SB
300 599 132 (VAX?) 132 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 710 1793 (The DG Server contains two routines to help account for differences between the network) 1793 SB
300 769 1637 (representation of a PDU and its final representation on a given host system.  In the) 1637 SB
300 828 1484 (package DG_Host_Specific are two routines, Translate_Host_To_Net and) 1484 SB
300 887 1712 (Translate_Net_To_Host.  Any manipulation required to get between host and net data) 1712 SB
300 946 1780 (formats should be added to these routines.  One example of this would be the little-endian) 1780 SB
300 1005 1699 (to big-endian conversions and floating point representation conversions required for a) 1699 SB
300 1064 268 (VAX system.) 268 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 1173 1013 (What is the basic "outline" of a DG Client?) 1013 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 1284 1753 (Oftentimes it is helpful to have a code example to use as a sort of outline or template for) 1753 SB
300 1343 1730 (your own coding attempts.  The following code illustrates a simple implementation of a) 1730 SB
300 1402 1759 (DG Client, highlighting some of the most frequent functions, and illustrating their proper) 1759 SB
300 1461 214 (placement.) 214 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 1577 225 (procedure) 225 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 54 54
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (54) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font13 ANSIFont font
445 319 1509 (Chapter 4 - How do you troubleshoot the DIS Gateway?) 1509 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 538 1330 (What should I do if the DG Server or my Client crashes?) 1330 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 649 1707 (If the DG Server or a DG Client program crashes, it will almost certainly leave certain) 1707 SB
300 708 1751 (system resources marked as being "in use".  Although the operating system will clean up) 1751 SB
300 767 1652 (most process resources following a program crash, it does not free any of the inter-) 1652 SB
300 826 1773 (process communications \(IPC\) resources.  These must be deallocated by hand.  There are) 1773 SB
300 885 1734 (two commands that assist with this -- ipcs and ipcrm.  The ipcs command returns status) 1734 SB
300 944 1646 (information about IPC resources.  The ipcrm command can be used to remove IPC) 1646 SB
300 1003 1753 (resources.  The ipcrm command takes two parameters.  The first parameter indicates the) 1753 SB
300 1062 1765 (type of IPC resource to remove:  "-q" indicates a message queue, "-m" indicates a shared) 1765 SB
300 1121 1683 (memory area, and "-s" indicates a semaphore.  The second parameter is the ID of the) 1683 SB
300 1180 1452 (resource, which can be determined from the output of the ipcs command.) 1452 SB
300 1298 1707 (For example, assume that \(for whatever reason\) a simulation has just crashed.  Here is) 1707 SB
300 1357 662 (what the cleanup might look like:) 662 SB
600 1475 874 (First, see which resources are still allocated:) 874 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 1591 150 (# ipcs) 150 SB
600 1636 1400 (IPC status from /dev/kmem as of Fri Sep 16 11:47:10 1994) 1400 SB
600 1681 1225 (T     ID     KEY        MODE       OWNER    GROUP) 1225 SB
600 1726 375 (Message Queues:) 375 SB
600 1771 1225 (q   3500 0x00000001 --rw-rw-rw-    brett      mfs) 1225 SB
600 1816 350 (Shared Memory:) 350 SB
600 1861 1225 (m      0 0x000009a4 --rw-rw-rw-     root      sys) 1225 SB
600 1906 1225 (m   8201 0x00000002 --rw-rw-rw-    brett      mfs) 1225 SB
600 1951 1225 (m   7002 0x00000001 --rw-rw-rw-    brett      mfs) 1225 SB
600 1996 1225 (m   6903 0x00007003 --rw-rw-rw-    brett      mfs) 1225 SB
600 2041 1225 (m   6404 0x00007002 --rw-rw-rw-    brett      mfs) 1225 SB
600 2086 275 (Semaphores:) 275 SB
600 2131 1225 (s    640 0x00003801 --ra-ra-ra-    brett      mfs) 1225 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
600 2237 1309 (In this example, the user "brett" was running the simulation.  Only) 1309 SB
600 2296 1402 (resources belonging to brett need to be deallocated.  If multiple people) 1402 SB
600 2355 1449 (were running simulation components \(for example, multiple clients\), then) 1449 SB
600 2414 1415 (each person must eliminate their own resources.  In the example above,) 1415 SB
600 2473 1417 (you can see that user "root" has a shared memory area allocated.  Since) 1417 SB
600 2532 1483 (root was not involved in the simulation, there is no need to worry about its) 1483 SB
600 2591 202 (resources.) 202 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 2707 375 (# ipcrm -q 3500) 375 SB
600 2752 375 (# ipcrm -m 8201) 375 SB
600 2797 375 (# ipcrm -m 7002) 375 SB
600 2842 375 (# ipcrm -m 6903) 375 SB
600 2887 375 (# ipcrm -m 6404) 375 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Helvetica-Bold
%%+ font Times-Roman
%%Page: 55 55
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (55) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 267 350 (# ipcrm -s 640) 350 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Times-Roman
%%Page: 56 56
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (56) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font13 ANSIFont font
418 319 1563 (Appendix - Additional information about the DIS Gateway) 1563 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 597 743 (Unit/Filename Cross-Reference) 743 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 708 1736 (The following lists show files for routines common to both the Server and Clients, code) 1736 SB
300 767 1078 (specific to the Server, and code specific to the Clients.) 1078 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 885 389 (Independent units) 389 SB
375 944 642 (DG_Load_Configuration_File) 642 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 945 122 (comm) 122 SB
1172 945 874 (on/DG_CFM_Load_Configuration_File.ada) 874 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1063 447 (DG_Client_Interface) 447 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1064 743 (common/DG_Client_Interface\(_\).ada) 743 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1182 812 (DG_Configuration_File_Management) 812 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1241 1080 (common/DG_Configuration_File_Management\(_\).ada) 1080 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1359 664 (DG_Generic_Error_Processing) 664 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1360 951 (common/DG_Generic_Error_Processing\(_\).ada) 951 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1478 395 (DG_Generic_PDU) 395 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1479 704 (common/DG_Generic_PDU\(_\).ada) 704 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1597 557 (DG_Hash_Table_Support) 557 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1598 847 (common/DG_Hash_Table_Support\(_\).ada) 847 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1657 416 (Entity_Hash_Index) 416 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1658 868 (common/DG_HTS_Entity_Hash_Index.ada) 868 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1776 316 (DG_IPC_Keys) 316 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1777 626 (common/DG_IPC_Keys\(_\).ada) 626 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1895 389 (DG_Login_Queue) 389 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1896 696 (common/DG_Login_Queue\(_\).ada) 696 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1955 280 (Client_Login) 280 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1956 716 (common/DG_LQ_Client_Login.ada) 716 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2015 308 (Client_Logout) 308 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2016 746 (common/DG_LQ_Client_Logout.ada) 746 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2075 457 (Create_Login_Queue) 457 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2076 884 (common/DG_LQ_Create_Login_Queue.ada) 884 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2135 383 (Get_Client_Login) 383 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2136 814 (common/DG_LQ_Get_Client_Login.ada) 814 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2195 485 (Remove_Login_Queue) 485 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2196 917 (common/DG_LQ_Remove_Login_Queue.ada) 917 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2255 383 (Send_Server_Info) 383 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2256 817 (common/DG_LQ_Send_Server_Info.ada) 817 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2374 218 (DG_Math) 218 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2375 470 (common/DG_Math.ada) 470 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2493 364 (DG_PDU_Buffer) 364 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2494 617 (common/DG_PDU_Buffer.ada) 617 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2553 181 (PB_Add) 181 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2554 536 (common/DG_PB_Add.ada) 536 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2613 200 (PB_Read) 200 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2614 553 (common/DG_PB_Read.ada) 553 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2732 459 (DG_Shared_Memory) 459 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2733 756 (common/DG_Shared_Memory\(_\).ada) 756 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2792 308 (Map_Memory) 308 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2793 311 (common/DG_S) 311 SB
1361 2793 436 (M_Map_Memory.ada) 436 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2852 378 (Remove_Memory) 378 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2853 820 (common/DG_SM_Remove_Memory.ada) 820 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-Roman
%%Page: 57 57
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (57) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 269 365 (Unmap_Memory) 365 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 270 800 (common/DG_SM_Unmap_Memory.ada) 800 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 388 456 (DG_Server_Interface) 456 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 389 696 (common/DG_Server_Interface.ada) 696 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 507 639 (DG_Simulation_Management) 639 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 508 919 (common/DG_Simulation_Management\(_\).ada) 919 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 567 431 (Store_Emitter_Data) 431 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 568 990 (common/DG_SimMgmt_Store_Emitter_Data.ada) 990 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 627 400 (Store_Entity_Data) 400 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 628 961 (common/DG_SimMgmt_Store_Entity_Data.ada) 961 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 687 386 (Store_Laser_Data) 386 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 688 951 (common/DG_SimMgmt_Store_Laser_Data.ada) 951 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 747 450 (Store_Receiver_Data) 450 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 748 1015 (common/DG_SimMgmt_Store_Receiver_Data.ada) 1015 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 807 499 (Store_Simulation_Data) 499 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 866 404 (common/DG_SimM) 404 SB
779 866 650 (gmt_Store_Simulation_Data.ada) 650 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 925 524 (Store_Transmitter_Data) 524 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 984 1072 (common/DG_SimMgmt_Store_Transmitter_Data.ada) 1072 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1102 234 (DG_Status) 234 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1103 489 (common/DG_Status.ada) 489 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1221 449 (DG_Synchronization) 449 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1222 745 (common/DG_Synchronization\(_\).ada) 745 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1281 716 (Initialize_Client_Synchronization) 716 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1340 1146 (common/DG_Sync_Initialize_Client_Synchronization.ada) 1146 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1399 725 (Initialize_Server_Synchronization) 725 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1458 1158 (common/DG_Sync_Initialize_Server_Synchronization.ada) 1158 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1517 417 (Synchronize_Client) 417 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1518 874 (common/DG_Sync_Synchronize_Client.ada) 874 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1577 560 (Synchronize_With_Server) 560 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1578 1008 (common/DG_Sync_Synchronize_With_Server.ada) 1008 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1637 797 (Termination_Client_Synchronization) 797 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1696 1178 (common/DG_Sync_Terminate_Client_Synchronization.ada) 1178 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1814 453 (Generic_Linked_List) 453 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1815 687 (common/Generic_Linked_List.ada) 687 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1933 389 (Independent units) 389 SB
375 1992 239 (DG_Server) 239 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
614 1993 300 ( \(Control Unit\)) 300 SB
1050 1993 444 (server/DG_Server.ada) 444 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2052 344 (DG_Filter_PDU) 344 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2053 544 (server/DG_Filter_PDU.ada) 544 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2112 655 (DG_Remove_Expired_Entities) 655 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2113 834 (server/DG_Remove_Expired_Entities.ada) 834 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2172 491 (DG_Start_Server_GUI) 491 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2173 680 (server/DG_Start_Server_GUI.ada) 680 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2291 450 (DG_Client_Tracking) 450 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2292 694 (server/DG_Client_Tracking\(_\).ada) 694 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2351 247 (Add_Client) 247 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2352 631 (server/DG_CT_Add_Client.ada) 631 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2411 549 (Process_Client_Interfaces) 549 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2412 720 (server/DG_CT_Process_Client_Inte) 720 SB
1770 2412 199 (rfaces.ada) 199 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2471 472 (Process_Login_Queue) 472 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2472 853 (server/DG_CT_Process_Login_Queue.ada) 853 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2531 326 (Remove_Client) 326 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2532 710 (server/DG_CT_Remove_Client.ada) 710 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2591 373 (Shutdown_Client) 373 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2592 768 (server/DG_CT_Shutdown_Clients.ada) 768 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2651 436 (Synchronize_Clients) 436 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2652 809 (server/DG_CT_Synchronize_Clients.ada) 809 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2770 663 (DG_Dead_Reckoning_Support) 663 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2771 902 (server/DG_Dead_Reckoning_Support\(_\).ada) 902 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2889 391 (DG_Host_Specific) 391 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2890 652 (server/DG_Host_Specific\(_\).ada) 652 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 58 58
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (58) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 269 511 (Translate_Host_To_Net) 511 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 270 888 (server/DG_HS_Translate_Host_To_Net.ada) 888 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 329 511 (Translate_Net_To_Host) 511 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 330 888 (server/DG_HS_Translate_Net_To_Host.ada) 888 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 448 701 (DG_Network_Interface_Support) 701 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 449 121 (server) 121 SB
1171 449 816 (/DG_Network_Interface_Support\(_\).ada) 816 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 508 622 (Establish_Network_Interface) 622 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 509 1001 (server/DG_NIS_Establish_Network_Interface.ada) 1001 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 568 290 (Receive_PDU) 290 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 569 702 (server/DG_NIS_Receive_PDU.ada) 702 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 628 649 (Terminate_Network_Interface) 649 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 629 1025 (server/DG_NIS_Terminate_Network_Interface.ada) 1025 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 688 325 (Transmit_PDU) 325 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 689 722 (server/DG_NIS_Transmit_PDU.ada) 722 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 807 976 (DG_Server_Configuration_File_Management) 976 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 866 1184 (server/DG_Server_Configuration_File_Management\(_\).ada) 1184 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 925 777 (Process_Server_Configuration_Data) 777 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 984 1327 (server/DG_Server_CFM_Process_Server_Configuration_Data.ada) 1327 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1043 531 (Save_Configuration_File) 531 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1102 345 (server/DG_Serve) 345 SB
720 1102 748 (r_CFM_Save_Configuration_File.ada) 748 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1220 635 (DG_Server_Error_Processing) 635 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1221 875 (server/DG_Server_Error_Processing\(_\).ada) 875 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1339 358 (DG_Server_GUI) 358 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1340 617 (server/DG_Server_GUI\(_\).ada) 617 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1458 231 (DG_Timer) 231 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1200 1459 492 (server/DG_Timer\(_\).ada) 492 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1518 320 (Change_Timer) 320 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1519 752 (server/DG_Timer_Change_Timer.ada) 752 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1578 343 (Initialize_Timer) 343 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1579 772 (server/DG_Timer_Initialize_Timer.ada) 772 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1638 440 (SIGALRM_Handler) 440 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1639 864 (server/DG_Timer_SIGALRM_Handler.ada) 864 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1698 262 (Synchronize) 262 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1699 702 (server/DG_Timer_Synchronize.ada) 702 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1758 379 (Terminate_Timer) 379 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1759 804 (server/DG_Timer_Terminate_Timer.ada) 804 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1877 363 (DG_Start_Client) 363 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1878 654 (client/DG_Start_Client_GUI.ada) 654 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1996 230 (DG_Client) 230 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 1997 92 (clien) 92 SB
1142 1997 385 (t/DG_Client\(_\).ada) 385 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2056 383 (Client_Connected) 383 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2057 799 (client/DG_Client_Client_Connected.ada) 799 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2116 342 (Initialize_Client) 342 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2117 756 (client/DG_Client_Initialize_Client.ada) 756 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2176 233 (Send_PDU) 233 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2177 667 (client/DG_Client_Send_PDU.ada) 667 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2236 560 (Synchronize_With_Server) 560 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2237 964 (client/DG_Client_Synchronize_With_Server.ada) 964 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2296 604 (Terminate_Server_Interface) 604 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2297 1001 (client/DG_Client_Terminate_Server_Interface.ada) 1001 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2415 967 (DG_Client_Configuration_File_Management) 967 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2474 1158 (client/DG_Client_Configuration_File_Management\(_\).ada) 1158 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2533 768 (Process_Client_Configuration_Data) 768 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2592 1220 (client/DG_Client_CFM_Process_Client_Configuration_Data.) 1220 SB
1595 2592 69 (ada) 69 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2651 531 (Save_Configuration_File) 531 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2710 1067 (client/DG_Client_CFM_Save_Configuration_File.ada) 1067 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2828 626 (DG_Client_Error_Processing) 626 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 2829 849 (client/DG_Client_Error_Processing\(_\).ada) 849 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 59 59
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (59) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 349 (DG_Client_GUI) 349 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1050 270 532 (client/DG_Client_GUI.ada) 532 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 438 1037 (Error Message/Error Code Cross-Reference) 1037 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 549 1494 (The following is a list of each error code and the unit in which it can be set.) 1494 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 667 533 (DG_Hash Table Support) 533 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 726 589 (ENTIDX_LOOP_FAILURE,) 589 SB
450 785 434 (ENTIDX_FAILURE,) 434 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 844 389 (DG_Login_Queue) 389 SB
375 903 280 (Client_Login) 280 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 962 560 (LQ_CLILOGIN_FAILURE) 560 SB
525 1021 400 (OTHERS exception) 400 SB
450 1080 791 (LQ_CLILOGIN_MSGGET_FAILURE) 791 SB
525 1139 363 (MsgGet call failed) 363 SB
450 1198 793 (LQ_CLILOGIN_MSGSND_FAILURE) 793 SB
525 1257 367 (MsgSnd call failed) 367 SB
450 1316 795 (LQ_CLILOGIN_MSGRCV_FAILURE) 795 SB
525 1375 369 (MsgRcv call failed) 369 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1434 308 (Client_Logout) 308 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1493 610 (LQ_CLILOGOUT_FAILURE) 610 SB
525 1552 400 (OTHERS exception) 400 SB
450 1611 843 (LQ_CLILOGOUT_MSGSND_FAILURE) 843 SB
525 1670 367 (MsgSnd call failed) 367 SB
450 1729 845 (LQ_CLILOGOUT_MSGRCV_FAILURE) 845 SB
525 1788 369 (MsgRcv call failed) 369 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1847 457 (Create_Login_Queue) 457 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1906 424 (LQ_CLQ_FAILURE) 424 SB
525 1965 400 (OTHERS exception) 400 SB
450 2024 655 (LQ_CLQ_MSGGET_FAILURE) 655 SB
525 2083 363 (MsgGet call failed) 363 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2142 383 (Get_Client_Login) 383 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2201 424 (LQ_GCL_FAILURE) 424 SB
525 2260 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2319 485 (Remove_Login_Queue) 485 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2378 424 (LQ_RLQ_FAILURE) 424 SB
525 2437 400 (OTHERS exception) 400 SB
450 2496 215 (LQ_RLQ_) 215 SB
665 2496 436 (MSGCTL_FAILURE) 436 SB
525 2555 350 (MsgCtl call failed) 350 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2614 383 (Send_Server_Info) 383 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2673 398 (LQ_SSI_FAILURE) 398 SB
525 2732 400 (OTHERS exception) 400 SB
450 2791 631 (LQ_SSI_MSGSND_FAILURE) 631 SB
525 2850 367 (MsgSnd call failed) 367 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2909 459 (DG_Shared_Memory) 459 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-Roman
%%Page: 60 60
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (60) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 269 308 (Map_Memory) 308 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 328 557 (SM_MAPMEM_FAILURE) 557 SB
525 387 400 (OTHERS exception) 400 SB
450 446 756 (SM_MAPMEM_SHMAT_FAILURE) 756 SB
525 505 348 (ShMAt call failed) 348 SB
450 564 788 (SM_MAPMEM_SHMGET_FAILURE) 788 SB
525 623 371 (ShMGet call failed) 371 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 682 378 (Remove_Memory) 378 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 741 558 (SM_REMMEM_FAILURE) 558 SB
525 800 400 (OTHERS exception) 400 SB
450 859 785 (SM_REMMEM_SHMCTL_FAILURE) 785 SB
525 918 358 (ShMCtl call failed) 358 SB
450 977 789 (SM_REMMEM_SHMGET_FAILURE) 789 SB
525 1036 371 (ShMGet call failed) 371 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1095 365 (Unmap_Memory) 365 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1154 629 (SM_UNMAPMEM_FAILURE) 629 SB
525 1213 400 (OTHERS exception) 400 SB
450 1272 829 (SM_UNMAPMEM_SHMDT_FAILURE) 829 SB
525 1331 349 (ShMDt call failed) 349 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1390 449 (DG_Synchronization) 449 SB
375 1449 716 (Initialize_Client_Synchronization) 716 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1508 573 (SYNC_INITCLI_FAILURE) 573 SB
525 1567 400 (OTHERS exception) 400 SB
450 1626 795 (SYNC_INITCLI_SEMCTL_FAILURE) 795 SB
525 1685 349 (SemCtl call failed) 349 SB
450 1744 799 (SYNC_INITCLI_SEMGET_FAILURE) 799 SB
525 1803 362 (SemGet call failed) 362 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1862 725 (Initialize_Server_Synchronization) 725 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1921 559 (SYNC_INISRV_FAILURE) 559 SB
525 1980 400 (OTHERS exception) 400 SB
450 2039 785 (SYNC_INISRV_SEMGET_FAILURE) 785 SB
525 2098 362 (SemGet call failed) 362 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2157 417 (Synchronize_Client) 417 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2216 472 (SYNC_CLI_FAILURE) 472 SB
525 2275 400 (OTHERS exception) 400 SB
450 2334 694 (SYNC_CLI_SEMCTL_FAILURE) 694 SB
525 2393 120 (SemC) 120 SB
645 2393 229 (tl call failed) 229 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2452 560 (Synchronize_With_Server) 560 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2511 489 (SYNC_SRV_FAILURE) 489 SB
525 2570 400 (OTHERS exception) 400 SB
450 2629 711 (SYNC_SRV_SEMCTL_FAILURE) 711 SB
525 2688 349 (SemCtl call failed) 349 SB
450 2747 681 (SYNC_SRV_SEMOP_FAILURE) 681 SB
525 2806 350 (SemOp call failed) 350 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2865 752 (Terminate_Client_Synchronization) 752 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 61 61
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (61) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 269 611 (SYNC_TERMCLI_FAILURE) 611 SB
525 328 400 (OTHERS exception) 400 SB
450 387 833 (SYNC_TERMCLI_SEMCTL_FAILURE) 833 SB
525 446 349 (SemCtl call failed) 349 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 505 491 (DG_Start_Server_GUI) 491 SB
375 564 491 (DG_Start_Server_GUI) 491 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 623 637 (DG_SERVER_GUI_FAILURE) 637 SB
525 682 400 (OTHERS exception) 400 SB
450 741 860 (DG_SERVER_GUI_EXECVE_FAILURE) 860 SB
525 800 368 (ExecVE call failed) 368 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 859 482 (DG_Start_Client_GUI) 482 SB
375 918 482 (DG_Start_Client_GUI) 482 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 977 244 (DG_CLIEN) 244 SB
694 977 379 (T_GUI_FAILURE) 379 SB
525 1036 400 (OTHERS exception) 400 SB
450 1095 846 (DG_CLIENT_GUI_EXECVE_FAILURE) 846 SB
525 1154 368 (ExecVE call failed) 368 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1213 231 (DG_Timer) 231 SB
375 1272 320 (Change_Timer) 320 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1331 622 (TIMER_CHANGE_FAILURE) 622 SB
525 1390 400 (OTHERS exception) 400 SB
450 1449 910 (TIMER_CHANGE_SETITIMER_FAILURE) 910 SB
525 1508 403 (SetITimer call failed) 403 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1567 343 (Initialize_Timer) 343 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1626 516 (TIMER_INIT_FAILURE) 516 SB
525 1685 400 (OTHERS exception) 400 SB
450 1744 804 (TIMER_INIT_SETITIMER_FAILURE) 804 SB
525 1803 403 (SetITimer call failed) 403 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1862 262 (Synchronize) 262 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1921 548 (TIMER_SYNC_FAILURE) 548 SB
525 1980 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2039 379 (Terminate_Timer) 379 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2098 554 (TIMER_TERM_FAILURE) 554 SB
525 2157 400 (OTHERS exception) 400 SB
450 2216 842 (TIMER_TERM_SETITIMER_FAILURE) 842 SB
525 2275 344 (SetITimer call fai) 344 SB
869 2275 59 (led) 59 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2334 440 (SIGALRM_Handler) 440 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2393 638 (TIMER_SIGALRM_FAILURE) 638 SB
525 2452 400 (OTHERS exception) 400 SB
450 2511 926 (TIMER_SIGALRM_SETITIMER_FAILURE) 926 SB
525 2570 403 (SetITimer call failed) 403 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2629 450 (DG_Client_Tracking) 450 SB
375 2688 472 (Process_Login_Queue) 472 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2747 520 (TRACK_PLQ_FAILURE) 520 SB
525 2806 400 (OTHERS exception) 400 SB
450 2865 1009 (TRACK_PLQ_UNKNOWN_CLIENT_FAILURE) 1009 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 62 62
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (62) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 269 524 (Logout by unknown client) 524 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 328 247 (Add_Client) 247 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 387 533 (TRACK_ADD_FAILURE) 533 SB
525 446 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 505 326 (Remove_Client) 326 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 564 534 (TRACK_REM_FAILURE) 534 SB
525 623 400 (OTHERS exception) 400 SB
450 682 789 (TRACK_REM_UNKNOWN_CLIENT) 789 SB
525 741 444 (Client not found in list) 444 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 800 436 (Synchronize_Clients) 436 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 859 559 (TRACK_SYNC_FAILURE) 559 SB
525 918 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 977 392 (Shutdown_Clients) 392 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1036 711 (TRACK_SHUTDOWN_FAILURE) 711 SB
525 1095 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1154 549 (Process_Client_Interfaces) 549 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1213 504 (TRACK_PCI_FAILURE) 504 SB
525 1272 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1331 364 (DG_PDU_Buffer) 364 SB
375 1390 111 (Read) 111 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1449 455 (PB_READ_FAILURE) 455 SB
525 1508 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1567 92 (Add) 92 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1626 427 (PB_ADD_FAILURE) 427 SB
525 1685 400 (OTHERS exception) 400 SB
450 1744 791 (PB_ADD_PDU_TOO_BIG_FAILURE) 791 SB
525 1803 457 (PDU larger than buffer) 457 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1862 456 (DG_Server_Interface) 456 SB
375 1921 318 (Map_Interface) 318 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1980 507 (SVRIF_MAP_FAILURE) 507 SB
525 2039 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2098 375 (Unmap_Interface) 375 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2157 579 (SVRIF_UNMAP_FAILURE) 579 SB
525 2216 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2275 447 (DG_Client_Interface) 447 SB
375 2334 318 (Map_Interface) 318 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2393 490 (CLIIF_MAP_FAILURE) 490 SB
525 2452 230 (OTHERS e) 230 SB
755 2452 170 (xception) 170 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2511 375 (Unmap_Interface) 375 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2570 562 (CLIIF_UNMAP_FAILURE) 562 SB
525 2629 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2688 230 (DG_Client) 230 SB
375 2747 560 (Synchronize_With_Server) 560 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2806 472 (CLI_SYNC_FAILURE) 472 SB
525 2865 400 (OTHERS exception) 400 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 63 63
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (63) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 269 548 (CLI_SYNC_SHUTDOWN) 548 SB
525 328 604 (Server commanding shutdown) 604 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 387 604 (Terminate_Server_Interface) 604 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 446 415 (CLI_TSI_FAILURE) 415 SB
525 505 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 564 329 (Get_Next_PDU) 329 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 623 439 (CLI_GNP_FAILURE) 439 SB
525 682 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 741 350 (Get_Entity_Info) 350 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 800 423 (CLI_GEI_FAILURE) 423 SB
525 859 400 (OTHERS exception) 400 SB
450 918 954 (CLI_GEI_ENTITY_NOT_FOUND_FAILURE) 954 SB
525 977 392 (Entity ID not found) 392 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1036 345 (Get_Entity_List) 345 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1095 436 (CLI_GEL_FAILURE) 436 SB
525 1154 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1213 244 (Client_Con) 244 SB
619 1213 139 (nected) 139 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1272 575 (CLI_CONNECT_FAILURE) 575 SB
525 1331 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1390 342 (Initialize_Client) 342 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1449 409 (CLI_INI_FAILURE) 409 SB
525 1508 400 (OTHERS exception) 400 SB
450 1567 801 (CLI_INI_LOGIN_DENIED_FAILURE) 801 SB
525 1626 536 (Server did not permit login) 536 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1685 233 (Send_PDU) 233 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1744 470 (CLI_SEND_FAILURE) 470 SB
525 1803 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1862 358 (DG_Server_GUI) 358 SB
375 1921 318 (Map_Interface) 318 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1980 506 (SRVGUI_MI_FAILURE) 506 SB
525 2039 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2098 375 (Unmap_Interface) 375 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2157 498 (SRVGUI_UI_FAILURE) 498 SB
525 2216 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2275 349 (DG_Client_GUI) 349 SB
375 2334 318 (Map_Interface) 318 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2393 489 (CLIGUI_MI_FAILURE) 489 SB
525 2452 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2511 375 (Unmap_Interface) 375 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2570 481 (CLIGUI_UI_FAILURE) 481 SB
525 2629 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2688 701 (DG_Network_Interface_Support) 701 SB
375 2747 622 (Establish_Network_Interface) 622 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2806 424 (NIS_ENI_FAILURE) 424 SB
525 2865 400 (OTHERS exception) 400 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 64 64
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (64) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 269 643 (NIS_ENI_SOCKET_FAILURE) 643 SB
525 328 340 (Socket call failed) 340 SB
450 387 766 (NIS_ENI_SETSOCKOPT_FAILURE) 766 SB
525 446 444 (SetSockOpt call failed) 444 SB
450 505 839 (NIS_ENI_FCNTL_SETOWN_FAILURE) 839 SB
525 564 607 (FCntl\(F_SETOWN\) call failed) 607 SB
450 623 778 (NIS_ENI_FCNTL_SETFL_FAILURE) 778 SB
525 682 546 (FCntl\(F_SETFL\) call failed) 546 SB
450 741 571 (NIS_ENI_BIND_FAILURE) 571 SB
525 800 296 (Bind call failed) 296 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 859 649 (Terminate_Network_Interface) 649 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 918 424 (NIS_TNI_FAILURE) 424 SB
525 977 400 (OTHERS exception) 400 SB
375 1036 607 (NIS_TNI_CLOSE_FAILURE) 607 SB
525 1095 314 (Close call failed) 314 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1154 290 (Receive_PDU) 290 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1213 542 (NIS_RCVPDU_FAILURE) 542 SB
525 1272 400 (OTHERS exception) 400 SB
450 1331 840 (NIS_RCVPDU_RECVFROM_FAILURE) 840 SB
525 1390 410 (RecvFrom call failed) 410 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1449 325 (Transmit_PDU) 325 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1508 507 (NIS_TXPDU_FAILURE) 507 SB
525 1567 400 (OTHERS exception) 400 SB
450 1626 730 (NIS_TXPDU_SENDTO_FAILURE) 730 SB
525 1685 358 (SendTo call failed) 358 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1744 663 (DG_Dead_Reckoning_Support) 663 SB
375 1803 531 (Update_Entity_Positions) 531 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1862 446 (DRS_EEP_FAILURE) 446 SB
525 1921 400 (OTHERS exception) 400 SB
450 1980 922 (DRS_EEP_UPDATE_POSITION_FAILURE) 922 SB
525 2039 613 (DL Update_Position call failed) 613 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2098 344 (DG_Filter_PDU) 344 SB
375 2157 344 (DG_Filter_PDU) 344 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2216 403 (FILTER_FAILURE) 403 SB
525 2275 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2334 639 (DG_Simulation_Management) 639 SB
375 2393 431 (Store_Emitter_Data) 431 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2452 718 (SIMMGMT_STREMIT_FAILURE) 718 SB
525 2511 400 (OTHERS exception) 400 SB
450 2570 1022 (SIMMGMT_STREMIT_NO_ENTITY_FAILURE) 1022 SB
525 2629 497 (Emitter's entity unknown) 497 SB
450 2688 817 (SIMMGMT_STREMIT_TABLE_FULL) 817 SB
525 2747 436 (Emitter hash table full) 436 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 2806 400 (Store_Entity_Data) 400 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2865 777 (SIMMGMT_STRENTITY_FAILURE) 777 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 65 65
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (65) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 269 400 (OTHERS exception) 400 SB
450 328 876 (SIMMGMT_STRENTITY_TABLE_FULL) 876 SB
525 387 407 (Entity hash table full) 407 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 446 386 (Store_Laser_Data) 386 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 505 688 (SIMMGMT_STRLAS_FAILURE) 688 SB
525 564 400 (OTHERS exception) 400 SB
450 623 992 (SIMMGMT_STRLAS_NO_ENTITY_FAILURE) 992 SB
525 682 458 (Laser's entity unknown) 458 SB
450 741 787 (SIMMGMT_STRLAS_TABLE_FULL) 787 SB
525 800 397 (Laser hash table full) 397 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 859 450 (Store_Receiver_Data) 450 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 918 692 (SIMMGMT_STRREC_FAILURE) 692 SB
525 977 400 (OTHERS exception) 400 SB
450 1036 133 (SIMM) 133 SB
583 1036 863 (GMT_STRREC_NO_ENTITY_FAILURE) 863 SB
525 1095 522 (Receiver's entity unknown) 522 SB
450 1154 791 (SIMMGMT_STRREC_TABLE_FULL) 791 SB
525 1213 461 (Receiver hash table full) 461 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1272 499 (Store_Simulation_Data) 499 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1331 684 (SIMMGMT_STRSIM_FAILURE) 684 SB
525 1390 400 (OTHERS exception) 400 SB
450 1449 1095 (SIMMGMT_STRSIM_UNKNOWN_PDU_FAILURE) 1095 SB
525 1508 607 (Unrecognized/unhandled PDU) 607 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1567 524 (Store_Transmitter_Data) 524 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1626 730 (SIMMGMT_STRTRAN_FAILURE) 730 SB
525 1685 400 (OTHERS exception) 400 SB
450 1744 1034 (SIMMGMT_STRTRAN_NO_ENTITY_FAILURE) 1034 SB
525 1803 579 (Transmitter's entity unknown) 579 SB
450 1862 829 (SIMMGMT_STRTRAN_TABLE_FULL) 829 SB
525 1921 518 (Transmitter hash table full) 518 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1980 655 (DG_Remove_Expired_Entities) 655 SB
375 2039 552 (DG_Remove_Expired_En) 552 SB
927 2039 103 (tities) 103 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2098 329 (REE_FAILURE) 329 SB
525 2157 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 2216 812 (DG_Configuration_File_Management) 812 SB
375 2275 542 (Load_Configuration_File) 542 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 2334 453 (CFM_LCF_FAILURE) 453 SB
525 2393 400 (OTHERS exception) 400 SB
450 2452 877 (CFM_LCF_VALUE_MISSING_FAILURE) 877 SB
525 2511 312 (No value in line) 312 SB
450 2570 877 (CFM_LCF_EQUAL_MISSING_FAILURE) 877 SB
525 2629 275 (No "=" in line) 275 SB
450 2688 962 (CFM_LCF_KEYWORD_MISSING_FAILURE) 962 SB
525 2747 381 (No keyword in line) 381 SB
450 2806 961 (CFM_LCF_INVALID_FILENAME_FAILURE) 961 SB
525 2865 452 (Invalid config filename) 452 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 66 66
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1966 119 92 (Page ) 92 SB
2058 119 42 (66) 42 SB
300 169 326 (30 September 1994) 326 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 269 976 (DG_Server_Configuration_File_Management) 976 SB
375 328 531 (Save_Configuration_File) 531 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 387 548 (SRVCFM_SCF_FAILURE) 548 SB
525 446 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 505 674 (Process_Server_Configuration_) 674 SB
1049 505 103 (Data) 103 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 564 585 (SRVCFM_PSCD_FAILURE) 585 SB
525 623 400 (OTHERS exception) 400 SB
450 682 863 (SRVCFM_PSCD_KEYWORD_FAILURE) 863 SB
525 741 504 (Invalid keyword detected) 504 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 800 967 (DG_Client_Configuration_File_Management) 967 SB
375 859 531 (Save_Configuration_File) 531 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 918 531 (CLICFM_SCF_FAILURE) 531 SB
525 977 400 (OTHERS exception) 400 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1036 768 (Process_Client_Configuration_Data) 768 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1095 573 (CLICFM_PCCD_FAILURE) 573 SB
525 1154 400 (OTHERS exception) 400 SB
450 1213 851 (CLICFM_PCCD_KEYWORD_FAILURE) 851 SB
525 1272 504 (Invalid keyword detected) 504 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1331 664 (DG_Generic_Error_Processing) 664 SB
375 1390 295 (Report_Error) 295 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1449 484 (GEP_RE_OVERFLOW) 484 SB
525 1508 431 (Error queue overflow) 431 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1567 239 (DG_Server) 239 SB
375 1626 239 (DG_Server) 239 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1685 363 (SRV_OVERRUN) 363 SB
525 1744 386 (Timeslice exceeded) 386 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
300 1803 861 (Placeholder \(developmental use ONLY!\)) 861 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1862 677 (DG_PLACEHOLDER_ERROR\);) 677 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 67 67
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
0 0 0 fC
916 386 568 (JFT-149-DG.SRM, 30-Sept-94) 568 SB
1136 482 128 (Rev. A) 128 SB
32 0 0 58 58 0 0 0 53 /Helvetica /font12 ANSIFont font
626 667 1147 (SOFTWARE REFERENCE MANUAL \(SRM\)) 1147 SB
1072 803 255 (FOR THE) 255 SB
825 939 749 (DIS GATEWAY \(DG\) CSCI 1) 749 SB
1093 1075 213 (OF THE) 213 SB
316 1211 1768 (ADA DISTRIBUTED INTERACTIVE SIMULATION \(ADIS\) PROJECT) 1768 SB
32 0 0 50 50 0 0 0 46 /Helvetica /font12 ANSIFont font
787 1415 826 (CONTRACT NO. N00421-92-D-0028) 826 SB
868 1533 663 (CDRL SEQUENCE NO. A009) 663 SB
32 0 0 42 42 0 0 0 38 /Helvetica /font12 ANSIFont font
1077 1727 245 (Prepared for:) 245 SB
809 1823 782 (Naval Air Warfare Center Aircraft Division) 782 SB
879 1871 641 (Flight Test and Engineering Group) 641 SB
1080 1967 239 (Prepared by:) 239 SB
1054 2063 292 (J.F. Taylor, Inc.) 292 SB
996 2111 407 (R. 235 and Maple Rd.) 407 SB
952 2159 496 (Lexington Park, MD 20653) 496 SB
0 0 0 fC
/fm 256 def
2 8 272 2324 B
1 F
n
/fm 256 def
8 2 272 2324 B
1 F
n
/fm 256 def
2 2 278 2330 B
1 F
n
/fm 256 def
2 2 278 2330 B
1 F
n
/fm 256 def
894 2 281 2324 B
1 F
n
/fm 256 def
894 2 281 2330 B
1 F
n
/fm 256 def
8 2 1176 2324 B
1 F
n
/fm 256 def
8 2 1176 2330 B
1 F
n
/fm 256 def
887 2 1185 2324 B
1 F
n
/fm 256 def
887 2 1185 2330 B
1 F
n
/fm 256 def
2 8 2079 2324 B
1 F
n
/fm 256 def
8 2 2073 2324 B
1 F
n
/fm 256 def
2 2 2073 2330 B
1 F
n
/fm 256 def
2 2 2073 2330 B
1 F
n
/fm 256 def
2 239 272 2333 B
1 F
n
/fm 256 def
2 239 278 2333 B
1 F
n
/fm 256 def
2 239 1176 2333 B
1 F
n
/fm 256 def
2 239 2073 2333 B
1 F
n
/fm 256 def
2 239 2079 2333 B
1 F
n
gs 895 57 281 2324 CB
565 2334 324 (Authenticated by:) 324 SB
gr
gs 895 57 281 2516 CB
531 2526 393 (\(Contracting Agency\)) 393 SB
gr
gs 894 57 1179 2324 CB
1503 2334 248 (Approved by:) 248 SB
gr
gs 894 57 1179 2516 CB
1516 2526 223 (\(Contractor\)) 223 SB
gr
/fm 256 def
2 2 278 2573 B
1 F
n
/fm 256 def
2 2 272 2573 B
1 F
n
/fm 256 def
894 2 281 2573 B
1 F
n
/fm 256 def
2 2 1176 2573 B
1 F
n
/fm 256 def
893 2 1179 2573 B
1 F
n
/fm 256 def
2 2 2079 2573 B
1 F
n
/fm 256 def
2 2 2073 2573 B
1 F
n
/fm 256 def
2 191 272 2576 B
1 F
n
/fm 256 def
2 191 278 2576 B
1 F
n
/fm 256 def
2 8 272 2768 B
1 F
n
/fm 256 def
8 2 272 2774 B
1 F
n
/fm 256 def
2 2 278 2768 B
1 F
n
/fm 256 def
2 2 278 2768 B
1 F
n
/fm 256 def
894 2 281 2768 B
1 F
n
/fm 256 def
894 2 281 2774 B
1 F
n
/fm 256 def
2 191 1176 2576 B
1 F
n
/fm 256 def
8 2 1176 2768 B
1 F
n
/fm 256 def
8 2 1176 2774 B
1 F
n
/fm 256 def
887 2 1185 2768 B
1 F
n
/fm 256 def
887 2 1185 2774 B
1 F
n
/fm 256 def
2 191 2073 2576 B
1 F
n
/fm 256 def
2 191 2079 2576 B
1 F
n
/fm 256 def
2 8 2079 2768 B
1 F
n
/fm 256 def
8 2 2073 2774 B
1 F
n
/fm 256 def
2 2 2073 2768 B
1 F
n
/fm 256 def
2 2 2073 2768 B
1 F
n
gs 895 51 281 2717 CB
669 2721 116 (\(Date\)) 116 SB
gr
gs 894 51 1179 2717 CB
1569 2721 116 (\(Date\)) 116 SB
gr
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica
%%Page: 68 68
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1984 119 92 (Page ) 92 SB
2076 119 24 (ii) 24 SB
300 169 326 (30 September 1994) 326 SB
0 0 0 fC
/fm 256 def
1811 2 294 221 B
1 F
n
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
987 328 426 (Table of Contents) 426 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 473 898 (Chapter 1 - Introduction to the DIS Gateway) 898 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1209 473 416 (................................) 416 SB
1625 473 390 (..............................) 390 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 473 25 (1) 25 SB
450 532 529 (What is the DIS Gateway?) 529 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
988 532 416 (................................) 416 SB
1404 532 416 (................................) 416 SB
1820 532 195 (...............) 195 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 532 25 (1) 25 SB
450 591 815 (What is needed to use the DIS Gateway?) 815 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1274 591 416 (................................) 416 SB
1690 591 325 (.........................) 325 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 591 25 (1) 25 SB
450 650 1053 (What do you need to know to use the DIS Gateway?) 1053 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1508 650 416 (................................) 416 SB
1924 650 91 (.......) 91 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 650 25 (1) 25 SB
450 709 698 (How does the DIS Gateway work?) 698 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1157 709 416 (................................) 416 SB
1573 709 416 (................................) 416 SB
1989 709 26 (..) 26 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 709 25 (1) 25 SB
450 768 1004 (What are the special features of the DIS Gateway?) 1004 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1456 768 416 (................................) 416 SB
1872 768 143 (...........) 143 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 768 25 (2) 25 SB
300 852 945 (Chapter 2 - How do you use the DIS Gateway?) 945 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1248 852 416 (................................) 416 SB
1664 852 351 (...........................) 351 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 852 25 (3) 25 SB
450 911 728 (How do you start the DIS Gateway?) 728 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1183 911 416 (................................) 416 SB
1599 911 416 (................................) 416 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 911 25 (3) 25 SB
450 970 828 (How do you configure the DIS Gateway?) 828 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1287 970 416 (................................) 416 SB
1703 970 312 (........................) 312 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 970 25 (3) 25 SB
450 1029 725 (How do you stop the DIS Gateway?) 725 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1183 1029 416 (................................) 416 SB
1599 1029 416 (................................) 416 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1029 25 (3) 25 SB
450 1088 1016 (What are the callable routines in the DIS Gateway?) 1016 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1469 1088 416 (................................) 416 SB
1885 1088 130 (..........) 130 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1088 25 (4) 25 SB
600 1147 391 (DG_Status.Success) 391 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1001 1147 416 (................................) 416 SB
1417 1147 416 (................................) 416 SB
1833 1147 182 (..............) 182 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1147 25 (7) 25 SB
600 1206 371 (DG_Status.Failure) 371 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
975 1206 416 (................................) 416 SB
1391 1206 416 (................................) 416 SB
1807 1206 208 (................) 208 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1206 25 (8) 25 SB
600 1265 541 (DG_Client.Initialize_Client) 541 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1144 1265 416 (................................) 416 SB
1560 1265 416 (................................) 416 SB
1976 1265 39 (...) 39 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1265 25 (9) 25 SB
600 1324 786 (DG_Client.Terminate_Server_Interface) 786 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1391 1324 416 (................................) 416 SB
1807 1324 208 (................) 208 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1324 50 (10) 50 SB
600 1383 749 (DG_Client.Synchronize_With_Server) 749 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1352 1383 416 (................................) 416 SB
1768 1383 247 (...................) 247 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1383 50 (11) 50 SB
600 1442 584 (DG_Client.Client_Connected) 584 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1196 1442 416 (................................) 416 SB
1612 1442 403 (...............................) 403 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1442 50 (12) 50 SB
600 1501 548 (DG_Client.Get_Next_PDU) 548 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1157 1501 416 (................................) 416 SB
1573 1501 416 (................................) 416 SB
1989 1501 26 (..) 26 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1501 50 (13) 50 SB
600 1560 666 (DG_Client.Get_Simulation_State) 666 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1274 1560 416 (................................) 416 SB
1690 1560 325 (.........................) 325 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1560 50 (14) 50 SB
600 1619 553 (DG_Client.Get_Entity_Info) 553 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1157 1619 416 (................................) 416 SB
1573 1619 416 (................................) 416 SB
1989 1619 26 (..) 26 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1619 50 (15) 50 SB
600 1678 897 (DG_Client.Get_Entity_Info_By_Hash_Index) 897 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1508 1678 416 (................................) 416 SB
1924 1678 91 (.......) 91 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1678 50 (16) 50 SB
600 1737 799 (DG_Client.Get_First_Simulation_Entity) 799 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1404 1737 416 (................................) 416 SB
1820 1737 195 (...............) 195 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1737 50 (17) 50 SB
600 1796 806 (DG_Client.Get_Next_Simulation_Entity) 806 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1417 1796 416 (................................) 416 SB
1833 1796 182 (..............) 182 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1796 50 (18) 50 SB
600 1855 702 (DG_Client.Get_Entity_Transmitter) 702 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1313 1855 416 (................................) 416 SB
1729 1855 286 (......................) 286 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1855 50 (19) 50 SB
600 1914 651 (DG_Client.Get_Entity_Emission) 651 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1261 1914 416 (................................) 416 SB
1677 1914 338 (..........................) 338 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1914 50 (20) 50 SB
600 1973 452 (DG_Client.Send_PDU) 452 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1053 1973 416 (................................) 416 SB
1469 1973 416 (................................) 416 SB
1885 1973 130 (..........) 130 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1973 50 (21) 50 SB
600 2032 547 (DG_Client.Get_Entity_List) 547 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1157 2032 416 (................................) 416 SB
1573 2032 416 (................................) 416 SB
1989 2032 26 (..) 26 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2032 50 (22) 50 SB
600 2091 783 (DG_Generic_PDU.Free_Generic_PDU) 783 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1391 2091 416 (................................) 416 SB
1807 2091 208 (................) 208 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2091 50 (23) 50 SB
600 2150 865 (DG_Generic_PDU.Null_Generic_PDU_Ptr) 865 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1469 2150 416 (................................) 416 SB
1885 2150 130 (..........) 130 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2150 50 (24) 50 SB
600 2209 887 (DG_Generic_PDU.Valid_Generic_PDU_Ptr) 887 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1495 2209 416 (................................) 416 SB
1911 2209 104 (........) 104 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2209 50 (25) 50 SB
600 2268 1091 (DG_Generic_PDU.Generic_Ptr_To_PDU_Header_Ptr) 1091 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1703 2268 312 (........................) 312 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2268 50 (26) 50 SB
600 2327 1194 (DG_Generic_PDU.Generic_Ptr_To_Entity_State_PDU_Ptr) 1194 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1794 2327 221 (.................) 221 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2327 50 (27) 50 SB
600 2386 1025 (DG_Generic_PDU.Generic_Ptr_To_Fire_PDU_Ptr) 1025 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1625 2386 390 (..............................) 390 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2386 50 (28) 50 SB
600 2445 1169 (DG_Generic_PDU.Generic_Ptr_To_Detonation_PDU_Ptr) 1169 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1781 2445 234 (..................) 234 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2445 50 (29) 50 SB
600 2504 1244 (DG_Generic_PD.Generic_Ptr_To_Service_Request_PDU_Ptr) 1244 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1846 2504 169 (.............) 169 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2504 50 (30) 50 SB
600 2563 1261 (DG_Generic_PDU.Generic_Ptr_To_Resupply_Offer_PDU_Ptr) 1261 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1872 2563 143 (...........) 143 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2563 50 (31) 50 SB
600 2622 1338 (DG_Generic_PDU.Generic_Ptr_To_Resupply_Received_PDU_Ptr) 1338 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1950 2622 65 (.....) 65 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2622 50 (32) 50 SB
600 2681 948 (DG_Generic_PDU.Repair_Complete_PDU_Ptr) 948 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1560 2681 416 (................................) 416 SB
1976 2681 39 (...) 39 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2681 50 (33) 50 SB
600 2740 946 (DG_Generic_PDU.Repair_Response_PDU_Ptr) 946 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1547 2740 416 (................................) 416 SB
1963 2740 52 (....) 52 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2740 50 (34) 50 SB
600 2799 776 (DG_Generic_PDU.Collision_PDU_Ptr) 776 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1378 2799 416 (................................) 416 SB
1794 2799 221 (.................) 221 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2799 50 (35) 50 SB
600 2858 1223 (DG_Generic_PDU.Generic_Ptr_To_Create_Entity_PDU_Ptr) 1223 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1833 2858 182 (..............) 182 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2858 50 (36) 50 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Roman
%%Page: 69 69
%%PageResources: (atend)
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
300 119 647 (ADIS DG Software Reference Manual) 647 SB
1972 119 92 (Page ) 92 SB
2064 119 36 (iii) 36 SB
300 169 326 (30 September 1994) 326 SB
0 0 0 fC
/fm 256 def
1811 2 294 221 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
600 269 1256 (DG_Generic_PDU.Generic_Ptr_To_Remove_Entity_PDU_Ptr) 1256 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1859 269 156 (............) 156 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 269 50 (37) 50 SB
600 328 1227 (DG_Generic_PDU.Generic_Ptr_To_Start_Resume_PDU_Ptr) 1227 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1833 328 182 (..............) 182 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 328 50 (38) 50 SB
600 387 1198 (DG_Generic_PDU.Generic_Ptr_To_Stop_Freeze_PDU_Ptr) 1198 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1807 387 208 (................) 208 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 387 50 (39) 50 SB
600 446 1221 (DG_Generic_PDU.Generic_Ptr_To_Acknowledge_PDU_Ptr) 1221 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1833 446 182 (..............) 182 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 446 50 (40) 50 SB
600 505 1127 (DG_Generic_PDU.Generic_Ptr_To_Emission_PDU_Ptr) 1127 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1729 505 286 (......................) 286 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 505 50 (41) 50 SB
600 564 1057 (DG_Generic_PDU.Generic_Ptr_To_Laser_PDU_Ptr) 1057 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1664 564 351 (...........................) 351 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 564 50 (42) 50 SB
600 623 1178 (DG_Generic_PDU.Generic_Ptr_To_Transmitter_PDU_Ptr) 1178 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1781 623 234 (..................) 234 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 623 50 (43) 50 SB
600 682 1121 (DG_Generic_PDU.Generic_Ptr_To_Receiver_PDU_Ptr) 1121 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1729 682 286 (......................) 286 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 682 50 (44) 50 SB
600 741 1251 (DG_Generic_PDU.Generic_Ptr_to_Action_Request_PDU_Ptr) 1251 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1859 741 156 (............) 156 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 741 50 (45) 50 SB
600 800 1296 (DG_Generic_PDU.Generic_Ptr_To_Action_Response_PDU_Ptr) 1296 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1898 800 117 (.........) 117 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 800 50 (46) 50 SB
600 859 1190 (DG_Generic_PDU.Generic_Ptr_To_Data_Query_PDU_Ptr) 1190 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1794 859 221 (.................) 221 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 859 50 (47) 50 SB
600 918 1132 (DG_Generic_PDU.Generic_Ptr_To_Set_Data_PDU_Ptr) 1132 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1742 918 273 (.....................) 273 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 918 50 (48) 50 SB
600 977 1042 (DG_Generic_PDU.Generic_Ptr_To_Data_PDU_Ptr) 1042 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1651 977 364 (............................) 364 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 977 50 (49) 50 SB
600 1036 1226 (DG_Generic_PDU.Generic_Ptr_To_Event_Report_PDU_Ptr) 1226 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1833 1036 182 (..............) 182 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1036 50 (50) 50 SB
600 1095 1120 (DG_Generic_PDU.Generic_Ptr_To_Message_PDU_Ptr) 1120 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1729 1095 286 (......................) 286 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1095 50 (51) 50 SB
600 1154 1070 (DG_Generic_PDU.Generic_Ptr_To_Signal_PDU_Ptr) 1070 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1677 1154 338 (..........................) 338 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1154 50 (52) 50 SB
300 1238 1017 (Chapter 3 - How do you modify the DIS Gateway?) 1017 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1326 1238 416 (................................) 416 SB
1742 1238 273 (.....................) 273 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1238 50 (53) 50 SB
450 1297 1465 (What would you do to port the DG to a different architecture, such as the) 1465 SB
450 1356 128 (VAX?) 128 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
585 1356 416 (................................) 416 SB
1001 1356 416 (................................) 416 SB
1417 1356 416 (................................) 416 SB
1833 1356 182 (..............) 182 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1356 50 (53) 50 SB
450 1415 852 (What is the basic "outline" of a DG Client?) 852 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1313 1415 416 (................................) 416 SB
1729 1415 286 (......................) 286 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1415 50 (53) 50 SB
300 1499 1130 (Chapter 4 - How do you troubleshoot the DIS Gateway?) 1130 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1430 1499 416 (................................) 416 SB
1846 1499 169 (.............) 169 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1499 50 (54) 50 SB
450 1558 1126 (What should I do if the DG Server or my Client crashes?) 1126 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1586 1558 416 (................................) 416 SB
2002 1558 13 (.) 13 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1558 50 (54) 50 SB
300 1642 1168 (Appendix - Additional information about the DIS Gateway) 1168 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1469 1642 416 (................................) 416 SB
1885 1642 130 (..........) 130 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1642 50 (56) 50 SB
450 1701 622 (Unit/Filename Cross-Reference) 622 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1079 1701 416 (................................) 416 SB
1495 1701 416 (................................) 416 SB
1911 1701 104 (........) 104 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1701 50 (56) 50 SB
450 1760 878 (Error Message/Error Code Cross-Reference) 878 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1339 1760 416 (................................) 416 SB
1755 1760 260 (....................) 260 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 1760 50 (59) 50 SB
32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font13 ANSIFont font
1119 2021 161 (Tables) 161 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
300 2141 523 (Table 1, Callable Routines) 523 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
832 2141 416 (................................) 416 SB
1248 2141 416 (................................) 416 SB
1664 2141 351 (...........................) 351 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2025 2141 25 (4) 25 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Helvetica-Bold
%%+ font Times-Roman
%%Trailer
SVDoc restore
end
%%Pages: 69
% TrueType font name key:
%    MSTT31c11b = 35e7DArialF0000003a000002bc0000
%    MSTT31c126 = 35e7DArialF00000032000002bc0000
%    MSTT31c131 = 35e7DTimes New RomanF00000032000001900000
%    MSTT31c13e = 35e7DTimes New RomanF0000002a000001900000
%    MSTT31c157 = 35e7DTimes New RomanF00000032000001900001
%    MSTT31c172 = 35e7DArialF0000002a000001900000
%    MSTT31c17d = 35e7DCourier NewF0000002a000001900000
%    MSTT31c189 = 35e7DTimes New RomanF0000002a000001900001
%    MSTT31c196 = 35e7DArialF0000002a000002bc0000
%    MSTT31c1a1 = 35e7DTimes New RomanF00000032000002bc0000
%    MSTT31c1ae = 35e7DArialF00000032000001900000
%    MSTT31c1b9 = 35e7DArialF0000003a000001900000
%    MSTT31c1c4 = 0b1fDTimes New RomanF0000002a000001900000
%    MSTT31c1ea = 0b1fDArialF0000003a000002bc0000
%    MSTT31c1f5 = 0b1fDArialF00000032000002bc0000
%    MSTT31c200 = 0b1fDTimes New RomanF00000032000001900000
%    MSTT31c20d = 0b1fDTimes New RomanF00000032000001900001
%    MSTT31c21a = 0b1fDArialF0000002a000001900000
%    MSTT31c225 = 0b1fDCourier NewF0000002a000001900000
%    MSTT31c231 = 0b1fDTimes New RomanF0000002a000001900001
%    MSTT31c23e = 0b1fDArialF0000002a000002bc0000
%    MSTT31c249 = 0b1fDTimes New RomanF00000032000002bc0000
%    MSTT31c256 = 0b1fDArialF00000032000001900000
%    MSTT31c261 = 0b1fDArialF0000003a000001900000
%%DocumentSuppliedResources: procset Win35Dict 3 1

%%DocumentNeededResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman

%%EOF
